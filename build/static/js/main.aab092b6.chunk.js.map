{"version":3,"sources":["Components/Message/imgchatgroup.png","Components/images/login/profile/society1.jpg","Components/images/login/profile/society2.jpg","Components/images/profile/upload1.png","Components/images/login/profile/society3.jpg","Components/images/profile/upload.png","Components/Message/meo.jpg","Components/Profile/MainProfile.js","Services/auth.service.js","Components/Auth/LoginForm.js","Components/Auth/RegisterForm.js","Components/Auth/MainAuth.js","Components/utils/index.util.js","Components/Auth/PrivateRoute.js","Components/Auth/PublicRoute.js","Services/auth-header.service.js","Actions/post.action.js","Actions/user.action.js","Constants/index.constant.js","Actions/contact.action.js","Components/Home/LeftFixed.js","Components/Home/MainNotFixed.js","Components/Home/Header/Search.js","socket/configSocket.js","Actions/message.action.js","Components/Home/Header/Nav.js","Components/Home/RightFixed.js","Components/Home/MainHome.js","Components/Admin/HomeAdmin/Header/Nav.js","Components/Admin/HomeAdmin/Modal.js","Components/Admin/HomeAdmin/Header/Topbar.js","Components/Admin/HomeAdmin/Content.js","Components/Admin/Chart.js","Actions/admin.action.js","Components/Admin/HomeAdmin/MainHomeAdmin.js","Components/Profile/EditForm/PerEdit.js","Components/Profile/EditForm/HighEdit.js","Components/Profile/EditForm/UniEdit.js","Components/Profile/EditForm/AddressEdit.js","Components/Profile/EditForm/MoreEdit.js","Components/Profile/LeftFixedProfile.js","Components/Message/Mess.js","Components/Auth/RecoverForm.js","Components/Auth/ResetPasswordForm.js","Components/Admin/HomeAdmin/TableUsers/TableUsers.js","Components/Admin/HomeAdmin/TableUsers/MainTableUsers.js","Components/Admin/HomeAdmin/TablePosts/TablePosts.js","Components/Admin/HomeAdmin/TablePosts/MainTablePosts.js","Components/Admin/Dashboard/common/PageTitle.js","Components/utils/chart.js","Components/Admin/Dashboard/common/SmallStats.js","Components/Admin/Dashboard/common/RangeDatePicker.js","Components/Admin/Dashboard/blog/UsersOverview.js","Components/Admin/Dashboard/blog/UsersByDevice.js","Components/Admin/Dashboard/blog/NewDraft.js","Components/Admin/Dashboard/blog/Discussions.js","Components/Admin/Dashboard/common/TopReferrals.js","Components/Admin/Dashboard/BlogOverview.js","Components/Admin/Dashboard/MainDashboard.js","Components/Message/ListUsers.js","Components/Message/ChatFrame.js","Components/Message/MasterMessage.js","Components/Society/Friends.js","Components/Society/MasterSociety.js","App.js","Reducers/auth.reducer.js","Reducers/user.reducer.js","Reducers/post.reducer.js","Reducers/currentUser.reducer.js","Reducers/getUserById.reducer.js","Reducers/contact.reducer.js","Reducers/admin.reducer.js","Reducers/message.reducer.js","Reducers/index.reducer.js","Store.js","index.js"],"names":["module","exports","time1","register","email","password","firstName","lastName","birthday","sex","a","axios","post","API_URL_AUTH","login","recover","reset","token","get","resetPassword","LoginForm","props","isChange","event","setState","target","name","value","handleLogin","e","preventDefault","AuthService","state","res","data","localStorage","setItem","JSON","stringify","user","window","location","assign","reload","resMessage","response","message","toString","alert","error","loading","isLogin","className","onSubmit","this","type","placeholder","required","onChange","to","style","textDecoration","id","Component","withAlert","RegisterForm","handleRegister","year","month","day","length","success","male","female","other","Boolean","successful","Array","map","i","key","defaultValue","htmlFor","MainAuth","addClass","signUpButton","document","getElementById","signInButton","container","addEventListener","classList","add","remove","onClick","logout","removeItem","getItem","PrivateRoute","component","rest","render","PublicRoute","restricted","authHeader","parse","uploadProfileImg","formData","fetch","method","body","json","file","url","API_URL_POST","headers","profileImage","console","log","upLoadCoverImages","coverImages","getAllUsers","dispatch","users","payload","getContacts","contacts","addFriend","contactId","notificationId","API_URL_CONTACT","cancelRequest","delete","LeftFixed","handleLogout","isChangeUpLoad","FormData","append","files","postActions","path","getProfileImage","nextProps","nextContext","ct","_id","status","userId","friendQuantity","getCurrentUser","src","upload","alt","href","connect","currentUserReducer","contactReducer","API_URL_USER","currentUser","contactActions","MainNotFixed","handleSubmit","arr","userPosts","like","dislike","liked","disliked","comments","postId","ObjectID","quotes","postImg","addPost","unshift","increase","likeRec","dislikeRec","thumbSupRec","thumbsDownRec","idName1","idName2","thumbSup","thumbsDown","parseInt","innerHTML","up","color","pointerEvents","down","decrease","handleSubmitComment","find","comment","commentId","content","push","postComment","resetForm","onClickRemovePost","postID","removePost","rm","filter","editSubmit","editPost","editedQuotes","funcEditSetTimeout","_this","setTimeout","getEditPostInfo","editPostImg","onClickRemoveComment","removeComment","getEditCommentInfo","editContent","isCommentClose","handleEditComment","editComment","isCommentEdit","formComment","getElementsByClassName","cm","getCurrentUserPosts","modal","replace","display","n","marginBottom","paddingBottom","enableModal","title","disableModal","moment","createdAt","fromNow","m","u","postReducer","isCheckPull","put","API_URL_COMMENT","Search","toSlug","str","toLowerCase","getUsers","array","forEach","matchUsers","indexOf","trim","redirect","redirectId","item","querySelectorAll","inputProps","wrapperStyle","position","items","getItemValue","shouldItemRender","onSelect","renderMenu","children","renderItem","isHighlighted","abbr","socket","socketIOClient","config","on","emit","msg","getContactsByStatusIsTrue","API_URL_MESSAGE","getChatGroupId","conversationId","err","uploadImgUrl","updatedAtWhenSubmit","friends","Nav","requestConfirmFriend","configSocket","countFriends","countNotifications","bell","notifications","requestAddFriend","emitCancelRequest","friend","getCountFriends","exact","activeClassName","handleClick","aria-hidden","notificationContainer","notification","backgroundColor","width","marginTop","messageReducer","messageActions","RightFixed","notSentFriend","userID","friendID","followQuantity","follow","addFriendSociety","cancelReqSociety","cancelReq","sentFriend","difference","other_profile","rel","A","B","count","C","j","userReducer","userActions","MainHome","Modal","tabIndex","role","aria-labelledby","data-dismiss","aria-label","Topbar","aria-describedby","data-toggle","aria-haspopup","aria-expanded","data-target","Content","API_URL_ADMIN","userAccountLock","permissions","isVerified","changePermissions","removeUser","PerEdit","phone","religion","updatePerDetail","setUser","Date","getDate","getMonth","getFullYear","align","action","selected","HighEdit","left","min","max","UniEdit","AddressEdit","MoreEdit","padding","margin","border","boxSizing","borderRadius","fontSize","LeftFixedProfile","handleUpLoadProfileImg","handleUpLoadCoverImages","pathArr","showSlides","society1","society2","society3","onClickUnFriend","isContact","unFriend","undefined","isAddFriend","accept","onMouseOver","stopTime","onMouseOut","startTime","currentSlide","plusSlides","highSchool","academyYear","university","fieldOfStudy","country","city","district","village","street","relationship","interested","hobby","Mess","slideIndex","click","MainProfile","slide","bubble","params","match","getUserById","getIsContact","getIsAddFriend","clearTimeout","onLoad","RecoverForm","ResetPasswordForm","isReset","cfpassword","checkPassword","exec","TablePosts","isChangeSearch","fullName","slice","offset","perPage","postData","stateShow","receivedData","pageCount","Math","ceil","totalItemsCount","handlePageClick","selectedPage","currentPage","accountLock","permissionsAdmin","adminActions","isChangePermissions","onClickRemoveUser","sort","field","typeSort","b","ageA","textSearch","dataTable_length","aria-controls","cellSpacing","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","MainTableUsers","TableUsers","users_admin","pushFullName","postsData","posts","admin","arrSort","displayFullName","getHours","getMinutes","getSeconds","arrayPosts","MainTablePosts","PageTitle","subtitle","attrs","classes","classNames","xs","sm","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","React","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","chartData","chartConfig","labels","chartLabels","datasets","options","current","variation","label","percentage","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","small","height","ref","shortid","defaultProps","Object","create","RangeDatePicker","startDate","endDate","handleStartDateChange","bind","handleEndDateChange","size","placeholderText","dropdownMode","UsersOverview","callback","tick","index","toFixed","hover","mode","intersect","BlogUsersOverview","buoMeta","getDatasetMeta","_model","maxWidth","from","_","fill","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","UsersByDevice","boxWidth","cutoutPercentage","hoverBorderColor","NewDraft","theme","Discussions","discussions","discussion","idx","author","image","date","TopReferrals","referralData","flush","BlogOverview","smallStats","getStats","fluid","noGutters","stats","lg","md","adminReducer","MainDashboard","ListUsers","requestSendMessage","chatGroupId","chatGroup","fontWeight","cssText","messageType","senderId","text","sender","handleChange","members","arrHasMessage","isArray","messages","firstMessage","onClickGetFriends","onClickGetChatGroups","chatGroups","onGetChatGroupId","onGetConversationId","getConversationId","updateScroll","$","animate","scrollTop","scrollHeight","onChangeIsRead","messageId","chatGroupsImg","substr","updatedAt","changeIsRead","ChatFrame","conversations","fi","onEmojiClick","emojiObject","inputMessage","emoji","showEmoji","isEmoji","showName","conversation","showImg","getMessage","imgUrl","getFirstMessageWhenSubmit","getConversationIdWhenSubmit","addMessage","messageAmount","receiverId","conversationType","profileImg","receiver","fileUrl","now","chosenEmoji","converId","loadMessageSocket","MasterMessage","getMessagesByParamsId","Friends","confirm","confirmFriend","deleteContact","removeContact","contact","imgFriend","MasterSociety","App","ResetPwForm","initialState","authReducer","sortCreatedAt","con","myReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","positions","TOP_CENTER","timeout","transition","transitions","SCALE","ReactDOM","template","AlertTemplate"],"mappings":"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","file":"static/js/main.aab092b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgchatgroup.083f9eb2.png\";","module.exports = __webpack_public_path__ + \"static/media/society1.2c70f7b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/society2.c60e3fbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/upload1.ace13d57.png\";","module.exports = __webpack_public_path__ + \"static/media/society3.780ac448.jpg\";","module.exports = __webpack_public_path__ + \"static/media/upload.b84e34a1.png\";","module.exports = __webpack_public_path__ + \"static/media/meo.c43ae03a.jpg\";","import React, {Component} from 'react';\nimport LeftFixedProfile from \"./LeftFixedProfile\";\nimport Mess from \"../Message/Mess\";\nimport RightFixed from \"../Home/RightFixed\";\nimport * as userActions from \"../../Actions/user.action\";\nimport {connect} from \"react-redux\";\nimport Nav from \"../Home/Header/Nav\";\nimport \"./profile.css\"\nimport * as contactActions from \"../../Actions/contact.action\";\n\nlet slideIndex = 1;\nlet click = 0;\nlet time1;\n\nclass MainProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        const {match: {params}} = this.props;\n        this.props.getUserById(params.userId);\n        this.props.getIsContact(params.userId);\n        this.props.getIsAddFriend(params.userId);\n    }\n\n    plusSlides(n) {\n        click = 1;\n        this.showSlides(slideIndex += n);\n    }\n\n    currentSlide(n) {\n        click = 1;\n        this.showSlides(slideIndex = n);\n    }\n\n    showSlides = (n) => {\n        let _this = this\n        let slide = document.getElementsByClassName(\"singleslide\");\n        let bubble = document.getElementsByClassName(\"dot\");\n\n        if (n > slide.length) {\n            slideIndex = 1;\n        }\n        if (n < 1) {\n            slideIndex = slide.length;\n        }\n\n        for (let i = 0; i < slide.length; i++) {\n            slide[i].style.display = \"none\";\n            if (bubble[i]) {\n                bubble[i].className = bubble[i].className.replace(\" active\", \"\");\n            }\n\n        }\n        if (!slide[slideIndex - 1]) {\n\n        } else {\n            slide[slideIndex - 1].style.display = \"block\";\n            bubble[slideIndex - 1].className += \" active\";\n            if (click === 0)\n                time1 = setTimeout(function () {\n                    _this.showSlides(slideIndex += 1);\n                }, 6000);\n            else if (click === 1)\n                click = 0;\n        }\n\n    };\n\n\n    stopTime() {\n        clearTimeout(time1);\n\n    }\n\n    startTime() {\n        if (click === 0)\n            this.showSlides(slideIndex);\n    }\n\n\n    disableModal(n) {\n        let modal = document.getElementsByClassName('modal');\n        modal[n].className = modal[n].className.replace(\" animate\", \" deanimate\");\n        setTimeout(function () {\n            document.getElementsByClassName('modal')[n].style.display = 'none';\n        }, 500);\n    }\n\n    enableModal() {\n        let modal = document.getElementsByClassName('modal');\n        modal[0].className = modal[0].className.replace(\" deanimate\", \" animate\");\n        document.getElementsByClassName('modal')[0].style.display = 'block';\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Nav/>\n                <div className=\"content\" onLoad={() => this.showSlides(1)}>\n\n                    <div className=\"wrapper\">\n                        <LeftFixedProfile\n                            stopTime={() => this.stopTime()}\n                            startTime={() => this.startTime()}\n                            currentSlide={(n) => this.currentSlide(n)}\n                            plusSlides={(n) => this.plusSlides(n)}\n                            enableModal={() => this.enableModal()}\n                            disableModal={(n) => this.disableModal(n)}\n                            user={this.props.user}\n                            isContact={this.props.isContact}\n                            isAddFriend={this.props.isAddFriend}\n                        />\n                        <RightFixed/>\n                        <Mess/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.getUserById,\n    users: state.userReducer,\n    isContact: state.contactReducer.isContact,\n    isAddFriend: state.contactReducer.isAddFriend\n});\nconst mapDispatchToProps = dispatch => ({\n    getUserById: (id) => dispatch(userActions.getUserById(id)),\n    getIsContact: (contactId) => dispatch(contactActions.getIsContact(contactId)),\n    getIsAddFriend: (contactId) => dispatch(contactActions.getIsAddFriend(contactId)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(MainProfile);\n","import axios from \"axios\";\nimport * as types from \"../Constants/index.constant\";\n\nconst API_URL_AUTH = \"/api/auth/\";\n\n\nexport const register = async (email, password, firstName, lastName, birthday, sex) => {\n    return await axios.post(API_URL_AUTH + \"register\", {email, password, firstName, lastName, birthday, sex});\n};\n\nexport const login = async (email, password) => {\n    return await axios.post(API_URL_AUTH + \"login\", {email, password})\n};\n\nexport const recover = async (email) => {\n    return await axios.post(API_URL_AUTH + \"recover\", {email});\n};\n\n\nexport const reset = async (token) => {\n    return await axios.get(\"/api/auth/reset/\" + token);\n};\n\nexport const resetPassword = async (token, password) => {\n    return await axios.post(\"/api/auth/reset/\" + token, {password});\n};\n\nexport const facebook = async (id, email, name) => {\n    return await axios.post(\"/api/auth/facebook/\" + id, {email, name});\n};\n\n// logout()\n// {\n//     localStorage.removeItem(\"user\")\n// }\n// getCurrentUser()\n// {\n//     return JSON.parse(localStorage.getItem(\"user\"))\n// }\n// }\n\n\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport {withAlert} from 'react-alert'\nimport * as AuthService from \"../../Services/auth.service\"\n\n\n\nclass LoginForm extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            message: \"\",\n            loading: false,\n            isLogin: true,\n        }\n    }\n\n    isChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n    handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await AuthService.login(this.state.email, this.state.password);\n            const {data} = res;\n            if (data.token) {\n                localStorage.setItem(\"jwt\", JSON.stringify(data.token));\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\n                window.location.assign(\"/home\");\n                window.location.reload();\n            }\n        } catch (error) {\n            const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n            this.props.alert.error(resMessage);\n            this.setState({password: \"\"})\n        }\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"form-container sign-in-container\">\n                <form onSubmit={this.handleLogin}>\n                    <h1>Đăng Nhập</h1>\n                    {/*<div className=\"social-container\">*/}\n                    {/*    /!*<Facebook/>*!/*/}\n\n                    {/*    /!*<a href=\"https://localhost:4000/auth/facebook\" className=\"social\"*!/*/}\n                    {/*    /!*>*!/*/}\n                    {/*    /!*    <i className=\"fa fa-facebook-f\"*!/*/}\n                    {/*    /!*    />*!/*/}\n                    {/*    /!*</a>*!/*/}\n                    {/*    /!*</a>*!/*/}\n                    {/*    /!*<a href=\"#1\" className=\"social\">*!/*/}\n                    {/*    /!*    <i className=\"fa fa-google\"/>*!/*/}\n                    {/*    /!*</a>*!/*/}\n                    {/*    /!*<a href=\"#1\" className=\"social\">*!/*/}\n                    {/*    /!*    <i className=\"fa fa-twitter\"/>*!/*/}\n                    {/*    /!*</a>*!/*/}\n                    {/*</div>*/}\n\n                    <input type=\"email\"\n                           name=\"email\"\n                           className=\"txt\"\n                           placeholder=\"Nhập email: username@gmail.com\"\n                           required\n                           value={this.state.email}\n                           onChange={this.isChange}\n                    />\n                    <input type=\"password\"\n                           name=\"password\"\n                           className=\"txt\"\n                           placeholder=\"Nhập password: 123123\"\n                           required\n                           value={this.state.password}\n                           onChange={this.isChange}\n                    />\n                    <Link to=\"/recover\" style={{textDecoration: 'none'}}>Quên <strong>mật khẩu</strong> của bạn?</Link>\n                    <button id=\"submitbtn\">Đăng Nhập</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default withAlert()(LoginForm);\n\n\n","import React, {Component} from 'react';\n\nimport {withAlert} from 'react-alert'\n\nimport * as AuthService from \"../../Services/auth.service\"\n\nclass RegisterForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            day: \"31\",\n            month: \"7\",\n            year: \"1998\",\n            male: true,\n            female: false,\n            other: \"Tuỳ chỉnh\",\n            sex: Boolean,\n            message: \"\",\n            successful: false,\n        };\n    }\n\n\n    isChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleRegister = async (e) => {\n        e.preventDefault();\n        const birthday = this.state.year + \"-\" + this.state.month + \"-\" + this.state.day;\n        if (this.state.password.length < 6) {\n            this.props.alert.error(\"Mật khẩu phải chứa ít nhất 6 ký tự\");\n            return this.setState({password: \"\"});\n        }\n        try {\n            const res = await AuthService.register(this.state.email, this.state.password, this.state.firstName, this.state.lastName, birthday, this.state.sex)\n            const {data} = res;\n            this.props.alert.success(data.message);\n            this.setState({email: \"\", password: \"\"});\n        } catch (error) {\n            const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n            this.props.alert.error(resMessage)\n            this.setState({email: \"\", password: \"\"});\n        }\n\n\n    };\n\n    render() {\n\n\n        return (\n            <div className=\"form-container sign-up-container\">\n                <form onSubmit={this.handleRegister}>\n                    <h1>Đăng Ký</h1>\n                    {/*<div className=\"social-container\">*/}\n                    {/*    <a href=\"#1\" className=\"social\">*/}\n                    {/*        <i className=\"fa fa-facebook-f\"/>*/}\n                    {/*    </a>*/}\n                    {/*    <a href=\"#1\" className=\"social\">*/}\n                    {/*        <i className=\"fa fa-google\"/>*/}\n                    {/*    </a>*/}\n                    {/*    <a href=\"#1\" className=\"social\">*/}\n                    {/*        <i className=\"fa fa-twitter\"/>*/}\n                    {/*    </a>*/}\n                    {/*</div>*/}\n                    {/*<span>hoặc sử dụng email của bạn để đăng ký</span>*/}\n                    {/*/!*{(this.props.css || this.state.css) && (*!/*/}\n                    {/*/!*    <span className={this.props.successful ? \"alert alert-success\" : \"alert alert-danger\"}*!/*/}\n                    {/*/!*          role=\"alert\">{this.props.css || this.state.css}</span>*!/*/}\n                    {/*/!*)}*!/*/}\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <input type=\"text\"\n                                   name=\"lastName\"\n                                   className=\"txt input-row\"\n                                   placeholder=\"Họ lót\"\n                                   required\n                                   value={this.state.lastName}\n                                   onChange={this.isChange}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <input type=\"text\"\n                                   name=\"firstName\"\n                                   className=\"txt input-row\"\n                                   placeholder=\"Tên\"\n                                   required\n                                   value={this.state.firstName}\n                                   onChange={this.isChange}\n                            />\n                        </div>\n                    </div>\n                    <input type=\"email\"\n                           name=\"email\"\n                           className=\"txt\"\n                           placeholder=\"Email\"\n                           required\n                           value={this.state.email}\n                           onChange={this.isChange}\n                    />\n                    <input type=\"password\"\n                           name=\"password\"\n                           className=\"txt\"\n                           placeholder=\"Mật khẩu mới\"\n                           required\n                           value={this.state.password}\n                           onChange={this.isChange}\n                    />\n\n                    <div className=\"form-group\">\n                            <label className=\"mb-label-day\">Ngày sinh\n                            </label>\n                            <div className=\"form-row\">\n                                <div className=\"col\">\n                                    <select className=\"custom-select\"\n                                            name=\"day\"\n                                            value={this.state.day}\n                                            onChange={this.isChange}\n                                    >\n                                        <option value={1}>1</option>\n                                        {\n                                            [...Array(30)].map(((value, i) => (\n                                                    <option key={i} value={i + 2}>{i + 2}</option>\n                                                )\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"col\">\n                                    <select className=\"custom-select\"\n                                            id=\"custom-select-month\"\n                                            name=\"month\"\n                                            value={this.state.month}\n                                            onChange={this.isChange}\n                                    >\n                                        <option value={1}>Tháng 1</option>\n                                        {\n                                            [...Array(11)].map(((value, i) => (\n                                                    <option key={i} value={i + 2}>Tháng {i + 2}</option>\n                                                )\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"col\">\n                                    <select className=\"custom-select\"\n                                            name=\"year\"\n                                            value={this.state.year}\n                                            onChange={this.isChange}\n                                    >\n                                        <option>1930</option>\n                                        {\n                                            [...Array(90)].map(((value, i) => (\n                                                    <option key={i} value={i + 1931}>{i + 1931}</option>\n                                                )\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                    </div>\n                    <fieldset className=\"form-group\">\n                        <legend className=\"col-form-label mb-label-sex\">Giới tính</legend>\n                        <div className=\"form-row mar-left\">\n                            <div className=\"form-check form-check-inline col\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"radio\"\n                                    id=\"gridRadios1\"\n                                    name=\"sex\"\n                                    onChange={this.isChange}\n                                    defaultValue={this.state.male}\n                                    required\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"gridRadios1\">\n                                    Nam\n                                </label>\n                            </div>\n                            <div className=\"form-check form-check-inline col\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"sex\"\n                                    onChange={this.isChange}\n                                    id=\"gridRadios2\"\n                                    defaultValue={this.state.female}\n                                    required\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\n                                    Nữ\n                                </label>\n                            </div>\n                        </div>\n                    </fieldset>\n                    <button id=\"submitbtn\"\n                    >Đăng Ký\n                    </button>\n                </form>\n            </div>\n    );\n    }\n    }\n\n    const checkPassword = (password) => {\n        const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,}$/;\n        return regex.exec(password) !== null;\n    };\n\n\n    export default withAlert()(RegisterForm);\n\n","import React, {Component} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport './css/cssAuth.css'\n\nclass MainAuth extends Component {\n    addClass = () => {\n        const signUpButton = document.getElementById('signUp');\n        const signInButton = document.getElementById('signIn');\n        const container = document.getElementById('container');\n\n        signUpButton.addEventListener('click', () => {\n            container.classList.add('right-panel-active');\n        });\n        signInButton.addEventListener('click', () => {\n            container.classList.remove('right-panel-active');\n        });\n    };\n    render() {\n        return (\n            <div className=\"MainAuth\">\n                <div className=\"container\" id=\"container\">\n                    <RegisterForm/>\n                    <LoginForm/>\n                    <div className=\"overlay-container\">\n                        <div className=\"overlay\">\n                            <div className=\"overlay-panel overlay-left\">\n                                <h1>Welcome Back!</h1>\n                                <p>Để liên kết với chúng tôi, vui lòng đăng nhập bằng thông tin cá nhân của bạn.</p>\n                                <button className=\"ghost\" id=\"signIn\" onClick={this.addClass}>\n                                    Đăng Nhập\n                                </button>\n                            </div>\n                            <div className=\"overlay-panel overlay-right\">\n                                <h1>Hello, Friend!</h1>\n                                <p>Nhập thông tin cá nhân của bạn và bắt đầu hành trình với chúng tôi.</p>\n                                <button className=\"ghost\" id=\"signUp\" onClick={this.addClass}>\n                                    Đăng Ký\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainAuth;\n","const TOKEN_KEY = 'jwt';\n\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"users\");\n};\n\nexport const isLogin = () => !!localStorage.getItem(TOKEN_KEY);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/index.util.js';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() ? <Component {...props} /> : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isLogin} from '../utils/index.util';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() && restricted ? <Redirect to=\"/home\"/> : <Component {...props} />\n        )}/>\n    );\n};\n\nexport default PublicRoute;\n","export const authHeader = () => {\n    const token = JSON.parse(localStorage.getItem(\"jwt\"));\n    if (token) return {'Authorization': `Bearer ${token}`};\n    return {};\n};\n","import * as types from '../Constants/index.constant.js'\nimport axios from \"axios\";\nimport * as AuthService from \"../Services/auth-header.service\"\n\nconst API_URL_POST = \"/api/post\";\nconst API_URL_COMMENT = \"/api/comment\";\n\n\nexport const getCurrentUserPosts = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_POST + \"/showPosts\", {\n            headers: AuthService.authHeader()\n        });\n\n        const {data} = res;\n        dispatch({\n            type: types.GET_CURRENT_USER_POSTS,\n            payload: data.userPosts\n        });\n\n    } catch (err) {\n    }\n};\n\n\n\nexport const addPost = (postId, url, quotes) => async dispatch => {\n    try {\n        await axios.post(API_URL_POST + \"/addPost\", {postId, url, quotes}, {\n            headers: AuthService.authHeader()\n        });\n    } catch (err) {\n        console.log(err)\n    }\n};\nexport const uploadProfileImg = async (formData) => {\n    try {\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/tuanpham/image/upload\", {\n            method: \"POST\",\n            body: formData\n        });\n        const file = await res.json();\n        const {url} = file;\n        const response = await axios.post(API_URL_POST + \"/uploadProfileImg\", {url}, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = response;\n        return data.profileImage\n    } catch (err) {\n        console.log(err)\n    }\n};\nexport const upLoadCoverImages = async (formData) => {\n    try {\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/tuanpham/image/upload\", {\n            method: \"POST\",\n            body: formData\n        });\n        const file = await res.json();\n        const {url} = file;\n        const response = await axios.post(API_URL_POST + \"/upLoadCoverImages\", {url}, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = response;\n        return data.coverImages\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const like = (postId, like, isCheckPull) => async dispatch => {\n    try {\n        await axios.put(API_URL_POST + \"/like/\" + postId + \"/\" + isCheckPull, {like}, {\n            headers: AuthService.authHeader()\n        });\n        dispatch({\n            type: types.GET_CURRENT_USER_POSTS\n        });\n    } catch (err) {\n    }\n};\n\nexport const dislike = (postId, dislike, isCheckPull) => async dispatch => {\n    try {\n        await axios.put(API_URL_POST + \"/dislike/\" + postId + \"/\" + isCheckPull, {dislike}, {\n            headers: AuthService.authHeader()\n        });\n        dispatch({\n            type: types.GET_CURRENT_USER_POSTS\n        });\n\n    } catch (err) {\n    }\n};\n\nexport const postComment = (postId, commentId, content) => async dispatch => {\n    try {\n        console.log(postId)\n        await axios.post(API_URL_COMMENT + \"/comment/\" + postId, {commentId, content}, {\n            headers: AuthService.authHeader()\n        });\n        dispatch({\n            type: types.GET_CURRENT_USER_POSTS\n        });\n\n    } catch (err) {\n    }\n};\n\nexport const removePost = (postID) => async dispatch => {\n    try {\n        await axios.delete(API_URL_POST + \"/removePost/\" + postID, {\n            headers: AuthService.authHeader()\n        });\n\n    } catch (err) {\n    }\n};\nexport const editPost = (postId, url, quotes) => async dispatch => {\n    try {\n        await axios.put(API_URL_POST + \"/editPost/\" + postId, {url, quotes}, {\n            headers: AuthService.authHeader()\n        });\n\n    } catch (err) {\n    }\n};\n\n\nexport const removeComment = (postId, commentId) => async dispatch => {\n    try {\n        await axios.delete(API_URL_COMMENT + \"/removeComment/\" + commentId + \"/\" + postId, {\n            headers: AuthService.authHeader()\n        });\n\n    } catch (err) {\n    }\n};\nexport const editComment = (commentId, content) => async dispatch => {\n    try {\n\n        await axios.put(API_URL_COMMENT + \"/editComment/\" + commentId, {content}, {\n            headers: AuthService.authHeader()\n        });\n\n    } catch (err) {\n    }\n};\n\n\n","import * as types from '../Constants/index.constant.js'\nimport axios from \"axios\";\nimport * as AuthService from \"../Services/auth-header.service\";\n\nconst API_URL_USER = \"/api/user\";\n\n\nexport const getAllUsers = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_USER, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n\n        localStorage.setItem(\"users\", JSON.stringify(data.users));\n        dispatch({\n            type: types.GET_ALL_USERS,\n            payload: data.users\n        });\n    } catch (err) {\n\n    }\n};\nexport const updatePerDetail = (formData) => async dispatch => {\n    try {\n        await axios.put(API_URL_USER + \"/updatePerDetail\", {formData}, {\n            headers: AuthService.authHeader()\n        });\n        dispatch({\n            type: types.GET_ALL_USERS,\n        });\n    } catch (err) {\n\n    }\n};\n\nexport const getCurrentUser = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_USER + \"/showCurrentUser\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        console.log(data.currentUser)\n        localStorage.setItem(\"user\", JSON.stringify(data.currentUser));\n        dispatch({\n            type: types.GET_CURRENT_USER,\n            payload: data.currentUser\n        });\n    } catch (err) {\n\n    }\n};\nexport const getUserById = (id) => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_USER + \"/showUser/\" + id, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.GET_USER_BY_ID,\n            payload: data.user\n        });\n    } catch (err) {\n\n    }\n};\n\nexport const follow = (userID, friendID, followQuantity) => async dispatch => {\n    try {\n        await axios.put(API_URL_USER + \"/follow/\" + userID + \"/\" + friendID, {followQuantity}, {\n            headers: AuthService.authHeader()\n        });\n\n        dispatch({\n            type: types.ADD_FRIEND,\n        })\n    } catch (err) {\n\n    }\n};\n\nconst difference = (A, B) => {\n    let count = 0, C = [];\n    for (let i = 0; i < A.length; i++) {\n        count = 0;\n        for (let j = 0; j < B.length; j++) {\n            if (A[i]._id === B[j]) break;\n            count++;\n        }\n        if (count === B.length) {\n            C.push(A[i])\n        }\n    }\n    return C\n};\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const RECOVER_FAIL = 'RECOVER_FAIL';\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\nexport const ADD_FRIEND = 'ADD_FRIEND';\nexport const ADD_POST = 'ADD_POST';\nexport const GET_CURRENT_USER_POSTS = 'GET_CURRENT_USER_POSTS';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\nexport const GET_USER_BY_ID = 'GET_USER_BY_ID';\nexport const NEW_CHAT_ROOM = 'NEW_CHAT_ROOM';\nexport const GET_ALL_ROOM = 'GET_ALL_ROOM';\n\nexport const RESET_SUCCESS = 'RESET_SUCCESS';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\n\nexport const GET_STATS = 'GET_STATS';\nexport const CANCEL_REQUEST = 'CANCEL_REQUEST';\nexport const GET_CONTACTS = 'GET_CONTACTS';\nexport const COUNT_FRIENDS = 'COUNT_FRIENDS';\n\nexport const IS_CONTACT = 'IS_CONTACT';\nexport const IS_ADD_FRIEND = 'IS_ADD_FRIEND';\nexport const CONTACTS_BY_STATUS_IS_TRUE = 'CONTACTS_BY_STATUS_IS_TRUE';\nexport const GET_CHAT_GROUP_ID = 'GET_CHAT_GROUP_ID';\nexport const GET_CONVERSATION_ID = 'GET_CONVERSATION_ID';\nexport const GET_CONVERSATION_ID_WHEN_SUBMIT = 'GET_CONVERSATION_ID_WHEN_SUBMIT';\nexport const GET_MESSAGES_BY_PARAMS_ID = 'GET_MESSAGES_BY_PARAMS_ID';\nexport const UPDATED_AT_WHEN_SUBMIT = 'UPDATED_AT_WHEN_SUBMIT';\nexport const LOAD_MESSAGE_SOCKET = 'LOAD_MESSAGE_SOCKET';\n\n\n","import axios from \"axios\";\nimport * as AuthService from \"../Services/auth-header.service\";\nimport * as types from \"../Constants/index.constant\";\n\nconst API_URL_CONTACT = \"/api/contact\";\n\nexport const getContacts = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_CONTACT, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.GET_CONTACTS,\n            payload: data.contacts\n        })\n    } catch (err) {\n\n    }\n};\nexport const addFriend = (contactId, notificationId) => async dispatch => {\n    try {\n        const res = await axios.post(API_URL_CONTACT + \"/addFriend/\" + contactId, {notificationId}, {\n            headers: AuthService.authHeader()\n        });\n        console.log(res.data);\n        dispatch({\n            type: types.ADD_FRIEND,\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const cancelRequest = (contactId, notificationId) => async dispatch => {\n    try {\n\n        const res = await axios.delete(API_URL_CONTACT + \"/cancelRequest/\" + contactId + \"/\" + notificationId, {\n            headers: AuthService.authHeader()\n        });\n        console.log(res.data);\n        dispatch({\n            type: types.CANCEL_REQUEST,\n        })\n    } catch (err) {\n\n    }\n};\nexport const confirmFriend = (senderId, receiverId, notificationId) => async dispatch => {\n    try {\n\n        const res = await axios.post(API_URL_CONTACT + \"/confirmFriend\", {senderId, receiverId, notificationId}, {\n            headers: AuthService.authHeader()\n        });\n        console.log(res.data);\n        dispatch({\n            type: types.CANCEL_REQUEST,\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const removeContact = (contactId) => async dispatch => {\n    try {\n\n        const res = await axios.delete(API_URL_CONTACT + \"/removeContact/\" + contactId, {\n            headers: AuthService.authHeader()\n        });\n        console.log(res.data);\n        dispatch({\n            type: types.CANCEL_REQUEST,\n        })\n    } catch (err) {\n\n    }\n};\nexport const unFriend = (contactId) => async dispatch => {\n    try {\n\n        const res = await axios.delete(API_URL_CONTACT + \"/unFriend/\" + contactId, {\n            headers: AuthService.authHeader()\n        });\n        console.log(res.data);\n        dispatch({\n            type: types.CANCEL_REQUEST,\n        })\n    } catch (err) {\n\n    }\n};\nexport const getCountFriends = () => async dispatch => {\n    try {\n\n        const res = await axios.get(API_URL_CONTACT + \"/getCountFriends\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.COUNT_FRIENDS,\n            payload: data.countFriends\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const getIsContact = (contactId) => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_CONTACT + \"/getIsContact/\" + contactId, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.IS_CONTACT,\n            payload: data.isContact\n        })\n    } catch (err) {\n\n    }\n};\nexport const getIsAddFriend = (contactId) => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_CONTACT + \"/getIsAddFriend/\" + contactId, {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.IS_ADD_FRIEND,\n            payload: data.isAddFriend\n        })\n    } catch (err) {\n\n    }\n};\n\n\n\n\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport {logout} from '../utils/index.util'\nimport * as postActions from \"../../Actions/post.action\";\nimport * as userActions from \"../../Actions/user.action\";\nimport {connect} from \"react-redux\";\nimport upload from \"../images/profile/upload.png\"\nimport * as contactActions from \"../../Actions/contact.action\";\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass LeftFixed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profileImage: \"\",\n        }\n    }\n\n    handleLogout = () => {\n        logout();\n        this.setState({\n            isLogin: false\n        })\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const contacts = nextProps.contacts.map(ct => {\n            if ((ct.contactId === user._id && ct.status) || (ct.userId === user._id && ct.status))\n                return ct\n        });\n        this.setState({\n            profileImage: nextProps.profileImage,\n            friendQuantity: contacts.length\n        })\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUser();\n    }\n\n    isChangeUpLoad = async (e) => {\n        const formData = new FormData();\n        formData.append(\"file\", e.target.files[0])\n        formData.append('upload_preset', 'tuanpham');\n        const path = await postActions.uploadProfileImg(formData);\n        delete user.profileImage;\n        user.profileImage = path;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        this.props.getProfileImage(path);\n        this.setState({\n            profileImage: path\n        })\n    };\n\n    render() {\n        const profileImage = this.state.profileImage;\n        return (\n            <div className=\"leftfixed\">\n                <div className=\"sidebarleft gradient-box\">\n                    <div className=\"profile\">\n                    <img src={profileImage ? profileImage : user.profileImage ? user.profileImage : upload}\n                         alt=\" profile\"/>\n                    </div>\n                    <input type=\"file\" name=\"file\"\n                           className=\"profileImg\"\n                           onChange={this.isChangeUpLoad}\n                    />\n                    <p id=\"sidename\">{user.lastName} {user.firstName}</p>\n                    <Link to={\"/home/profile/\" + user._id} id=\"viewall\">\n                        View All\n                    </Link>\n                    <hr/>\n                    <p id=\"nosociety\">{this.state.friendQuantity}</p>\n                    <p id=\"societyname\">\n                        <a href=\"#Friends\">Friends</a>\n                    </p>\n                    <p id=\"logout\">\n                        <Link to=\"/\" className=\"button gradient-button\" onClick={this.handleLogout}>Log Out</Link>\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    profileImage: state.currentUserReducer.profileImage,\n    contacts: state.contactReducer.contacts\n});\nconst mapDispatchToProps = dispatch => ({\n    getCurrentUser: () => dispatch(userActions.getCurrentUser()),\n    getContacts: () => dispatch(contactActions.getContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftFixed);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as postActions from \"../../Actions/post.action\";\nimport {connect} from \"react-redux\";\nimport upload from \"../images/profile/upload.png\"\nimport {ObjectID} from 'bson';\nimport moment from \"moment\";\nconst user = JSON.parse(localStorage.getItem('user'));\n\n\nclass MainNotFixed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: \"\",\n            quotes: \"\",\n            userPosts: [],\n            profileImage: null,\n            comment: \"\",\n            editedQuotes: \"\",\n            editPostImg: \"\",\n            commentId: \"\",\n            editContent: \"\",\n            isCommentEdit: true,\n            isCommentClose: false,\n            cm: \"\",\n            location: -1\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            userPosts: nextProps.userPosts,\n            profileImage: nextProps.profileImage\n        })\n    }\n\n    componentDidMount() {\n        this.props.getCurrentUserPosts();\n\n    }\n\n\n    isChangeUpLoad = async (e) => {\n\n        const formData = new FormData();\n        formData.append('file', e.target.files[0]);\n        formData.append('upload_preset', 'tuanpham');\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/tuanpham/image/upload\", {\n            method: \"POST\",\n            body: formData\n        });\n        const file = await res.json();\n        const {url} = file;\n        console.log(url)\n        this.setState({\n            file: url,\n        })\n\n    };\n    isChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const x = 0;\n        let arr = this.state.userPosts;\n        const post = {\n            like: 0,\n            dislike: 0,\n            liked: [],\n            disliked: [],\n            comments: [],\n            postId: new ObjectID(),\n            userId: user._id,\n            quotes: this.state.quotes,\n            postImg: this.state.file,\n        };\n\n        this.props.addPost(post.postId, this.state.file, this.state.quotes);\n        arr.unshift({...post, firstName: user.firstName, lastName: user.lastName});\n        this.setState({\n            userPosts: arr,\n            quotes: \"\",\n            file: \"\"\n        });\n    };\n\n\n    increase = (postId, likeRec, dislikeRec, thumbSupRec, thumbsDownRec) => {\n        console.log(likeRec, dislikeRec, thumbSupRec, thumbsDownRec);\n        const idName1 = likeRec;\n        const idName2 = dislikeRec;\n        const thumbSup = thumbSupRec;\n        const thumbsDown = thumbsDownRec;\n\n        const like = document.getElementById(idName1);\n        this.props.like(postId, parseInt(like.innerHTML) + 1, \"pull\");\n        like.innerHTML = parseInt(like.innerHTML) + 1;\n\n\n        const up = document.getElementById(thumbSup);\n        up.style.color = \"#dc3545\";\n        up.style.pointerEvents = \"none\";\n        const down = document.getElementById(thumbsDown);\n        if (down.style.color == \"rgb(220, 53, 69)\") {\n            const dislike = document.getElementById(idName2);\n            console.log(parseInt(dislike.innerHTML))\n            this.props.dislike(postId, parseInt(dislike.innerHTML) - 1, \"notpull\");\n            dislike.innerHTML = parseInt(dislike.innerHTML) - 1;\n        }\n        down.style.color = \"#000\";\n        down.style.pointerEvents = \"all\";\n    };\n\n\n    decrease = (postId, likeRec, dislikeRec, thumbSupRec, thumbsDownRec) => {\n        const idName1 = likeRec;\n        const idName2 = dislikeRec;\n        const thumbSup = thumbSupRec;\n        const thumbsDown = thumbsDownRec;\n\n        const dislike = document.getElementById(idName2);\n        this.props.dislike(postId, parseInt(dislike.innerHTML) + 1, \"pull\");\n        dislike.innerHTML = parseInt(dislike.innerHTML) + 1;\n\n        const down = document.getElementById(thumbsDown);\n        down.style.color = \"#dc3545\";\n        down.style.pointerEvents = \"none\";\n        const up = document.getElementById(thumbSup);\n        if (up.style.color == \"rgb(220, 53, 69)\") {\n            const like = document.getElementById(idName1);\n            console.log(parseInt(like.innerHTML))\n            this.props.like(postId, parseInt(like.innerHTML) - 1, \"notpull\");\n            like.innerHTML = parseInt(like.innerHTML) - 1;\n        }\n        up.style.color = \"black\";\n        up.style.pointerEvents = \"all\";\n    };\n\n    enableModal() {\n        let modal = document.getElementsByClassName('modal');\n        modal[0].className = modal[0].className.replace(\" deanimate\", \" animate\");\n        document.getElementsByClassName('modal')[0].style.display = 'block';\n    }\n\n    disableModal(n) {\n        let modal = document.getElementsByClassName('modal');\n        modal[n].className = modal[n].className.replace(\" animate\", \" deanimate\");\n        setTimeout(function () {\n            document.getElementsByClassName('modal')[n].style.display = 'none';\n        }, 500);\n    }\n\n    handleSubmitComment = (e, postId) => {\n        e.preventDefault();\n        console.log(postId);\n        const arr = this.state.userPosts;\n        const post = arr.find(post => post.postId === postId);\n        const comment = {\n            commentId: new ObjectID(),\n            content: this.state.comment,\n            userId: user._id\n        };\n        post.comments.push(comment);\n\n        console.log(post.comments);\n        this.props.postComment(postId, comment.commentId, this.state.comment);\n        this.setState({\n            userPosts: arr\n        });\n        this.resetForm();\n    };\n\n    onClickRemovePost = (postID) => {\n        this.props.removePost(postID);\n        const rm = this.state.userPosts.filter(post => post.postId !== postID);\n        console.log(rm)\n        this.setState({\n            userPosts: rm\n        });\n\n    };\n    editSubmit = (postId) => {\n\n        this.props.editPost(postId, this.state.file, this.state.editedQuotes);\n\n        this.state.userPosts.map(post => {\n            if (post.postId === postId) {\n                post.quotes = this.state.editedQuotes;\n                if (this.state.file) {\n                    post.postImg = this.state.file;\n                }\n                return post;\n            }\n            return null;\n        });\n        this.setState({\n            userPosts: this.state.userPosts,\n            quotes: \"\",\n            file: \"\"\n        });\n    };\n    funcEditSetTimeout = (e, postId) => {\n        e.preventDefault();\n        let _this = this;\n        setTimeout(() => {\n            _this.editSubmit(postId);\n        }, 1000);\n    };\n    getEditPostInfo = (quotes, postImg) => {\n        this.setState({\n            editedQuotes: quotes,\n            editPostImg: postImg\n        })\n    };\n    onClickRemoveComment = (postId, commentId) => {\n        this.props.removeComment(postId, commentId);\n        const arr = this.state.userPosts;\n        const post = arr.find(post => post.postId === postId);\n        post.comments = post.comments.filter(comment => comment.commentId !== commentId);\n\n        this.setState({\n            userPosts: arr\n        })\n    };\n\n    getEditCommentInfo = (commentId, content, location) => {\n        console.log(location)\n        this.setState({\n            commentId: commentId,\n            editContent: content,\n            isCommentClose: !this.state.isCommentClose,\n            location: location\n        })\n    };\n\n    handleEditComment = (e, postId, commentId) => {\n        e.preventDefault();\n        this.props.editComment(commentId, this.state.editContent);\n        const arr = this.state.userPosts;\n        const post = arr.find(post => post.postId === postId);\n        post.comments.map(comment => {\n            if (comment.commentId === commentId) {\n                comment.content = this.state.editContent;\n                return comment;\n            }\n        });\n\n        this.setState({\n            userPosts: arr,\n            isCommentEdit: !this.state.isCommentEdit\n        })\n\n    };\n    resetForm = () => {\n        const formComment = document.getElementsByClassName(\"form-comment\");\n        for (let i = 0; i < formComment.length; i++) {\n            formComment[i].reset();\n        }\n    };\n\n    render() {\n        let profileImage = this.props.profileImage;\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        if (users) users.push(user);\n        console.log(user.profileImage)\n        return (\n            <div className=\"mainnotfixed\" id=\"mainnotfixed\">\n                <div\n                    className=\"main mainpost\"\n                    style={{marginBottom: 20, paddingBottom: 10}}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"userimg\">\n                            {profileImage ? <img src={profileImage} alt=\"profile\"/> : user.profileImage ?\n                                <img src={user.profileImage} alt=\"profile\"/> : <img src={upload} alt=\"profile\"/>}\n                        </div>\n                        <p className=\"quotes\">\n                          <textarea\n                              id=\"mypara\"\n                              className=\"txtarea\"\n                              placeholder={user.firstName + \" ơi, bạn đang nghỉ gì?\"}\n                              onChange={this.isChange}\n                              value={this.state.quotes}\n                              name=\"quotes\"\n                              required\n                          />\n                        </p>\n                        {/* image load to post */}\n                        {this.state.file ? (\n                            <div className=\"post\">\n                                <img className=\"postimg\" src={this.state.file} alt=\" \"/>\n                            </div>\n                        ) : \"\"}\n\n                        <div className=\"postbar\">\n                            <input\n                                type=\"file\"\n                                id=\"chooseimg\"\n                                name=\"file\"\n                                onChange={this.isChangeUpLoad}\n                                onClick={e => (e.target.value = null)}\n                            />\n                            <button type=\"button\" className=\"imgbttn\" id=\"imgbttn\">\n                                📷 Images\n                            </button>\n                            <button\n                                type=\"submit\"\n                                id=\"postmypost\"\n                                className=\"postmypost button gradient-button text-center\"\n                            >\n                                Post\n                            </button>\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"allpost\">\n                    {\n                        this.state.userPosts.map((value, i) => (\n                            <div className=\"mainpost\" key={i}>\n                                {user._id === value.userId ?\n                                    <div>\n                                        <a href=\"#remove\"\n                                           onClick={() => this.onClickRemovePost(value.postId)}\n                                        >\n                                            <i className=\"fas fa-trash-alt\"/>\n                                        </a>\n                                        <a href=\"#edit\"\n                                           onClick={() => {\n                                               this.enableModal();\n                                               this.getEditPostInfo(value.quotes, value.postImg);\n                                           }}\n                                        >\n                                            <i className=\"fas fa-edit\"/>\n                                        </a>\n                                    </div>\n                                    : \"\"\n                                }\n\n                                <div\n                                    className=\"modal animate main mainpost\"\n                                    style={{marginBottom: 20, paddingBottom: 10}}\n                                >\n                                    <span className=\"close\" title=\"Close Modal\"\n                                          onClick={() => this.disableModal(0)}>×</span>\n                                    <form>\n                                        <div className=\"userimg\">\n                                            {profileImage ?\n                                                <img src={profileImage} alt=\"profile\"/> : user.profileImage ?\n                                                    <img src={user.profileImage} alt=\"profile\"/> :\n                                                    <img src={upload} alt=\"profile\"/>}\n                                        </div>\n                                        <p className=\"quotes\">\n                                          <textarea\n                                              id=\"mypara\"\n                                              className=\"txtarea\"\n                                              name=\"editedQuotes\"\n                                              placeholder={user.firstName + \"ơi, bạn đang nghỉ gì?\"}\n                                              onChange={this.isChange}\n                                              defaultValue={this.state.editedQuotes}\n                                              required\n                                          />\n                                        </p>\n                                        {/* image load to post */}\n                                        <div className=\"post\">\n                                            <img id=\"load2\" className=\"postimg\" src=\" \"/>\n                                        </div>\n                                        <div className=\"postbar\">\n                                            <input\n                                                type=\"file\"\n                                                id=\"chooseimg\"\n                                                name=\"file\"\n                                                onChange={this.isChangeUpLoad}\n\n                                                onClick={e => (e.target.value = null)}\n                                            />\n                                            <button type=\"button\" className=\"imgbttn\" id=\"imgbttn\">\n                                                📷 Images\n                                            </button>\n                                            <button\n                                                type=\"submit\"\n                                                id=\"postmypost\"\n                                                className=\"postmypost button gradient-button text-center\"\n                                                onClick={(e) => {\n                                                    this.funcEditSetTimeout(e, value.postId);\n                                                    this.disableModal(0);\n                                                }}\n                                            >\n                                                Post\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n\n\n                                <div className=\"userimg\">\n                                    {value.userId === user._id && profileImage ?\n                                        <img src={profileImage}\n                                             alt=\"anh dai dien\"/> : value.userId === user._id && user.profileImage ?\n                                            <img src={user.profileImage} alt=\"anh dai dien\"/> : value.profileImage ?\n                                                <img src={value.profileImage} alt=\"anh dai dien\"/> :\n                                                <img src={upload} alt=\"anh dai dien\"/>}\n                                </div>\n                                <div className=\"username\">\n                                    {\" \"}\n                                    <p className=\"name\">{value.lastName} {value.firstName}</p>\n                                </div>\n                                <p className=\"time\">{moment(value.createdAt).fromNow()}</p>\n                                <p className=\"quotes\">\n                                    {value.quotes}\n                                </p>\n                                <div className=\"post\">\n                                    <img className=\"postimg\" src={value.postImg}/>\n                                </div>\n                                <div className=\"likedislike\">\n                                    <p className=\"like\">\n                                        <span className=\"nooflike\"\n                                              id={\"like\" + parseInt(i + 1)}>{value.like}{\" \"}\n                                        </span>{\" \"}likes &nbsp;{\" \"}\n                                        <span className=\"noofdislike\"\n                                              id={\"dislike\" + parseInt(i + 1)}>{value.dislike}{\" \"}\n                                         </span>{\" \"}dislikes\n                                    </p>\n                                    <p className=\"likedisbttn\">\n                                        {\n                                            typeof value.liked !== \"undefined\" && typeof value.disliked !== \"undefined\" && value.liked.find(id => id === user._id) && !value.disliked.find(id => id === user._id) ? (\n                                                <div>\n                                                    <span\n                                                        id={\"thumbsup\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-up\"\n                                                        style={{\n                                                            color: \"rgb(220, 53, 69)\",\n                                                            pointerEvents: \"none\"\n                                                        }}\n                                                        onClick={() => this.increase(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                    <span\n                                                        id={\"thumbsdown\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-down\"\n                                                        onClick={() => this.decrease(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                </div>\n                                            ) : typeof value.liked !== \"undefined\" && typeof value.disliked !== \"undefined\" && !value.liked.find(id => id === user._id) && value.disliked.find(id => id === user._id) ? (\n                                                <div>\n                                                    <span\n                                                        id={\"thumbsup\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-up\"\n                                                        onClick={() => this.increase(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                    <span\n                                                        id={\"thumbsdown\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-down\"\n                                                        style={{\n                                                            color: \"rgb(220, 53, 69)\",\n                                                            pointerEvents: \"none\"\n                                                        }}\n                                                        onClick={() => this.decrease(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                </div>\n                                            ) : (\n                                                <div>\n                                                    <span\n                                                        id={\"thumbsup\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-up\"\n                                                        onClick={() => this.increase(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                    <span\n                                                        id={\"thumbsdown\" + parseInt(i + 1)}\n                                                        className=\"fa fa-thumbs-down\"\n                                                        onClick={() => this.decrease(value.postId, 'like' + parseInt(i + 1), 'dislike' + +parseInt(i + 1), 'thumbsup' + +parseInt(i + 1), 'thumbsdown' + +parseInt(i + 1))}\n                                                    />\n                                                </div>\n                                            )\n                                        }\n\n                                    </p>\n                                </div>\n                                <div className=\"commentContainer\">\n                                    <div className={value.comments.length !== 0 ? \"comment-content\" : \"\"}>\n                                        {\n                                            value.comments.map((m, i) => {\n                                                let u;\n                                                if (users) {\n                                                    u = users.find(user => user._id === m.userId);\n                                                }\n\n                                                if (u) return (\n                                                    <div className=\"cm\" key={i}\n                                                         style={this.state.isCommentEdit ? {marginBottom: \"15px\"} : {marginBottom: \"0\"}}>\n                                                        <p>\n                                                            <Link to={\"/home/profile/\" + m.userId}\n                                                            >{u.lastName} {u.firstName}:\n                                                            </Link>{\" \"}\n                                                            <span>\n                                                                    {this.state.editContent && this.state.commentId === m.commentId ? this.state.editContent : m.content}\n                                                                {user._id === m.userId ? (\n                                                                    <div>\n                                                                        <a href=\"#remove\" className=\"remove-comment\"\n                                                                           onClick={() => this.onClickRemoveComment(value.postId, m.commentId)}\n                                                                        >\n                                                                            <i className=\"fas fa-trash-alt\"/>\n                                                                        </a>\n                                                                        {/*{*/}\n                                                                        {/*    !this.state.isCommentClose && this.state.isCommentEdit && user._id === m.userId  ? (*/}\n\n                                                                        {/*        <a href=\"#edit\"*/}\n                                                                        {/*           className=\"edit-comment\"*/}\n                                                                        {/*           onClick={() => {*/}\n                                                                        {/*               this.getEditCommentInfo(m.commentId, m.content, i);*/}\n                                                                        {/*           }}*/}\n                                                                        {/*        >*/}\n                                                                        {/*            <i className=\"fas fa-edit\"/>*/}\n                                                                        {/*        </a>*/}\n                                                                        {/*    ) : \"\"*/}\n                                                                        {/*}*/}\n                                                                    </div>\n                                                                ) : \"\"\n                                                                }\n                                                                {/*{*/}\n                                                                {/*    this.state.isCommentEdit && (*/}\n                                                                {/*        <a href=\"#close\" className=\"close-comment\"*/}\n                                                                {/*           onClick={() => this.setState({isCommentEdit: !this.state.isCommentEdit})}*/}\n                                                                {/*        >*/}\n                                                                {/*            <i className=\"fas fa-times\"/>*/}\n                                                                {/*        </a>*/}\n                                                                {/*    )*/}\n                                                                {/*}*/}\n\n                                                                {\n                                                                    this.state.isCommentClose && this.state.commentId === m.commentId ? (\n                                                                        <a href=\"#close\" className=\"close-comment\"\n                                                                           onClick={() => this.setState({\n                                                                               isCommentClose: !this.state.isCommentClose\n                                                                           })}\n                                                                        >\n                                                                            <i className=\"fas fa-times\"/>\n                                                                        </a>\n                                                                    ) : user._id === m.userId ? (\n                                                                        <a href=\"#edit\"\n                                                                           className=\"edit-comment\"\n                                                                           onClick={() => {\n                                                                               this.getEditCommentInfo(m.commentId, m.content, i);\n                                                                           }}\n                                                                        >\n                                                                            <i className=\"fas fa-edit\"/>\n                                                                        </a>\n                                                                    ) : \"\"\n                                                                }\n                                                            </span>\n                                                        </p>\n                                                        {\n                                                            this.state.isCommentClose && this.state.commentId === m.commentId ? (\n                                                                <div className=\"edit-comment-form\">\n                                                                    <form\n                                                                        onSubmit={(e) => this.handleEditComment(e, value.postId, m.commentId)}>\n                                                                        <input type=\"text\"\n                                                                               value={this.state.editContent}\n                                                                               name=\"editContent\"\n                                                                               placeholder=\"Edit comment...\"\n                                                                               required\n                                                                               onChange={this.isChange}\n                                                                        />\n                                                                        <button type=\"submit\"\n                                                                                className=\"button-submit-comment\">\n                                                                            Edit\n                                                                        </button>\n                                                                    </form>\n                                                                </div>\n                                                            ) : \"\"\n                                                        }\n                                                    </div>\n                                                );\n                                            })\n                                        }\n                                    </div>\n\n                                    <form onSubmit={(e) => this.handleSubmitComment(e, value.postId)}\n                                          className=\"form-comment\">\n                                        <input type=\"text\"\n                                            // value={this.state.comment}\n                                               name=\"comment\"\n                                               placeholder=\"Comment...\"\n                                               required\n                                               onChange={this.isChange}\n                                        />\n                                        <button type=\"submit\" className=\"button-submit-comment\"\n                                        >\n                                            Comment\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                        ))\n                    }\n\n                </div>\n                <button type=\"button\" id=\"viewmore\" className=\"viewmore\">\n                    View More\n                </button>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    userPosts: state.postReducer\n});\nconst mapDispatchToProps = dispatch => ({\n    getCurrentUserPosts: () => dispatch(postActions.getCurrentUserPosts()),\n    like: (postId, like, isCheckPull) => dispatch(postActions.like(postId, like, isCheckPull)),\n    dislike: (postId, dislike, isCheckPull) => dispatch(postActions.dislike(postId, dislike, isCheckPull)),\n    addPost: (postId, url, quotes) => dispatch(postActions.addPost(postId, url, quotes)),\n    postComment: (postId, commentId, content) => dispatch(postActions.postComment(postId, commentId, content)),\n    removePost: (postID) => dispatch(postActions.removePost(postID)),\n    editPost: (postId, url, quotes) => dispatch(postActions.editPost(postId, url, quotes)),\n    removeComment: (postId, commentId) => dispatch(postActions.removeComment(postId, commentId)),\n    editComment: (commentId, content) => dispatch(postActions.editComment(commentId, content))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(MainNotFixed);\n","import React, {Component} from 'react';\nimport Autocomplete from \"react-autocomplete\"\n\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            redirect: false\n        }\n    }\n\n    toSlug = (str) => {\n        // Chuyển hết sang chữ thường\n        str = str.toLowerCase();\n\n        // xóa dấu\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n        str = str.replace(/(đ)/g, 'd');\n\n        // Xóa ký tự đặc biệt\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n        return str;\n    };\n\n\n    getUsers = () => {\n        const array = [];\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        if (users && user) {\n            array.push({\n                name: user.lastName + \" \" + user.firstName,\n                email: user.email\n            });\n            users.forEach(user => {\n                array.push({\n                    name: user.lastName + \" \" + user.firstName,\n                    email: user.email\n                })\n                if(array.length === 5)  return array;\n            });\n        }\n\n        return array\n    };\n\n    matchUsers = (state, value) => {\n\n        return (\n            this.toSlug(state.name.toLowerCase()).indexOf(this.toSlug(value.toLowerCase().trim())) !== -1 ||\n            state.email.toLowerCase().indexOf(value.toLowerCase().trim()) !== -1\n        )\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        users.push(user);\n        users.forEach(user => {\n            let name = user.lastName + \" \" + user.firstName;\n            if (this.toSlug(name.toLowerCase()) === this.toSlug(this.state.value.toLowerCase().trim()) ||\n                user.email.toLowerCase() === this.state.value.toLowerCase().trim()) {\n                return this.setState({redirect: true, redirectId: user._id})\n            }\n\n        })\n    };\n    removeItem = () => {\n        const item = document.getElementById(\"search-form\").querySelectorAll(\".item\");\n        for (let i = 0; i < 5; i++) {\n            item[i].remove()\n        }\n    };\n\n    render() {\n        const {redirect, redirectId} = this.state;\n\n        if (redirect) {\n            return window.location.assign(\"/home/profile/\" + redirectId);\n        }\n        return (\n            <div>\n                <form className=\"searchform\"\n                      id=\"search-form\"\n                      onSubmit={this.handleSubmit}\n                >\n                    <Autocomplete\n                        value={this.state.value}\n                        inputProps={{id: 'states-autocomplete', required: true, type: 'search'}}\n                        wrapperStyle={{position: 'relative', display: 'inline-block'}}\n                        items={this.getUsers()}\n                        getItemValue={item => item.name}\n                        shouldItemRender={(state, value) => this.matchUsers(state, value)}\n                        onChange={(event, value) => this.setState({value})}\n                        onSelect={value => this.setState({value})}\n                        renderMenu={children => (\n                            <div className=\"menu\">\n                                {children}\n                            </div>\n                        )}\n                        renderItem={(item, isHighlighted) => (\n                            <div\n                                className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n                                key={item.abbr}>\n                                {item.name}\n                            </div>\n                        )}\n                    />\n                    <button type=\"submit\">Search</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:4000\";\nexport const socket = socketIOClient(ENDPOINT);\n\nexport const config  = () => {\n    const token = JSON.parse(localStorage.getItem(\"jwt\"));\n    socket.on('connect', () => {\n        socket\n            .on('authenticated', function () {\n\n            })\n            .emit('authenticate', {token: token})\n            .on('unauthorized', (msg) => {\n                console.log(`unauthorized: ${JSON.stringify(msg.data)}`);\n            })\n    });\n};\n","import * as types from '../Constants/index.constant.js'\nimport axios from \"axios\";\nimport * as AuthService from \"../Services/auth-header.service\";\n\n\nconst API_URL_MESSAGE = \"/api/message\";\n\nexport const getContactsByStatusIsTrue = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_MESSAGE + \"/getContactsByStatusIsTrue/\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.CONTACTS_BY_STATUS_IS_TRUE,\n            payload: data.contacts\n        })\n    } catch (err) {\n\n    }\n};\nexport const getChatGroupId = (conversationId) => async dispatch => {\n    try {\n        console.log(conversationId)\n        dispatch({\n            type: types.GET_CHAT_GROUP_ID,\n            conversationId: conversationId,\n\n        })\n    } catch (err) {\n\n    }\n};\nexport const getConversationId = (conversationId) => async dispatch => {\n    try {\n        dispatch({\n            type: types.GET_CONVERSATION_ID,\n            conversationId: conversationId,\n\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const addMessage = (message, messageAmount) => async dispatch => {\n    try {\n        await axios.post(API_URL_MESSAGE + \"/addMessage\", {message, messageAmount}, {\n                headers: AuthService.authHeader()\n            }\n        );\n\n        dispatch({})\n    } catch (err) {\n\n    }\n};\nexport const getConversationIdWhenSubmit = (conversationId) => async dispatch => {\n    try {\n        dispatch({\n            type: types.GET_CONVERSATION_ID_WHEN_SUBMIT,\n            converId: conversationId,\n\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const getMessagesByParamsId = (conversationId) => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_MESSAGE + \"/getContactsByStatusIsTrue/\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.GET_MESSAGES_BY_PARAMS_ID,\n            conversationId: conversationId,\n            payload: data.contacts\n\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const uploadImgUrl = async (formData) => {\n    try {\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/tuanpham/image/upload\", {\n            method: \"POST\",\n            body: formData\n        });\n        const file = await res.json();\n        const {url} = file;\n        return url\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const updatedAtWhenSubmit = (conversationId, friends) => async dispatch => {\n    try {\n        dispatch({\n            type: types.UPDATED_AT_WHEN_SUBMIT,\n            payload: {\n                conversationId: conversationId,\n                friends: friends\n            }\n\n        })\n    } catch (err) {\n\n    }\n};\n\nexport const changeIsRead = (messageId) => async dispatch => {\n    try {\n        await axios.post(API_URL_MESSAGE + \"/changeIsRead/\" + messageId, {}, {\n            headers: AuthService.authHeader()\n        });\n\n        dispatch({})\n    } catch (err) {\n\n    }\n};\n\nexport const loadMessageSocket = (conversationId, message) => async dispatch => {\n    try {\n        dispatch({\n            type: \"LOAD_MESSAGE_SOCKET\",\n            conversationId: conversationId,\n            message: message\n        })\n    } catch (err) {\n\n    }\n};\n","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport \"./main-header.css\"\nimport Search from \"./Search\";\nimport axios from \"axios\";\n\nimport {connect} from \"react-redux\";\nimport * as configSocket from \"../../../socket/configSocket\";\nimport * as AuthService from \"../../../Services/auth-header.service\";\nimport * as contactActions from \"../../../Actions/contact.action\";\nimport * as messageActions from \"../../../Actions/message.action\";\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\n\nclass Nav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            countFriends: 0,\n            countNotifications: 0,\n            notifications: [],\n            contacts: [],\n            friend: \"\"\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.friend) {\n            this.setState({friend: nextProps.friend})\n        }\n        console.log(nextProps.countFriends)\n        this.setState({\n            contacts: nextProps.contacts,\n            countFriends: nextProps.countFriends,\n\n        })\n    }\n\n    requestConfirmFriend = () => {\n        configSocket.socket.on(\"request-confirm-friend\", data => {\n            let friends = document.getElementById(\"friends\").innerHTML;\n            let bell = document.getElementById(\"bell\").innerHTML;\n            let countFriends;\n            let countNotifications;\n            friends ? (countFriends = +friends[1] - 1) : countFriends = 0;\n            bell ? (countNotifications = +bell[1] + 1) : countNotifications = 1;\n            this.state.notifications.unshift(data);\n            this.setState({\n                countFriends: countFriends,\n                notifications: this.state.notifications,\n                countNotifications: countNotifications\n            })\n        });\n\n    };\n    requestAddFriend = () => {\n        configSocket.socket.on(\"request-add-friend\", data => {\n            let friends = document.getElementById(\"friends\").innerHTML;\n            let bell = document.getElementById(\"bell\").innerHTML;\n            let countFriends;\n            let countNotifications;\n            friends ? (countFriends = +friends[1] + 1) : countFriends = 1;\n            bell ? (countNotifications = +bell[1] + 1) : countNotifications = 1;\n            this.state.notifications.unshift(data);\n            this.setState({\n                countFriends: countFriends,\n                notifications: this.state.notifications,\n                countNotifications: countNotifications\n            })\n        });\n\n    };\n    emitCancelRequest = () => {\n        configSocket.socket.on(\"emit-cancel-request\", data => {\n            let friends = document.getElementById(\"friends\").innerHTML;\n            let bell = document.getElementById(\"bell\").innerHTML;\n            let countFriends;\n            let countNotifications;\n            friends ? (countFriends = +friends[1] - 1) : countFriends = 1;\n            bell ? (countNotifications = +bell[1] - 1) : countNotifications = 1;\n\n            this.state.notifications.unshift(data);\n            this.setState({\n                countFriends: countFriends,\n                notifications: this.state.notifications,\n                countNotifications: countNotifications\n            })\n        });\n    };\n\n    componentDidMount() {\n        this.props.getContactsByStatusIsTrue();\n        this.props.getCountFriends();\n        this.requestConfirmFriend();\n        this.requestAddFriend();\n        this.emitCancelRequest();\n        this.props.getContacts();\n        (async () => {\n            const res = await axios.get(\"/api/notification/getByIdAndLimit\", {\n                headers: AuthService.authHeader()\n            });\n            const {data} = res;\n            this.setState({\n                notifications: data.notifications,\n                countNotifications: data.notifications.length\n            });\n        })()\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"headerfixed topbar\">\n                <div className=\"header\">\n\n                    <div className=\"wrapper\">\n\n                        <Search/>\n\n                        <div className=\"icon-bar\">\n                            <ul>\n\n                                <li>\n                                    <NavLink\n                                        exact\n                                        to=\"/home\"\n                                        activeClassName=\"active\"\n                                    >\n                                        <i className=\"fa fa-home\"/>\n\n                                        <p className=\"active-bottom home\">Home</p>\n                                    </NavLink>\n                                </li>\n\n                                <li>\n                                    {\" \"}\n                                    <NavLink\n                                        exact\n                                        to={\"/home/profile/\" + user._id}\n                                        activeClassName=\"active\"\n                                    >\n                                        <i className=\"fa fa-user\"\n                                           onClick={this.handleClick}\n                                        />\n\n                                        <p className=\"active-user user\">Profile</p>\n                                    </NavLink>\n                                    {\" \"}\n                                </li>\n\n                                <li>\n                                    <NavLink\n                                        exact\n                                        to=\"/home/society\"\n                                        activeClassName=\"active\"\n                                    >\n                                        <i className=\"fa fa-users\">\n                                            <p id=\"friends\">\n                                                {this.state.countFriends !== 0 ? `(${this.state.countFriends})` : \"\"}\n                                            </p>\n                                        </i>\n\n                                        <p className=\"active-bottom users\">Society</p>\n                                    </NavLink>\n                                </li>\n\n                                <li>\n                                    {\" \"}\n                                    {\n                                        <NavLink\n                                            exact\n                                            to={\"/home/message/\" + this.state.friend._id}\n                                            activeClassName=\"active\"\n\n                                        >\n                                            <i className=\"fa fa-facebook-messenger\" aria-hidden=\"true\"/>\n                                            <p className=\"active-bottom messages\">Mess</p>\n                                        </NavLink>\n                                    }\n\n                                </li>\n\n\n                                <li>\n                                    <a\n                                        href=\"#notifications\"\n                                    >\n                                        <i className=\"fa fa-bell\"\n                                           onClick={() => {\n                                               const notificationContainer = document.getElementById(\"notify\")\n                                               if (notificationContainer.style.display === \"block\") {\n                                                   notificationContainer.style.display = \"none\"\n                                               } else {\n                                                   notificationContainer.style.display = \"block\"\n                                               }\n\n                                           }}\n                                        >\n                                            <p id=\"bell\">\n                                                {this.state.countNotifications !== 0 ? `(${this.state.countNotifications})` : \"\"}\n                                            </p>\n                                        </i>\n                                        <p className=\"active-bottom bell\">Notifi</p>\n                                    </a>\n\n                                    <div id=\"notify\"\n                                    >\n                                        <div className=\"header-notifications\">\n                                            <p id=\"Notifications\">Notifications</p>\n                                        </div>\n                                        {\n                                            this.state.notifications.map((notification, i) => (\n                                                <div key={i} className=\"notification-item\">\n                                                    <a href={\"/home/profile/\" + notification.user[0]._id}\n                                                       id=\"notify-user\">\n                                                        <div className=\"small text-gray-500\">December 12, 2019</div>\n                                                        <img src={notification.user[0].profileImage}\n                                                             alt=\"Anh thong bao\"/>\n                                                        {notification.type === \"ADD_FRIEND\" ? (\n                                                            <p className=\"bell-add-friend\">\n                                                            <span\n                                                                style={{color: '#28a745'}}>{notification.user[0].lastName} {notification.user[0].firstName}</span> sent\n                                                                you a friend request.\n                                                            </p>\n                                                        ) : notification.type === \"CONFIRM_FRIEND\" ? (\n                                                            <p className=\"bell-confirm-friend\">\n                                                            <span\n                                                                style={{color: '#28a745'}}>{notification.user[0].lastName} {notification.user[0].firstName}</span> accepted\n                                                                your friend request.\n                                                            </p>\n                                                        ) : (\n                                                            <p className=\"bell-cancel-request\">\n                                                            <span\n                                                                style={{color: '#dc3545'}}>{notification.user[0].lastName} {notification.user[0].firstName}</span> has\n                                                                canceled your friend request.\n                                                            </p>\n                                                        )}\n                                                    </a>\n                                                    <hr style={(notification.user[0].lastName + notification.user[0].firstName).length > 14 ? {\n                                                        backgroundColor: \"white\",\n                                                        width: \"100%\",\n                                                        marginTop: \"39px\",\n                                                        marginBottom: \"10px\"\n                                                    } : {\n                                                        backgroundColor: \"white\",\n                                                        width: \"100%\",\n                                                        marginTop: \"21px\",\n                                                        marginBottom: \"10px\"\n                                                    }}/>\n                                                </div>\n                                            ))\n                                        }\n                                        <a className=\"dropdown-item text-center small text-gray-500\"\n                                           href=\"#\">Show All Alerts</a>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contactReducer.contacts,\n    countFriends: state.contactReducer.countFriends,\n    friend: state.messageReducer.friends[0],\n});\nconst mapDispatchToProps = dispatch => ({\n    getContacts: () => dispatch(contactActions.getContacts()),\n    getCountFriends: () => dispatch(contactActions.getCountFriends()),\n    getContactsByStatusIsTrue: () => dispatch(messageActions.getContactsByStatusIsTrue()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n\n","import React, {Component} from 'react';\nimport * as userActions from \"../../Actions/user.action\";\nimport * as contactActions from \"../../Actions/contact.action.js\";\nimport other_profile from \"../images/profile/upload.png\"\nimport {connect} from \"react-redux\";\nimport * as configSocket from \"../../socket/configSocket\"\nimport {ObjectID} from 'bson';\n\n\nclass RightFixed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            sentFriend: [],\n            notSentFriend: [],\n            contacts: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const notSentFriend = difference(nextProps.users, nextProps.contacts);\n        const array = [];\n        for (let i = 0; i < notSentFriend.length; i++) {\n            array.push(notSentFriend[i]);\n            if (array.length === 5) break;\n        }\n        this.setState({\n            contacts: nextProps.contacts,\n            sentFriend: nextProps.contacts,\n            notSentFriend: array\n        })\n    }\n\n    requestAddFriend = () => {\n        configSocket.socket.on(\"request-add-friend\", data => {\n            this.state.notSentFriend = this.state.notSentFriend.filter(u => u._id !== data.user[0]._id);\n            this.setState({\n                notSentFriend: this.state.notSentFriend\n            })\n        });\n\n    };\n    emitCancelRequest = () => {\n        configSocket.socket.on(\"emit-cancel-request\", data => {\n            this.state.notSentFriend.unshift({\n                _id: data.user[0]._id,\n                firstName: data.user[0].firstName,\n                lastName: data.user[0].lastName,\n                profileImage: data.user[0].profileImage,\n            });\n            this.setState({\n                notSentFriend: this.state.notSentFriend\n            })\n        });\n    };\n\n    componentDidMount() {\n        this.emitCancelRequest();\n        this.requestAddFriend();\n        configSocket.config();\n        this.props.getAllUsers();\n        this.props.getContacts();\n    }\n\n    handleClick = (userID, friendID, followQuantity) => {\n        this.props.follow(userID, friendID, followQuantity);\n        const users = this.state.users.filter(item => item._id !== friendID);\n        this.setState({users: users})\n    };\n\n    addFriend = (contactId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('add-friend', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"ADD_FRIEND\"\n        });\n        this.props.addFriend(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-society-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-society-\" + contactId);\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'none';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'block';\n        if (addFriend) addFriend.style.display = 'none';\n        if (cancelReq) cancelReq.style.display = 'block';\n\n\n    };\n    cancelRequest = (contactId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('cancel-request', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"CANCEL_REQUEST\"\n        });\n        this.props.cancelRequest(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-society-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-society-\" + contactId);\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'block';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'none';\n        if (addFriend) addFriend.style.display = 'block';\n        if (cancelReq) cancelReq.style.display = 'none';\n\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"rightfixed\">\n                    <div className=\"sidebarright\">\n                        {\n                            this.state.notSentFriend.map((friend, i) => (\n                                <div className=\"rightcontent\"\n                                     key={i}\n                                >\n                                    <a href={\"/home/profile/\" + friend._id}>\n                                        <img alt=\" \" src={friend.profileImage ? friend.profileImage : other_profile}/>\n                                        <p className=\"name\">{friend.lastName} {friend.firstName}</p>\n                                    </a>\n\n                                    <button id={\"cancel-request-\" + friend._id}\n                                            className=\"btn btn-danger cancel-request\"\n                                            onClick={() => this.cancelRequest(friend._id)}\n                                            style={{display: 'none'}}\n                                    >\n                                        <i className=\"fas fa-user-times\"/>Cancel Request\n                                    </button>\n                                    <button id={\"add-friend-\" + friend._id}\n                                            className={\"btn btn-danger\"}\n                                            onClick={() => this.addFriend(friend._id)}\n                                    >\n                                        <i className=\"fas fa-user-plus\"/>Add Friend\n                                    </button>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"rightfixed\" id=\"footer\">\n                    <div\n                        className=\"sidebarright\"\n                    >\n                        <div className=\"foot\">\n                            <div className=\"social text-center\">\n                                <a href=\"https://www.facebook.com/phamminhtuan.317\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\">\n                                    <i className=\"fab fa-facebook\"/>\n                                </a>\n                                <a href=\"https://www.facebook.com/groups/nhompi2020/\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\">\n                                    <i className=\"fas fa-users\"/>\n                                </a>\n                                <a href=\"#1\" target=\"_blank\">\n                                    <i className=\"fab fa-font-awesome-flag\"/>\n                                </a>\n                                <a href=\"#1\">\n                                    <i className=\"fab fa-youtube\"/>\n                                </a>\n                            </div>\n\n                            <p>Copyright © Tuan Pham 2020 All Rights Reserved.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst difference = (A, B) => {\n    let count = 0, C = [];\n    for (let i = 0; i < A.length; i++) {\n        count = 0;\n        for (let j = 0; j < B.length; j++) {\n            if (A[i]._id === B[j].contactId || A[i]._id === B[j].userId) break;\n            count++;\n        }\n        if (count === B.length) {\n            C.push(A[i])\n        }\n    }\n    return C\n};\n\nconst mapStateToProps = state => ({\n    users: state.userReducer,\n    contacts: state.contactReducer.contacts\n});\nconst mapDispatchToProps = dispatch => ({\n    follow: (userID, friendID, followQuantity) => dispatch(userActions.follow(userID, friendID, followQuantity)),\n    addFriend: (contactId, notificationId) => dispatch(contactActions.addFriend(contactId, notificationId)),\n    cancelRequest: (contactId, notificationId) => dispatch(contactActions.cancelRequest(contactId, notificationId)),\n    getAllUsers: () => dispatch(userActions.getAllUsers()),\n    getContacts: () => dispatch(contactActions.getContacts())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(RightFixed);\n","import React, {Component} from 'react';\nimport LeftFixed from \"./LeftFixed\";\nimport MainNotFixed from \"./MainNotFixed\";\n\nimport './main-content.css'\nimport Nav from \"./Header/Nav\";\n\nimport RightFixed from \"./RightFixed\";\nimport * as userActions from \"../../Actions/user.action\";\nimport * as contactActions from \"../../Actions/contact.action\";\nimport {connect} from \"react-redux\";\nimport * as configSocket from \"../../socket/configSocket\"\n\n// const token = JSON.parse(localStorage.getItem(\"jwt\"));\n\nclass MainHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        configSocket.config();\n\n    }\n\n    getProfileImage = (path) => {\n        console.log(path)\n        this.setState({\n            profileImage: path\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <Nav/>\n                <div className=\"content\">\n                    <div className=\"wrapper\">\n                        <LeftFixed\n                            getProfileImage={(path) => this.getProfileImage(path)}\n                        />\n                        <MainNotFixed\n                            profileImage={this.state.profileImage}\n                        />\n                        <RightFixed/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(null, mapDispatchToProps)(MainHome);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nclass Nav extends Component {\n    render() {\n        return (\n            <ul\n                className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\n                id=\"accordionSidebar\"\n            >\n                {/* Sidebar - Brand */}\n                <a\n                    className=\"sidebar-brand d-flex align-items-center justify-content-center\"\n                    href=\"/home-admin\"\n                >\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-laugh-wink\"/>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-3\">\n                        Admin <sup>2</sup>\n                    </div>\n                </a>\n                {/* Divider */}\n                <hr className=\"sidebar-divider my-0\"/>\n                {/* Nav Item - Dashboard */}\n                <li className=\"nav-item active\">\n                    <Link className=\"nav-link\" to=\"/home-admin\">\n                        <i className=\"fas fa-fw fa-tachometer-alt\"/>\n                        <span>Dashboard</span>\n                    </Link>\n                </li>\n                {/* Divider */}\n                <hr className=\"sidebar-divider\"/>\n                {/* Heading */}\n\n                <div className=\"sidebar-heading\">\n                    Collections\n                </div>\n\n                {/* Nav Item - Tables */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/table-users\">\n                        <i className=\"fas fa-fw fa-table\"/>\n                        <span>Users</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/table-posts\">\n                        <i className=\"fas fa-fw fa-table\"/>\n                        <span>Posts</span>\n                    </Link>\n                </li>\n                {/* Divider */}\n                <hr className=\"sidebar-divider d-none d-md-block\"/>\n                {/* Sidebar Toggler (Sidebar) */}\n                <div className=\"text-center d-none d-md-inline\">\n                    <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"/>\n                </div>\n            </ul>\n        );\n    }\n}\n\nexport default Nav;\n","import React, {Component} from 'react';\n\nclass Modal extends Component {\n    render() {\n        return (\n            <div\n                className=\"modal fade\"\n                id=\"logoutModal\"\n                tabIndex={-1}\n                role=\"dialog\"\n                aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                                Ready to Leave?\n                            </h5>\n                            <button\n                                className=\"close\"\n                                type=\"button\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            Select \"Logout\" below if you are ready to end your current session.\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                className=\"btn btn-secondary\"\n                                type=\"button\"\n                                data-dismiss=\"modal\"\n                            >\n                                Cancel\n                            </button>\n                            <a className=\"btn btn-primary\" href=\"login.html\">\n                                Logout\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import React, {Component} from 'react';\n\nclass Topbar extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n                    {/* Sidebar Toggle (Topbar) */}\n                    <button\n                        id=\"sidebarToggleTop\"\n                        className=\"btn btn-link d-md-none rounded-circle mr-3\"\n                    >\n                        <i className=\"fa fa-bars\"/>\n                    </button>\n                    {/* Topbar Search */}\n                    <form\n                        className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control bg-light border-0 small\"\n                                placeholder=\"Search for...\"\n                                aria-label=\"Search\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-primary\" type=\"button\">\n                                    <i className=\"fas fa-search fa-sm\"/>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    {/* Topbar Navbar */}\n                    <ul className=\"navbar-nav ml-auto\">\n                        {/* Nav Item - Search Dropdown (Visible Only XS) */}\n                        <li className=\"nav-item dropdown no-arrow d-sm-none\">\n                            <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"#\"\n                                id=\"searchDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <i className=\"fas fa-search fa-fw\"/>\n                            </a>\n                            {/* Dropdown - Messages */}\n                            <div\n                                className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"\n                                aria-labelledby=\"searchDropdown\"\n                            >\n                                <form className=\"form-inline mr-auto w-100 navbar-search\">\n                                    <div className=\"input-group\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control bg-light border-0 small\"\n                                            placeholder=\"Search for...\"\n                                            aria-label=\"Search\"\n                                            aria-describedby=\"basic-addon2\"\n                                        />\n                                        <div className=\"input-group-append\">\n                                            <button className=\"btn btn-primary\" type=\"button\">\n                                                <i className=\"fas fa-search fa-sm\"/>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </li>\n                        {/* Nav Item - Alerts */}\n                        <li className=\"nav-item dropdown no-arrow mx-1\">\n                            <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"#\"\n                                id=\"alertsDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <i className=\"fa fa-bell\"/>\n                                {/* Counter - Alerts */}\n                                <span className=\"badge badge-danger badge-counter\">3+</span>\n                            </a>\n                            {/* Dropdown - Alerts */}\n                            <div\n                                className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n                                aria-labelledby=\"alertsDropdown\"\n                            >\n                                <h6 className=\"dropdown-header\">Alerts Center</h6>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"mr-3\">\n                                        <div className=\"icon-circle bg-primary\">\n                                            <i className=\"fas fa-file-alt text-white\"/>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div className=\"small text-gray-500\">December 12, 2019</div>\n                                        <span className=\"font-weight-bold\">\n                  A new monthly report is ready to download!\n                </span>\n                                    </div>\n                                </a>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"mr-3\">\n                                        <div className=\"icon-circle bg-success\">\n                                            <i className=\"fas fa-donate text-white\"/>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div className=\"small text-gray-500\">December 7, 2019</div>\n                                        $290.29 has been deposited into your account!\n                                    </div>\n                                </a>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"mr-3\">\n                                        <div className=\"icon-circle bg-warning\">\n                                            <i className=\"fas fa-exclamation-triangle text-white\"/>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div className=\"small text-gray-500\">December 2, 2019</div>\n                                        Spending Alert: We've noticed unusually high spending for your\n                                        account.\n                                    </div>\n                                </a>\n                                <a\n                                    className=\"dropdown-item text-center small text-gray-500\"\n                                    href=\"#\"\n                                >\n                                    Show All Alerts\n                                </a>\n                            </div>\n                        </li>\n                        {/* Nav Item - Messages */}\n                        <li className=\"nav-item dropdown no-arrow mx-1\">\n                            <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"#\"\n                                id=\"messagesDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <i className=\"fas fa-envelope fa-fw\"/>\n                                {/* Counter - Messages */}\n                                <span className=\"badge badge-danger badge-counter\">7</span>\n                            </a>\n                            {/* Dropdown - Messages */}\n                            <div\n                                className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n                                aria-labelledby=\"messagesDropdown\"\n                            >\n                                <h6 className=\"dropdown-header\">Message Center</h6>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"dropdown-list-image mr-3\">\n                                        <img\n                                            className=\"rounded-circle\"\n                                            src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\"\n                                            alt\n                                        />\n                                        <div className=\"status-indicator bg-success\"/>\n                                    </div>\n                                    <div className=\"font-weight-bold\">\n                                        <div className=\"text-truncate\">\n                                            Hi there! I am wondering if you can help me with a problem\n                                            I've been having.\n                                        </div>\n                                        <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\n                                    </div>\n                                </a>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"dropdown-list-image mr-3\">\n                                        <img\n                                            className=\"rounded-circle\"\n                                            src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\"\n                                            alt\n                                        />\n                                        <div className=\"status-indicator\"/>\n                                    </div>\n                                    <div>\n                                        <div className=\"text-truncate\">\n                                            I have the photos that you ordered last month, how would you\n                                            like them sent to you?\n                                        </div>\n                                        <div className=\"small text-gray-500\">Jae Chun · 1d</div>\n                                    </div>\n                                </a>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"dropdown-list-image mr-3\">\n                                        <img\n                                            className=\"rounded-circle\"\n                                            src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\"\n                                            alt\n                                        />\n                                        <div className=\"status-indicator bg-warning\"/>\n                                    </div>\n                                    <div>\n                                        <div className=\"text-truncate\">\n                                            Last month's report looks great, I am very happy with the\n                                            progress so far, keep up the good work!\n                                        </div>\n                                        <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\n                                    </div>\n                                </a>\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\n                                    <div className=\"dropdown-list-image mr-3\">\n                                        <img\n                                            className=\"rounded-circle\"\n                                            src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\"\n                                            alt\n                                        />\n                                        <div className=\"status-indicator bg-success\"/>\n                                    </div>\n                                    <div>\n                                        <div className=\"text-truncate\">\n                                            Am I a good boy? The reason I ask is because someone told me\n                                            that people say this to all dogs, even if they aren't good...\n                                        </div>\n                                        <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\n                                    </div>\n                                </a>\n                                <a\n                                    className=\"dropdown-item text-center small text-gray-500\"\n                                    href=\"#\"\n                                >\n                                    Read More Messages\n                                </a>\n                            </div>\n                        </li>\n                        <div className=\"topbar-divider d-none d-sm-block\"/>\n                        {/* Nav Item - User Information */}\n                        <li className=\"nav-item dropdown no-arrow\">\n                            <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"#\"\n                                id=\"userDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">\n              Pham Minh Tuan\n            </span>\n                                <img\n                                    className=\"img-profile rounded-circle\"\n                                    src=\"http://res.cloudinary.com/tuanpham/image/upload/v1594726459/tuanpham/lokjdozzwezbgsry3jdh.jpg\"\n                                    alt=\"anh dai dien\"\n                                />\n                            </a>\n                            {/* Dropdown - User Information */}\n                            <div\n                                className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n                                aria-labelledby=\"userDropdown\"\n                            >\n                                <a className=\"dropdown-item\" href=\"#\">\n                                    <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"/>\n                                    Profile\n                                </a>\n                                <a className=\"dropdown-item\" href=\"#\">\n                                    <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"/>\n                                    Settings\n                                </a>\n                                <a className=\"dropdown-item\" href=\"#\">\n                                    <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"/>\n                                    Activity Log\n                                </a>\n                                <div className=\"dropdown-divider\"/>\n                                <a\n                                    className=\"dropdown-item\"\n                                    href=\"#\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#logoutModal\"\n                                >\n                                    <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"/>\n                                    Logout\n                                </a>\n                            </div>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Topbar;\n","import React, {Component} from 'react';\nimport Topbar from \"./Header/Topbar\";\nimport { Doughnut } from 'react-chartjs-2';\nimport Chart from \"../Chart\";\n\nclass Content extends Component {\n    render() {\n        return (\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                {/* Main Content */}\n                <div id=\"content\">\n                    <Topbar/>\n                    {/* Begin Page Content */}\n                    <div className=\"container-fluid\">\n                        {/* Page Heading */}\n                        <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                            <h1 className=\"h3 mb-0 text-gray-800\">Dashboard</h1>\n                            <a\n                                href=\"#\"\n                                className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"\n                            >\n                                <i className=\"fas fa-download fa-sm text-white-50\"/> Generate Report\n                            </a>\n                        </div>\n                        {/* Content Row */}\n\n                        {/*<Chart/>*/}\n\n                    </div>\n                    {/* /.container-fluid */}\n                </div>\n                {/* End of Main Content */}\n                {/* Footer */}\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright © Your Website 2020</span>\n                        </div>\n                    </div>\n                </footer>\n                {/* End of Footer */}\n            </div>\n        );\n    }\n}\n\nexport default Content;\n","import React, {Component} from 'react';\n\nclass Chart extends Component {\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div\n                                        className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Earnings (Monthly)\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        $40,000\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-calendar fa-2x text-gray-300\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* Earnings (Monthly) Card Example */}\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-success shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div\n                                        className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                                        Earnings (Annual)\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        $215,000\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* Earnings (Monthly) Card Example */}\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-info shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                        Tasks\n                                    </div>\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-auto\">\n                                            <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">\n                                                50%\n                                            </div>\n                                        </div>\n                                        <div className=\"col\">\n                                            <div className=\"progress progress-sm mr-2\">\n                                                <div\n                                                    className=\"progress-bar bg-info\"\n                                                    role=\"progressbar\"\n                                                    style={{width: \"50%\"}}\n                                                    aria-valuenow={50}\n                                                    aria-valuemin={0}\n                                                    aria-valuemax={100}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* Pending Requests Card Example */}\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-warning shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div\n                                        className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                                        Pending Requests\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        18\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-comments fa-2x text-gray-300\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chart;\n","import axios from \"axios\";\n\nimport * as AuthService from \"../Services/auth-header.service\"\nimport * as types from \"../Constants/index.constant\";\n\nconst API_URL_ADMIN = \"/api/admin\";\n\nexport const getStats = () => async dispatch => {\n    try {\n        const res = await axios.get(API_URL_ADMIN + \"/getStats\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        dispatch({\n            type: types.GET_STATS,\n            payload: data.stats\n        });\n    } catch (err) {\n\n    }\n};\nexport const getUsers = async () => {\n    try {\n        const res = await axios.get(API_URL_ADMIN + \"/showUsers\", {\n            headers: AuthService.authHeader()\n        });\n        const {data} = res;\n        localStorage.setItem(\"users-admin\", JSON.stringify(data.users));\n    } catch (err) {\n\n    }\n};\nexport const userAccountLock = async (userId, permissions, isVerified) => {\n    return await axios.post(API_URL_ADMIN + \"/userAccountLock/\" + userId, {isVerified, permissions}, {\n        headers: AuthService.authHeader()\n    });\n};\nexport const changePermissions = async (userId, permissions) => {\n    return await axios.post(API_URL_ADMIN + \"/changePermissions/\" + userId, {permissions}, {\n        headers: AuthService.authHeader()\n    });\n};\nexport const removeUser = async (userId, permissions) => {\n    return await axios.post(API_URL_ADMIN + \"/removeUser/\" + userId, {permissions}, {\n        headers: AuthService.authHeader()\n    });\n};\nexport const removePost = async (postId, userId) => {\n    return await axios.post(API_URL_ADMIN + \"/removePost/\" + postId, {userId}, {\n        headers: AuthService.authHeader()\n    });\n};\n","import React, {Component} from 'react';\nimport Nav from \"./Header/Nav\";\nimport Modal from \"./Modal\";\nimport Content from \"./Content\";\nimport \"./main.css\"\nimport * as adminActions from \"../../../Actions/admin.action\";\n\nclass MainHomeAdmin extends Component {\n\n    componentDidMount() {\n        (async () => {\n            await adminActions.getUsers()\n        })()\n    }\n\n    render() {\n        return (\n            <div id=\"page-top\">\n                <div id=\"wrapper\">\n                    <Nav/>\n                    <Content/>\n                </div>\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n                    <i className=\"fas fa-angle-up\"/>\n                </a>\n                <Modal/>\n            </div>\n\n        );\n    }\n}\n\nexport default MainHomeAdmin;\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport * as userActions from \"../../../Actions/user.action\";\n\nclass PerEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    isChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            firstName: nextProps.user.firstName,\n            lastName: nextProps.user.lastName,\n            day: (new Date(nextProps.user.birthday)).getDate(),\n            month: (new Date(nextProps.user.birthday)).getMonth() + 1,\n            year: (new Date(nextProps.user.birthday)).getFullYear(),\n            sex: nextProps.user.sex,\n            phone: nextProps.user.phone,\n            religion: nextProps.user.religion,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const user = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            birthday: this.state.year + \"-\" + this.state.month + \"-\" + this.state.day,\n            sex: JSON.parse(this.state.sex),\n            phone: this.state.phone,\n            religion: this.state.religion\n        };\n\n        this.props.updatePerDetail(user);\n        this.props.setUser(user);\n        console.log(this.state.day)\n        this.setState({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            birthday: this.state.year + \"-\" + this.state.month + \"-\" + this.state.day,\n            day: this.state.day,\n            month: this.state.month,\n            year: this.state.year,\n            sex: JSON.parse(this.state.sex),\n            phone: this.state.phone,\n            religion: this.state.religion\n        });\n        this.props.disableModal(0);\n\n    };\n\n    render() {\n\n        return (\n            <div className=\"modal animate\">\n                <div className=\"Edit\">\n                    <span className=\"close\" title=\"Close Modal\" onClick={() => this.props.disableModal(0)}>×</span>\n                    <h2 align=\"center\">Personal Detail Edit</h2>\n                    <form id=\"contactform\" name=\"contact\" method=\"post\" action=\"#\" onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <label htmlFor=\"name\">First Name<span className=\"req\">*</span></label>\n                            <input type=\"text\" name=\"firstName\" id=\"name\" className=\"txt-edit\" tabIndex=\"1\"\n                                   defaultValue={this.state.firstName} required\n                                   onChange={this.isChange}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            <label htmlFor=\"name\">Last Name<span className=\"req\">*</span></label>\n                            <input type=\"text\" name=\"lastName\" id=\"name\" className=\"txt-edit\" tabIndex=\"1\"\n                                   defaultValue={this.state.lastName} required\n                                   onChange={this.isChange}\n                            />\n                        </div>\n\n                        <div className=\"row\">\n                            <label>Birthday<span className=\"req\">*</span></label>\n                            <select name=\"day\" className=\"select-birthday\" value={this.state.day}\n                                    onChange={this.isChange}\n                            >\n                                {\n                                    [...Array(31)].map(((value, i) => {\n                                            if (parseInt(this.state.day) === i + 1) {\n                                                return (<option selected key={i} value={i + 1}>{i + 1} </option>)\n                                            }\n                                            return <option key={i} value={i + 1}>{i + 1} </option>\n                                        }\n                                    ))\n                                }\n                            </select>\n                            <select name=\"month\" className=\"select-birthday\" value={this.state.month}\n                                    onChange={this.isChange}\n                            >\n\n                                {\n                                    [...Array(12)].map(((value, i) => {\n                                            if (parseInt(this.state.month) === i + 1) {\n                                                return (<option selected key={i} value={i + 1}>Tháng {i + 1}</option>)\n                                            }\n                                            return (<option key={i} value={i + 1}>Tháng {i + 1}</option>)\n                                        }\n                                    ))\n                                }\n                            </select>\n                            <select name=\"year\" className=\"select-birthday\" defaultValue={this.state.year}\n                                    onChange={this.isChange}\n                            >\n\n                                {\n                                    [...Array(91)].map(((value, i) => {\n                                            if (this.state.year === i + 1930) {\n                                                return (<option selected key={i} value={i + 1930}>{i + 1930}</option>)\n                                            }\n                                            return (<option key={i} value={i + 1930}>{i + 1930}</option>)\n                                        }\n                                    ))\n                                }\n                            </select>\n                        </div>\n                        <div className=\"row\">\n                            <label htmlFor=\"sex\">Gender<span className=\"req\">*</span></label>\n                            {this.state.sex ?\n                                <select name=\"sex\" className=\"select-gender\"\n                                        onChange={this.isChange}\n                                >\n                                    <option value={true} selected>Nam</option>\n                                    <option value={false}>Nữ</option>\n                                </select> :\n                                <select name=\"sex\" className=\"select-gender\"\n                                        onChange={this.isChange}\n                                >\n                                    <option value={true}>Nam</option>\n                                    <option value={false} selected>Nữ</option>\n                                </select>}\n\n                        </div>\n                        <div className=\"row\">\n                            <label>Phone<span className=\"req\">*</span></label>\n                            <input type=\"text\" name=\"phone\" className=\"txt-edit\" tabIndex=\"2\"\n                                   placeholder=\"0777561933\" required\n                                   defaultValue={this.state.phone}\n                                   onChange={this.isChange}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            <label>Religion<span className=\"req\">*</span></label>\n                            <input type=\"text\" name=\"religion\" className=\"txt-edit\" tabIndex=\"2\"\n                                   placeholder=\"Phật giáo\" required\n                                   onChange={this.isChange}\n                                   defaultValue={this.state.religion}\n                            />\n                        </div>\n                        <div className=\"center\">\n                            <input type=\"submit\" id=\"submitbtn\" name=\"submitbtn\" tabIndex=\"5\" value=\"Save\"/>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUserReducer,\n    // coverImages: state.currentUserReducer.coverImages,\n});\nconst mapDispatchToProps = dispatch => ({\n    updatePerDetail: (formData) => dispatch(userActions.updatePerDetail(formData))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(PerEdit);\n","import React, {Component} from 'react';\n\nclass HighEdit extends Component {\n    render() {\n        return (\n            <div className=\"modal animate\">\n                <div className=\"Edit\">\n                    <span className=\"close\" title=\"Close Modal\">&times;</span>\n                    <h2 align=\"center\">High School Education Edit</h2>\n                    <form action=\"#\" onSubmit=\"return false\">\n                        <br/>\n                        <label>High School</label>\n                        <br/>\n                        <input type=\"text\" name=\"hschool\" placeholder=\"Enter Primary School\" required/>\n                        <br/>\n                        <label>Start Year</label>\n                        <label style={{position: 'absolute', left: '50.6%'}}>End\n                            Year</label>\n                        <br/>\n                        <input style={{width: '49%'}} type=\"number\" name=\"syear1\" placeholder=\"Start Year\"\n                               min={1970} max={2017} required/>\n                        <input style={{width: '49%'}} type=\"number\" name=\"eyear1\" placeholder=\"End Year\"\n                               min={1970} required/>\n                        <br/>\n                        <button type=\"submit\">Update</button>\n                        <br/>\n                        <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n                        <br/>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HighEdit;","import React, {Component} from 'react';\n\nclass UniEdit extends Component {\n    render() {\n        return (\n            <div className=\"modal animate\">\n                <div className=\"Edit\">\n                    <span className=\"close\" title=\"Close Modal\">×</span>\n                    <h2 align=\"center\">University Education Edit</h2>\n                    <form action=\"#\" onSubmit=\"return false\">\n                        <br/>\n                        <label>University</label>\n                        <br/>\n                        <input type=\"text\" name=\"university\" placeholder=\"Enter Secondary School\" required/>\n                        <br/>\n                        <label>Field of Study</label>\n                        <br/>\n                        <input type=\"text\" name=\"fstudy2\" placeholder=\"Enter Field of Study\" required/>\n                        <br/>\n                        <label>Start Year</label>\n                        <label style={{position: 'absolute', left: '50.6%'}}>End\n                            Year</label>\n                        <br/>\n                        <input style={{width: '49%'}} type=\"number\" name=\"syear1\" placeholder=\"Start Year\"\n                               min={1970} max={2017} required/>\n                        <input style={{width: '49%'}} type=\"number\" name=\"eyear1\" placeholder=\"End Year\"\n                               min={1970} required/>\n                        <br/>\n                        <button type=\"submit\">Update</button>\n                        <br/>\n                        <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n                        <br/>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UniEdit;","import React, {Component} from 'react';\n\nclass AddressEdit extends Component {\n    render() {\n        return (\n            <div className=\"modal animate\">\n                <div className=\"Edit\">\n                    <span className=\"close\" title=\"Close Modal\">×</span>\n                    <h2 align=\"center\">Address Edit</h2>\n                    <form action=\"#\" onSubmit=\"return false\">\n                        <br/>\n                        <label>Country</label>\n                        <br/>\n                        <input type=\"text\" name=\"country\" placeholder=\"Enter Country\" required/>\n                        <br/>\n                        <label>City</label>\n                        <br/>\n                        <input type=\"text\" name=\"city\" placeholder=\"Enter State\" required/>\n                        <br/>\n                        <label>District</label>\n                        <br/>\n                        <input type=\"text\" name=\"district\" placeholder=\"Enter District\" required/>\n                        <br/>\n                        <label>Village</label>\n                        <br/>\n                        <input type=\"number\" name=\"village\" placeholder=\"Enter ZIP code\" required/>\n                        <br/>\n                        <label>Street</label>\n                        <br/>\n                        <input type=\"number\" name=\"street\" placeholder=\"Enter ZIP code\" required/>\n                        <br/>\n                        <button type=\"submit\">Update</button>\n                        <br/>\n                        <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n                        <br/>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddressEdit;","import React, {Component} from 'react';\n\nclass MoreEdit extends Component {\n    render() {\n        return (\n            <div className=\"modal animate\">\n                <div className=\"Edit\">\n                    <span className=\"close\" title=\"Close Modal\">×</span>\n                    <h2 align=\"center\">More About You Edit</h2>\n                    <form action=\"#\" onSubmit=\"return false\">\n                        <br/>\n                        <label htmlFor=\"interest\">Relationship</label>\n                        <br/>\n                        <select style={{\n                            width: '100%',\n                            padding: '10px 16px',\n                            margin: '12px 0',\n                            display: 'inline-block',\n                            border: '1px solid #ccc',\n                            boxSizing: 'border-box',\n                            borderRadius: '5px',\n                            fontSize: '14px'\n                        }} title=\"Interest\" id=\"interest\">\n                            <option value=\"Relationship\">Relationship</option>\n                            <option value=\"độc thân\">Độc thân</option>\n                            <option value=\"Woman\">Đã có người yêu</option>\n                            <option value=\"Men and Woman\">Đã có gia đình</option>\n                            <option value=\"Men and Woman\">Đang hẹn hò</option>\n                        </select>\n                        <br/>\n                        <label htmlFor=\"interest\">Interest In</label>\n                        <br/>\n                        <select style={{\n                            width: '100%',\n                            padding: '10px 16px',\n                            margin: '12px 0',\n                            display: 'inline-block',\n                            border: '1px solid #ccc',\n                            boxSizing: 'border-box',\n                            borderRadius: '5px',\n                            fontSize: '14px'\n                        }} title=\"Interest\" id=\"interest\">\n                            <option value=\"Interest In\">Interest In</option>\n                            <option value=\"Men\">Nam</option>\n                            <option value=\"Woman\">Nữ</option>\n                            <option value=\"Men and Woman\">Nam và Nữ</option>\n                        </select>\n                        <br/>\n                        <label>Hobby</label>\n                        <br/>\n                        <input type=\"text\" name=\"hobby\" placeholder=\"Enter Hobby\" required/>\n                        <br/>\n                        <button type=\"submit\">Update</button>\n                        <br/>\n                        <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n                        <br/>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MoreEdit;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom'\nimport society1 from \"../images/login/profile/society1.jpg\"\nimport society2 from \"../images/login/profile/society2.jpg\"\nimport society3 from \"../images/login/profile/society3.jpg\"\nimport upload from \"../images/profile/upload.png\"\nimport {logout} from \"../utils/index.util\";\nimport * as postActions from \"../../Actions/post.action\";\nimport PerEdit from \"./EditForm/PerEdit\";\nimport HighEdit from \"./EditForm/HighEdit\";\nimport UniEdit from \"./EditForm/UniEdit\";\nimport AddressEdit from \"./EditForm/AddressEdit\";\nimport MoreEdit from \"./EditForm/MoreEdit\";\nimport {ObjectID} from \"bson\";\nimport * as configSocket from \"../../socket/configSocket\";\nimport * as contactActions from \"../../Actions/contact.action\";\n\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass LeftFixedProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profileImage: \"\",\n            coverImages: [],\n            isContact: undefined,\n            isAddFriend: undefined,\n        };\n    }\n\n    handleLogout = () => {\n        logout();\n        this.setState({\n            isLogin: false\n        })\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        this.setState({\n            profileImage: nextProps.user.profileImage,\n            coverImages: nextProps.user.coverImages,\n            firstName: nextProps.user.firstName,\n            lastName: nextProps.user.lastName,\n            email: nextProps.user.email,\n            birthday: nextProps.user.birthday,\n            sex: nextProps.user.sex,\n            phone: nextProps.user.phone,\n            religion: nextProps.user.religion,\n            isContact: nextProps.isContact,\n            isAddFriend: nextProps.isAddFriend\n        })\n    }\n\n    componentDidMount() {\n\n        this.props.getContacts();\n    }\n\n    setUser = (user) => {\n        console.log(user);\n        this.setState({\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            birthday: user.birthday,\n            sex: user.sex,\n            phone: user.phone,\n            religion: user.religion\n        })\n    }\n    handleUpLoadProfileImg = async (e) => {\n        console.log(e.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"file\", e.target.files[0])\n        formData.append('upload_preset', 'tuanpham');\n        const path = await postActions.uploadProfileImg(formData);\n        delete this.props.user.profileImage;\n        this.props.user.profileImage = path;\n        this.setState({\n            profileImage: path\n        })\n    };\n    handleUpLoadCoverImages = async (e) => {\n        console.log(e.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"file\", e.target.files[0])\n        formData.append('upload_preset', 'tuanpham');\n        const pathArr = await postActions.upLoadCoverImages(formData);\n        window.location.reload();\n        let arr = [];\n        for (let i = 0; i < 3; i++) {\n            arr.push(pathArr[i])\n        }\n        this.setState({\n            coverImages: arr\n        })\n    };\n    showSlides = () => {\n        try {\n            const length = this.state.coverImages.length;\n            switch (length) {\n                case 1:\n                    return (\n                        <div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[0]} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society1} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society2} className=\"slidimg\"/>\n                            </div>\n\n                        </div>);\n                case 2:\n                    return (\n                        <div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[0]} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[1]} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society1} className=\"slidimg\"/>\n                            </div>\n\n                        </div>\n                    );\n                case 3:\n                    return (\n                        <div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[0]} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[1]} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={this.state.coverImages[2]} className=\"slidimg\"/>\n                            </div>\n\n                        </div>\n                    );\n                default:\n                    return (\n                        <div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society1} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society2} className=\"slidimg\"/>\n                            </div>\n                            <div className=\"singleslide\">\n                                <img alt=\"hihi\" src={society3} className=\"slidimg\"/>\n                            </div>\n                        </div>\n                    )\n            }\n        } catch (err) {\n\n        }\n\n    };\n\n    addFriend = (contactId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('add-friend', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"ADD_FRIEND\"\n        });\n        this.props.addFriend(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-profile-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-profile-\" + contactId);\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        console.log(cancelReqSociety)\n        if (addFriendSociety) addFriendSociety.style.display = 'none';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'block';\n        if (addFriend) addFriend.style.display = 'none';\n        if (cancelReq) cancelReq.style.display = 'block';\n\n    };\n    cancelRequest = (contactId) => {\n\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('cancel-request', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"CANCEL_REQUEST\"\n        });\n        this.props.cancelRequest(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-profile-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-profile-\" + contactId);\n\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'block';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'none';\n        if (addFriend) addFriend.style.display = 'block';\n        if (cancelReq) cancelReq.style.display = 'none';\n\n\n    };\n    onClickUnFriend = (e, contactId) => {\n        e.preventDefault();\n\n        this.setState({isContact: false});\n        this.props.unFriend(contactId);\n        const addFriendSociety = document.getElementById(\"add-friend-profile-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'block';\n    };\n\n    render() {\n        const profileImage = this.state.profileImage;\n        return (\n            <div className=\"leftfixedprofile\">\n                {/* area of slide show */}\n                <div className=\"slideshowcontainer\">\n\n                    {user._id === this.props.user._id ?\n                        <div>\n                            <input type=\"file\" name=\"pic\" className=\"chooseslide\" accept=\"image/*\"\n                                   title=\"change slideshow image\"\n                                   onChange={this.handleUpLoadCoverImages}\n                                   onMouseOver={() => this.props.stopTime()}\n                                   onMouseOut={() => this.props.startTime()}\n\n                            />\n                            <p className=\"slideEdit\">✎</p>\n                        </div> : \"\"}\n\n                    <div className=\"bubble\">\n                        <span className=\"dot\" onClick={() => this.props.currentSlide(1)}/>\n                        <span className=\"dot\" onClick={() => this.props.currentSlide(3)}/>\n                        <span className=\"dot\" onClick={() => this.props.currentSlide(3)}/>\n                    </div>\n                    {this.showSlides()}\n                    <div className=\"prev\" onClick={() => this.props.plusSlides(-1)}>❮</div>\n                    <div className=\"next\" onClick={() => this.props.plusSlides(1)}>❯</div>\n                </div>\n                {/* End area of slideshow */}\n                {/* start sidebar left profile */}\n                <div className=\"sidebarleftprofile\">\n                    {/* change image */}\n                    {user._id === this.props.user._id ?\n                        <div>\n                            <input type=\"file\" name=\"file\" className=\"chooseslide1\" accept=\"image/*\"\n                                   title=\"change profile pic\"\n                                   onChange={this.handleUpLoadProfileImg}\n                            />\n                            <p className=\"slideEdit1\">✎</p>\n                        </div> : \"\"}\n                    {/* End change image */}\n                    <img alt=\"profile\" src={profileImage ? profileImage : upload} title=\"Profile Pic\"\n                         className=\"profilepic\"/>\n                    <p id=\"sidename\"> {this.state.lastName} {this.state.firstName}</p>\n                    <p id=\"nosociety\">{this.props.user.followQuantity}</p>\n                    {\n                        this.state.isContact && user._id !== this.props.user._id ? (\n                            <div className=\"btn-group\">\n                                <button type=\"button\" className=\"btn btn-danger dropdown-toggle\"\n                                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-user-check\"/>\n                                </button>\n                                <div className=\"dropdown-menu\">\n                                    <a className=\"dropdown-item\" href=\"#unfriend\"\n                                       onClick={(e) => this.onClickUnFriend(e, this.props.user._id)}\n                                    >\n                                        <i className=\"fas fa-user-times\"/>Unfriend\n                                    </a>\n                                </div>\n                            </div>\n                        ) : \"\"\n\n\n                    }\n                    {\n                        this.state.isAddFriend && !this.state.isContact && user._id !== this.props.user._id ? (\n                            <div>\n                                <button id={\"add-friend-profile-\" + this.props.user._id}\n                                        className={\"btn btn-danger\"}\n                                        onClick={() => this.addFriend(this.props.user._id)}\n                                        style={{display: 'none'}}\n                                >\n                                    <i className=\"fas fa-user-plus\"/>Add Friend\n                                </button>\n                                <button id={\"cancel-request-profile-\" + this.props.user._id}\n                                        className=\"btn btn-danger cancel-request\"\n                                        onClick={() => this.cancelRequest(this.props.user._id)}\n                                >\n                                    <i className=\"fas fa-user-times\"/>Cancel Request\n                                </button>\n                            </div>\n\n                        ) : !this.state.isAddFriend && !this.state.isContact && user._id !== this.props.user._id ? (\n                            <div>\n                                <button id={\"cancel-request-profile-\" + this.props.user._id}\n                                        className=\"btn btn-danger cancel-request\"\n                                        onClick={() => this.cancelRequest(this.props.user._id)}\n                                        style={{display: 'none'}}\n                                >\n                                    <i className=\"fas fa-user-times\"/>Cancel Request\n                                </button>\n\n                                <button id={\"add-friend-profile-\" + this.props.user._id}\n                                        className={\"btn btn-danger\"}\n                                        onClick={() => this.addFriend(this.props.user._id)}\n                                >\n                                    <i className=\"fas fa-user-plus\"/>Add Friend\n                                </button>\n                            </div>\n                        ) : \"\"\n                    }\n                </div>\n\n                <div className=\"timeline\">\n                    <div className=\"container left\">\n                        {user._id === this.props.user._id ?\n                            <p className=\"slideEdit2\" title=\"Edit\" onClick={() => this.props.enableModal()}>✎</p> : \"\"}\n                        <div className=\"tcontent\">\n                            <h2>Personal Detail</h2>\n                            <h4>First Name:</h4>\n                            <p>{this.state.firstName}</p>\n                            <h4>Last Name:</h4>\n                            <p>{this.state.lastName}</p>\n                            <h4>Email:</h4>\n                            <p>{this.state.email}</p>\n                            <h4>Date Of Birth:</h4>\n                            <p>12 Feb 1997</p>\n                            <h4>Gender:</h4>\n                            <p>{this.state.sex ? \"Nam\" : \"Nữ\"}</p>\n                            <h4>Phone no:</h4>\n                            <p>{this.state.phone ? this.state.phone : \"Hãy nhập số điện thoại của bạn!!!\"}</p>\n                            <h4>Religion</h4>\n                            <p>{this.state.religion ? this.state.religion : \"Tôn giáo của bạn là gì?\"}</p>\n                        </div>\n                    </div>\n                    <div className=\"container right\">\n                        {user._id === this.props.user._id ? <p className=\"slideEdit2\" title=\"Edit\">✎</p> : \"\"}\n\n                        <div className=\"tcontent\">\n                            <h2>High School Education</h2>\n                            <h4>High School:</h4>\n                            <p>{this.props.user.highSchool ? this.props.user.highSchool : \"Thêm thông tin về trường THPT!\"}</p>\n                            <h4>Academy Year:</h4>\n                            <p>{this.props.user.academyYear ? this.props.user.academyYear : \"Niên khóa bao nhiêu bạn nhỉ?\"}</p>\n                        </div>\n                    </div>\n                    <div className=\"container left\">\n                        {user._id === this.props.user._id ? <p className=\"slideEdit2\" title=\"Edit\">✎</p> : \"\"}\n\n                        <div className=\"tcontent\">\n                            <h2>University Education</h2>\n                            <h4>University:</h4>\n                            <p>{this.props.user.university ? this.props.user.university : \"Thêm thông tin về trường ĐH!\"}</p>\n                            <h4>Field of Study:</h4>\n                            <p>{this.props.user.fieldOfStudy ? this.props.user.fieldOfStudy : \"Chuyên nghành của bạn?\"}</p>\n                            <h4>Academy Year:</h4>\n                            <p>{this.props.user.academyYear ? this.props.user.academyYear : \"Niên khóa bao nhiêu bạn nhỉ?\"}</p>\n                        </div>\n                    </div>\n                    <div className=\"container right\">\n                        {user._id === this.props.user._id ? <p className=\"slideEdit2\" title=\"Edit\">✎</p> : \"\"}\n                        <div className=\"tcontent\">\n                            <h2>Address</h2>\n                            <h4>Country:</h4>\n                            <p>{this.props.user.country ? this.props.user.country : \"Hỏi nè, Quốc Gia của bạn là gì?\"}</p>\n                            <h4>City:</h4>\n                            <p>{this.props.user.city ? this.props.user.city : \"Thành phố bạn đang sống là gì đấy!!!\"}</p>\n                            <h4>District:</h4>\n                            <p>{this.props.user.district ? this.props.user.district : \"Quận/Huyện nào nhỉ?!\"}</p>\n                            <h4>Village:</h4>\n                            <p>{this.props.user.village ? this.props.user.village : \"Xã nào nhỉ?!\"}</p>\n                            <h4>Street:</h4>\n                            <p>{this.props.user.street ? this.props.user.street : \"Đại chỉ đường là gì nhỉ?!\"}</p>\n\n                        </div>\n                    </div>\n                    <div className=\"container left\">\n                        {user._id === this.props.user._id ? <p className=\"slideEdit2\" title=\"Edit\">✎</p> : \"\"}\n                        <div className=\"tcontent\">\n                            <h2>More About You</h2>\n                            <h4>Relationship:</h4>\n                            <p>{this.props.user.relationship ? this.props.user.relationship : \"Ủa, rồi bạn có người yêu chưa?\"}</p>\n                            <h4>Interested In:</h4>\n                            <p>{this.props.user.interested ? this.props.user.interested : \"Bạn thích giới tính nào nè?\"}</p>\n                            <h4>Hobby:</h4>\n                            <p>{this.props.user.hobby ? this.props.user.hobby : \"Sở thích của bạn là gì?\"}</p>\n                        </div>\n                    </div>\n                </div>\n\n                <PerEdit\n                    disableModal={(n) => this.props.disableModal(n)}\n                    user={this.props.user}\n                    setUser={(user) => this.setUser(user)}\n                />\n                <HighEdit disableModal={(n) => this.props.disableModal(n)}/>\n                <UniEdit disableModal={(n) => this.props.disableModal(n)}/>\n                <AddressEdit disableModal={(n) => this.props.disableModal(n)}/>\n                <MoreEdit/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n\n    contacts: state.contactReducer.contacts\n});\nconst mapDispatchToProps = dispatch => ({\n    addFriend: (contactId, notificationId) => dispatch(contactActions.addFriend(contactId, notificationId)),\n    cancelRequest: (contactId, notificationId) => dispatch(contactActions.cancelRequest(contactId, notificationId)),\n    getContacts: () => dispatch(contactActions.getContacts()),\n    unFriend: (contactId) => dispatch(contactActions.unFriend(contactId)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftFixedProfile);\n","import React, {Component} from 'react';\n\nclass Mess extends Component {\n    render() {\n        return (\n            <div className=\"message\" id=\"msg1\">\n                <button id=\"msg2\">Messaging</button>\n                <p> No New Messages.</p>\n            </div>\n        );\n    }\n}\n\nexport default Mess;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\n\nimport * as AuthService from \"../../Services/auth.service\"\nimport {withAlert} from 'react-alert'\nimport './css/cssAuth.css'\n\nclass RecoverForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n        }\n    }\n\n    isChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await AuthService.recover(this.state.email);\n            const {data} = res;\n            this.props.alert.success(data.message)\n        } catch (error) {\n            const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n            this.props.alert.error(resMessage);\n            this.setState({email: \"\"})\n        }\n    };\n\n    render() {\n\n        return (\n            <div className=\"MainAuth recover\">\n                <div className=\"container\" id=\"container\">\n                    <div className=\"form-container sign-in-container\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h1>Lấy lại mật khẩu</h1>\n                            {this.props.message && (\n                                <span className=\"alert alert-danger\"\n                                      role=\"alert\">{this.props.message}\n                                 </span>\n                            )}\n                            <input type=\"email\"\n                                   name=\"email\"\n                                   className=\"txt\"\n                                   placeholder=\"Email\"\n                                   required\n                                   value={this.state.email}\n                                   onChange={this.isChange}\n                            />\n                            <Link to=\"/\">Quay lại trang <strong>đăng nhập</strong>?</Link>\n                            <button id=\"submitbtn\">Xác nhận</button>\n                        </form>\n                    </div>\n                    <div className=\"overlay-container\">\n                        <div className=\"overlay\">\n                            <div className=\"overlay-panel overlay-right\">\n                                <h1>Hello, Friend!</h1>\n                                <p>Để lấy lại mật khẩu, vui lòng nhập email của bạn để sử dụng dịch vụ của chúng tôi.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withAlert()(RecoverForm);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\n\nimport * as AuthService from \"../../Services/auth.service\"\nimport {withAlert} from 'react-alert'\n\nimport './css/cssAuth.css'\n\n\nclass ResetPasswordForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            cfpassword: \"\",\n            isReset: false\n        }\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n        (async () => {\n            try {\n                const {match: {params}} = this.props;\n                const res = await AuthService.reset(params.token);\n                const {data} = res;\n                this.setState({isReset: data.isReset})\n            } catch (error) {\n                const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n                if (resMessage) {\n                    window.location.assign(\"/\");\n                }\n            }\n        })()\n    }\n\n    isChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(this.state.isReset)\n            const {match: {params}} = this.props;\n            if (!this.state.isReset) {\n                return this.props.alert.error(\"Mã đặt lại mật khẩu không hợp lệ hoặc đã hết hạn.\")\n            }\n            if (this.state.cfpassword !== this.state.password) {\n                return this.props.alert.error(\"Hai mật khẩu không khớp.\")\n            }\n\n            if (!checkPassword(this.state.password)) {\n                this.setState({password: \"\"});\n                return this.props.alert.error(\"Mật khẩu không nên rỗng, 8 ký tự tối thiểu, ít nhất một chữ cái, một số và một ký tự đặc biệt\")\n            }\n\n            if (this.state.isReset && this.state.cfpassword === this.state.password) {\n                const res = await AuthService.resetPassword(params.token, this.state.password);\n                const {data} = res;\n                this.setState({password: \"\", cfpassword: \"\"});\n                return this.props.alert.success(data.message);\n            }\n        } catch (error) {\n            const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n            this.props.alert.error(resMessage)\n        }\n    };\n\n    render() {\n\n        return (\n            <div className=\"MainAuth reset\">\n                <div className=\"container\" id=\"container\">\n                    <div className=\"form-container sign-in-container\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h1>Lấy lại mật khẩu</h1>\n                            {this.props.message && (\n                                <span className=\"alert alert-danger\"\n                                      role=\"alert\">{this.props.message}\n                                 </span>\n                            )}\n                            <input type=\"password\"\n                                   name=\"password\"\n                                   className=\"txt\"\n                                   placeholder=\"Password\"\n                                   required\n                                   value={this.state.password}\n                                   onChange={this.isChange}\n                            />\n                            <input type=\"password\"\n                                   name=\"cfpassword\"\n                                   className=\"txt\"\n                                   placeholder=\"Confirm Password\"\n                                   required\n                                   value={this.state.cfpassword}\n                                   onChange={this.isChange}\n                            />\n                            <Link to=\"/\">Quay lại trang <strong>đăng nhập</strong>?</Link>\n                            <button id=\"submitbtn\">Xác nhận</button>\n                        </form>\n                    </div>\n                    <div className=\"overlay-container\">\n                        <div className=\"overlay\">\n                            <div className=\"overlay-panel overlay-right\">\n                                <h1>Hello, Friend!</h1>\n                                <p>Vui lòng nhập nhập mật khẩu mới của bạn để đặt lại mật khẩu nhé!</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst checkPassword = (password) => {\n    const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{8,}$/;\n    return regex.exec(password) !== null;\n};\n\n\nexport default withAlert()(ResetPasswordForm);\n","import React, {Component} from 'react';\nimport Topbar from \"../Header/Topbar\";\nimport axios from 'axios'\nimport ReactPaginate from 'react-paginate';\nimport * as adminActions from \"../../../../Actions/admin.action\";\nimport {withAlert} from \"react-alert\";\n\n// const admin = JSON.parse(localStorage.getItem('user'));\n\n\nconst API_URL_ADMIN = \"/api/admin\";\n\nclass TablePosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            data: [],\n            perPage: 5,\n            currentPage: 0,\n            totalItemsCount: 0,\n            postData: [],\n            textSearch: \"\",\n            dataTable_length: 5,\n            stateShow: false\n        };\n    }\n\n    isChangeSearch = (e) => {\n        const arr = [];\n        this.state.data.forEach(user => {\n            const fullName = user.lastName + \" \" + user.firstName;\n            console.log(e.target.value.length)\n            if ((user.email.toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1\n                || this.toSlug(fullName).toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1)\n                && e.target.value.length !== 0) {\n                arr.push(user)\n            }\n        });\n        if (arr.length === 0) {\n            const array = this.state.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n            this.setState({postData: array})\n        } else {\n            this.setState({postData: arr})\n        }\n\n    };\n    isChange = (e) => {\n        const array = this.state.data.slice(this.state.offset, this.state.offset + e.target.value);\n        this.setState({\n            postData: array,\n            stateShow: true\n        })\n    };\n    toSlug = (str) => {\n        // Chuyển hết sang chữ thường\n        str = str.toLowerCase();\n\n        // xóa dấu\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n        str = str.replace(/(đ)/g, 'd');\n\n        // Xóa ký tự đặc biệt\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n        return str;\n    };\n    receivedData = async () => {\n        try {\n            const token = JSON.parse(localStorage.getItem(\"jwt\"));\n            if (token) {\n                const res = await axios.get(API_URL_ADMIN + \"/showUsers\", {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                const {data} = res;\n                const slice = data.users.slice(this.state.offset, this.state.offset + this.state.perPage);\n                this.setState({\n                    data: data.users,\n                    pageCount: Math.ceil(data.users.length / this.state.perPage),\n                    postData: slice,\n                    totalItemsCount: this.state.offset + slice.length\n                })\n            }\n        } catch (err) {\n\n        }\n\n    }\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset,\n            stateShow: false\n        }, () => {\n            this.receivedData()\n        });\n\n    };\n\n    componentDidMount() {\n        this.receivedData()\n    }\n\n    accountLock = (userId, permissions, isVerified) => {\n        const admin = JSON.parse(localStorage.getItem('user'));\n        const permissionsAdmin = admin.permissions;\n        const arr = this.state.data;\n        const user = arr.find(user => user._id === userId);\n        if (permissionsAdmin === 2 && permissions === 3) {\n            user.isVerified = !isVerified;\n        } else if (permissionsAdmin === 1 && permissions === 2) {\n            user.isVerified = !isVerified;\n        } else if (permissionsAdmin === 1 && permissions === 3) {\n            user.isVerified = !isVerified;\n        }\n        (async () => {\n            try {\n                const res = await adminActions.userAccountLock(userId, permissions, !isVerified);\n                const {data} = res;\n                this.props.alert.success(data.message)\n            } catch (error) {\n                const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n                this.props.alert.error(resMessage)\n            }\n\n        })();\n        this.setState({data: arr})\n\n    };\n    isChangePermissions = (userId, permissions) => {\n        const admin = JSON.parse(localStorage.getItem('user'));\n        const permissionsAdmin = admin.permissions;\n        const arr = this.state.data;\n        const user = arr.find(user => user._id === userId);\n\n        if (permissionsAdmin === 1 && permissions === 2) {\n            user.permissions = 3;\n        } else if (permissionsAdmin === 1 && permissions === 3) {\n            user.permissions = 2;\n        }\n        (async () => {\n            try {\n                const res = await adminActions.changePermissions(userId, permissions);\n                const {data} = res;\n                this.props.alert.success(data.message)\n            } catch (error) {\n                const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n                this.props.alert.error(resMessage)\n            }\n\n        })();\n        this.setState({data: arr})\n    };\n\n    onClickRemoveUser = (userId, permissions) => {\n        const admin = JSON.parse(localStorage.getItem('user'));\n        const permissionsAdmin = admin.permissions;\n\n        if (permissionsAdmin === 2 && permissions === 3) {\n            const arr = this.state.postData.filter(user => user._id !== userId);\n            this.setState({postData: arr})\n        } else if (permissionsAdmin === 1 && permissions === 2) {\n            const arr = this.state.postData.filter(user => user._id !== userId);\n            this.setState({postData: arr})\n        } else if (permissionsAdmin === 1 && permissions === 3) {\n            const arr = this.state.postData.filter(user => user._id !== userId);\n            this.setState({postData: arr})\n        }\n        (async () => {\n            try {\n                const res = await adminActions.removeUser(userId, permissions);\n                const {data} = res;\n                this.props.alert.success(data.message)\n            } catch (error) {\n                const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n                this.props.alert.error(resMessage)\n            }\n\n        })();\n\n    };\n    sort = (field, typeSort) => {\n        const arr = this.state.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n        if (typeSort === \"DESC\" && field === \"email\") {\n            arr.sort((a, b) => a.email.toLowerCase() !== b.email.toLowerCase()\n                ? a.email.toLowerCase() > b.email.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postData: arr})\n        } else if (typeSort === \"ASC\" && field === \"email\") {\n            arr.sort((a, b) =>\n                a.email.toLowerCase() !== b.email.toLowerCase()\n                    ? a.email.toLowerCase() < b.email.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postData: arr})\n        } else if (typeSort === \"DESC\" && field === \"firstName\") {\n            arr.sort((a, b) => a.firstName.toLowerCase() !== b.firstName.toLowerCase()\n                ? a.firstName.toLowerCase() > b.firstName.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postData: arr})\n        } else if (typeSort === \"ASC\" && field === \"firstName\") {\n            arr.sort((a, b) =>\n                a.firstName.toLowerCase() !== b.firstName.toLowerCase()\n                    ? a.firstName.toLowerCase() < b.firstName.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postData: arr})\n        } else if (typeSort === \"male\" && field === \"sex\") {\n            const array = arr.filter((user) => user.sex === true);\n            this.setState({postData: array})\n        } else if (typeSort === \"female\" && field === \"sex\") {\n            const array = arr.filter((user) => user.sex === false);\n            this.setState({postData: array})\n        } else if (typeSort === \"DESC\" && field === \"age\") {\n            arr.sort((a, b) => {\n                const ageA = parseInt((new Date()).getFullYear()) - parseInt((new Date(a.birthday)).getFullYear());\n                const ageB = parseInt((new Date()).getFullYear()) - parseInt((new Date(b.birthday)).getFullYear());\n                return ageB - ageA;\n            });\n            this.setState({postData: arr})\n        } else if (typeSort === \"ASC\" && field === \"age\") {\n            arr.sort((a, b) => {\n                const ageA = parseInt((new Date()).getFullYear()) - parseInt((new Date(a.birthday)).getFullYear());\n                const ageB = parseInt((new Date()).getFullYear()) - parseInt((new Date(b.birthday)).getFullYear());\n                return ageA - ageB;\n            });\n            this.setState({postData: arr})\n        } else if (typeSort === \"no\" && field === \"isVerified\") {\n            const array = arr.filter((user) => user.isVerified === false);\n            this.setState({postData: array})\n        } else if (typeSort === \"yes\" && field === \"isVerified\") {\n            const array = arr.filter((user) => user.isVerified === true);\n            this.setState({postData: array})\n        } else if (typeSort === \"admin\" && field === \"permissions\") {\n            const array = arr.filter((user) => user.permissions === 1);\n            this.setState({postData: array})\n        } else if (typeSort === \"moderator\" && field === \"permissions\") {\n            const array = arr.filter((user) => user.permissions === 2);\n            this.setState({postData: array})\n        } else if (typeSort === \"normal-user\" && field === \"permissions\") {\n            const array = arr.filter((user) => user.permissions === 3);\n            this.setState({postData: array})\n        }\n    };\n\n    render() {\n\n        return (\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                <div id=\"content\">\n                    <Topbar/>\n                    <div className=\"container-fluid\">\n                        {/* Page Heading */}\n                        <h1 className=\"h3 mb-2 text-gray-800\">Users Table</h1>\n                        <p className=\"mb-4\">\n                            DataTables Users is the place to display user information with functions of deletion,\n                            authorization, and account lock.\n                        </p>\n                        {/* DataTales Example */}\n                        <div className=\"card shadow mb-4\">\n                            <div className=\"card-header py-3\">\n                                <h6 className=\"m-0 font-weight-bold text-primary\">DataTables Users</h6>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-6\">\n                                            <div className=\"dataTables_length\" id=\"dataTable_length\">\n                                                <label>Show\n                                                    <select name=\"dataTable_length\"\n                                                            aria-controls=\"dataTable\"\n                                                            className=\"custom-select custom-select-sm form-control form-control-sm\"\n                                                            onChange={this.isChange}\n                                                    >\n                                                        <option value=\"5\">5</option>\n                                                        <option value=\"10\">10</option>\n                                                        <option value=\"25\">25</option>\n                                                        <option value=\"50\">50</option>\n                                                        <option value=\"100\">100</option>\n                                                    </select> entries</label></div>\n                                        </div>\n                                        <div className=\"col-sm-12 col-md-6\">\n                                            <div id=\"dataTable_filter\" className=\"dataTables_filter\">\n                                                <div id=\"form-search\">\n                                                    <input type=\"search\" placeholder=\"Search\"\n                                                           onChange={this.isChangeSearch}\n                                                           name=\"textSearch\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <table\n                                        className=\"table table-bordered\"\n                                        id=\"dataTable\"\n                                        width=\"100%\"\n                                        cellSpacing={0}\n                                    >\n                                        <thead>\n                                        <tr>\n                                            <th>STT\n                                            </th>\n                                            <th>Email\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"email\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"email\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>FullName\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"firstName\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"firstName\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Gender\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-male\"\n                                                           onClick={() => this.sort(\"sex\", \"male\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-female\"\n                                                           onClick={() => this.sort(\"sex\", \"female\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Age\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"age\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"age\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Verified\n                                                <div className=\"dropdown\">\n                                                    <button className=\"btn btn-outline-primary dropdown-toggle\"\n                                                            type=\"button\"\n                                                            id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                                                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                        Sort\n                                                    </button>\n                                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                        <a className=\"dropdown-item\" href=\"#\"\n                                                           onClick={() => this.sort(\"isVerified\", \"no\")}\n                                                        >No\n                                                        </a>\n                                                        <a className=\"dropdown-item\" href=\"#\"\n                                                           onClick={() => this.sort(\"isVerified\", \"yes\")}\n                                                        >Yes\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </th>\n                                            <th>Permissions\n                                                <div className=\"dropdown\">\n                                                    <button className=\"btn btn-outline-primary dropdown-toggle\"\n                                                            type=\"button\"\n                                                            id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n                                                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                        Sort\n                                                    </button>\n                                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                        <a className=\"dropdown-item\" href=\"#\"\n                                                           onClick={() => this.sort(\"permissions\", \"admin\")}\n                                                        >Admin\n                                                        </a>\n                                                        <a className=\"dropdown-item\" href=\"#\"\n                                                           onClick={() => this.sort(\"permissions\", \"moderator\")}\n                                                        >Moderator\n                                                        </a>\n                                                        <a className=\"dropdown-item\" href=\"#\"\n                                                           onClick={() => this.sort(\"permissions\", \"normal-user\")}\n                                                        >Normal User\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </th>\n                                            <th>Action</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {\n                                            this.state.postData.map((user, i) => (\n                                                <tr key={i}>\n                                                    <td>{this.state.stateShow ? i + 1 : this.state.totalItemsCount - this.state.postData.length + i + 1}</td>\n                                                    <td>{user.email}</td>\n                                                    <td>{user.lastName} {user.firstName}</td>\n                                                    <td>{user.sex ? \"Male\" : \"Female\"}</td>\n                                                    <td>{parseInt((new Date()).getFullYear()) - parseInt((new Date(user.birthday)).getFullYear())}</td>\n                                                    <td id=\"verified\" className=\"center\">\n                                            <span\n                                                style={user.isVerified ? {backgroundColor: \"#dc3545\"} : {backgroundColor: \"#6c757d\"}}\n                                                onClick={() => this.accountLock(user._id, user.permissions, user.isVerified)}\n                                            >\n                                            {user.isVerified ? \"Yes\" : \"No\"}\n                                            </span>\n                                                    </td>\n                                                    <td id=\"permissions\" className=\"center\">\n                                            <span\n                                                onClick={() => this.isChangePermissions(user._id, user.permissions)}\n                                                style={user.permissions === 2 ? {backgroundColor: \"#ffc107\"} : user.permissions === 3 ? {backgroundColor: \"#28a745\"} : {backgroundColor: \"#dc3545\"}}\n                                            >\n                                            {user.permissions === 2 ? \"Moderator\" : user.permissions === 3 ? \"Normal User\" : \"Admin\"}\n                                            </span>\n                                                    </td>\n                                                    <td className=\"center\">\n                                                        <a href=\"#remove-user\"\n                                                        >\n                                                            <i className=\"fas fa-trash-alt\"\n                                                               onClick={() => this.onClickRemoveUser(user._id, user.permissions)}\n                                                            />\n                                                        </a>\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        }\n\n                                        </tbody>\n                                    </table>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            Showing {this.state.offset + 1} to {this.state.totalItemsCount} of {this.state.data.length} entries\n                                        </div>\n                                        <div className=\"col-sm-12 col-md-7\">\n                                            <ReactPaginate\n                                                previousLabel={\"prev\"}\n                                                nextLabel={\"next\"}\n                                                breakLabel={\"...\"}\n                                                breakClassName={\"break-me\"}\n                                                pageCount={this.state.pageCount}\n                                                marginPagesDisplayed={2}\n                                                pageRangeDisplayed={1}\n                                                onPageChange={this.handlePageClick}\n                                                containerClassName={\"pagination\"}\n                                                subContainerClassName={\"pages pagination\"}\n                                                activeClassName={\"active\"}/>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({});\nexport default withAlert()(TablePosts);\n// export default compose(withAlert(), connect(mapStateToProps, mapDispatchToProps))(TableUsers)\n\n\n\n","import React, {Component} from 'react';\nimport TableUsers from \"./TableUsers\";\nimport Nav from \"../Header/Nav\";\nimport * as adminActions from \"../../../../Actions/admin.action\";\n\nclass MainTableUsers extends Component {\n\n    componentDidMount() {\n        (async () => {\n            await adminActions.getUsers()\n        })()\n    }\n    render() {\n        return (\n            <div id=\"page-top\">\n                <div id=\"wrapper\">\n                    <Nav/>\n                    <TableUsers/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default MainTableUsers;\n","import React, {Component} from 'react';\nimport Topbar from \"../Header/Topbar\";\nimport axios from 'axios'\nimport ReactPaginate from 'react-paginate';\nimport * as adminActions from \"../../../../Actions/admin.action\";\nimport {withAlert} from \"react-alert\";\n\nconst API_URL_ADMIN = \"/api/admin\";\nconst users_admin = JSON.parse(localStorage.getItem(\"users-admin\"));\n\nclass TablePosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            data: [],\n            perPage: 5,\n            currentPage: 0,\n            totalItemsCount: 0,\n            postsData: [],\n            textSearch: \"\",\n            dataTable_length: 5,\n            stateShow: false,\n        };\n    }\n\n    isChangeSearch = (e) => {\n        const arr = [];\n        pushFullName(this.state.data).forEach(item => {\n            const fullName = item.lastName + \" \" + item.firstName;\n            if ((this.toSlug(fullName).toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1)\n                && e.target.value.length !== 0) {\n                arr.push(item)\n            }\n        });\n        if (arr.length === 0) {\n            const array = this.state.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n            this.setState({postsData: array})\n        } else {\n            this.setState({postsData: arr})\n        }\n\n    };\n    isChange = (e) => {\n        const array = this.state.data.slice(this.state.offset, this.state.offset + parseInt(e.target.value));\n        this.setState({\n            postsData: array,\n            stateShow: true,\n            totalItemsCount: this.state.offset + array.length\n        })\n    };\n    toSlug = (str) => {\n        // Chuyển hết sang chữ thường\n        str = str.toLowerCase();\n\n        // xóa dấu\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n        str = str.replace(/(đ)/g, 'd');\n\n        // Xóa ký tự đặc biệt\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n        return str;\n    };\n    receivedData = async () => {\n        try {\n            const token = JSON.parse(localStorage.getItem(\"jwt\"));\n            if (token) {\n                const res = await axios.get(API_URL_ADMIN + \"/showPosts\", {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                const {data} = res;\n                const slice = data.posts.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n                this.setState({\n                    data: data.posts,\n                    pageCount: Math.ceil(data.posts.length / this.state.perPage),\n                    postsData: slice,\n                    totalItemsCount: this.state.offset + slice.length\n                })\n            }\n        } catch (err) {\n\n        }\n\n    };\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset,\n            stateShow: false\n        }, () => {\n            this.receivedData()\n        });\n\n    };\n\n    componentDidMount() {\n        this.receivedData()\n    }\n\n\n    onClickRemovePost = (postId, userId) => {\n        const admin = JSON.parse(localStorage.getItem('user'));\n        const user = users_admin.find(u => u._id === userId);\n\n        if (admin.permissions === 1 && user.permissions === 1) console.log(\"Không được xoá.\");\n        else if (admin.permissions === 2\n            && (user.permissions === 1 || (user.permissions === 2 && user._id.toString() !== admin._id.toString()))) console.log(\"Không được xoá.\");\n        else {\n            const array = this.state.postsData.filter(post => post.postId !== postId);\n            this.setState({postsData: array});\n        }\n\n\n        (async () => {\n            try {\n                const res = await adminActions.removePost(postId, userId);\n                const {data} = res;\n                this.props.alert.success(data.message)\n            } catch (error) {\n                const resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n                this.props.alert.error(resMessage)\n            }\n\n        })();\n\n    };\n    sort = (field, typeSort) => {\n        const arr = this.state.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        if (typeSort === \"DESC\" && field === \"firstName\") {\n            let arrSort = pushFullName(arr).sort((a, b) => a.firstName.toLowerCase() !== b.firstName.toLowerCase()\n                ? a.firstName.toLowerCase() > b.firstName.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postsData: arrSort})\n\n        } else if (typeSort === \"ASC\" && field === \"firstName\") {\n            let arrSort = pushFullName(arr).sort((a, b) =>\n                a.firstName.toLowerCase() !== b.firstName.toLowerCase()\n                    ? a.firstName.toLowerCase() < b.firstName.toLowerCase() ? -1 : 1 : 0\n            );\n            this.setState({postsData: arrSort})\n        } else if (typeSort === \"DESC\" && field === \"like\") {\n            arr.sort((a, b) => b.like - a.like);\n            this.setState({postsData: arr})\n        } else if (typeSort === \"ASC\" && field === \"like\") {\n            arr.sort((a, b) => a.like - b.like);\n            this.setState({postsData: arr})\n        } else if (typeSort === \"DESC\" && field === \"dislike\") {\n            arr.sort((a, b) => b.dislike - a.dislike);\n            this.setState({postsData: arr})\n        } else if (typeSort === \"ASC\" && field === \"dislike\") {\n            arr.sort((a, b) => a.dislike - b.dislike);\n            this.setState({postsData: arr})\n        } else if (typeSort === \"DESC\" && field === \"createdAt\") {\n            arr.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n            this.setState({postsData: arr})\n        } else if (typeSort === \"ASC\" && field === \"createdAt\") {\n            arr.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n            this.setState({postsData: arr})\n        }\n    };\n    displayFullName = (userId) => {\n        const user = {};\n        users_admin.forEach(u => {\n            if (u._id === userId) {\n                user.lastName = u.lastName;\n                user.firstName = u.firstName;\n                return user;\n            }\n        });\n        return user;\n    };\n\n    render() {\n\n        return (\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                <div id=\"content\">\n                    <Topbar/>\n                    <div className=\"container-fluid\">\n                        {/* Page Heading */}\n                        <h1 className=\"h3 mb-2 text-gray-800\">Users Table</h1>\n                        <p className=\"mb-4\">\n                            DataTables Users is the place to display user information with functions of deletion,\n                            authorization, and account lock.\n                        </p>\n                        {/* DataTales Example */}\n                        <div className=\"card shadow mb-4\">\n                            <div className=\"card-header py-3\">\n                                <h6 className=\"m-0 font-weight-bold text-primary\">DataTables Users</h6>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-6\">\n                                            <div className=\"dataTables_length\" id=\"dataTable_length\">\n                                                <label>Show\n                                                    <select name=\"dataTable_length\"\n                                                            aria-controls=\"dataTable\"\n                                                            className=\"custom-select custom-select-sm form-control form-control-sm\"\n                                                            onChange={this.isChange}\n                                                    >\n                                                        <option value=\"5\">5</option>\n                                                        <option value=\"10\">10</option>\n                                                        <option value=\"25\">25</option>\n                                                        <option value=\"50\">50</option>\n                                                        <option value=\"100\">100</option>\n                                                    </select> entries</label></div>\n                                        </div>\n                                        <div className=\"col-sm-12 col-md-6\">\n                                            <div id=\"dataTable_filter\" className=\"dataTables_filter\">\n                                                <div id=\"form-search\">\n                                                    <input type=\"search\" placeholder=\"Search\"\n                                                           onChange={this.isChangeSearch}\n                                                           name=\"textSearch\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <table\n                                        className=\"table table-bordered\"\n                                        id=\"dataTable\"\n                                        width=\"100%\"\n                                        cellSpacing={0}\n                                    >\n                                        <thead>\n                                        <tr>\n                                            <th>STT\n                                            </th>\n                                            <th>Article owner\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"firstName\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"firstName\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Quotes of article</th>\n                                            <th>Photo of article</th>\n                                            <th>Like\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"like\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"like\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Dislike\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"dislike\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"dislike\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Date created\n                                                <div className=\"sorting_asc\">\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-up\"\n                                                           onClick={() => this.sort(\"createdAt\", \"ASC\")}\n                                                        />\n                                                    </a>\n                                                    <a href=\"#sort\">\n                                                        <i className=\"fas fa-sort-alpha-down-alt\"\n                                                           onClick={() => this.sort(\"createdAt\", \"DESC\")}\n                                                        />\n                                                    </a>\n                                                </div>\n                                            </th>\n                                            <th>Action</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {\n                                            this.state.postsData.map((post, i) => (\n                                                <tr key={i}>\n                                                    <td>{this.state.stateShow ? i + 1 : this.state.totalItemsCount - this.state.postsData.length + i + 1}</td>\n                                                    <td>{this.displayFullName(post.userId).lastName} {this.displayFullName(post.userId).firstName}</td>\n                                                    <td id=\"quotes-post\">{post.quotes}</td>\n                                                    <td id=\"img-post\">{post.postImg ?\n                                                        <img src={post.postImg} alt=\" \"/> : \"\"}</td>\n                                                    <td>{post.like}</td>\n                                                    <td>{post.dislike}</td>\n                                                    <td>\n                                                        {new Date(post.createdAt).getHours()}:{new Date(post.createdAt).getMinutes()}:{new Date(post.createdAt).getSeconds()}, {(new Date(post.createdAt)).getDate()}/{(new Date(post.createdAt)).getMonth() + 1}/{(new Date(post.createdAt)).getFullYear()}\n                                                    </td>\n                                                    <td className=\"center\">\n                                                        <a href=\"#remove-post\"\n                                                        >\n                                                            <i className=\"fas fa-trash-alt\"\n                                                               onClick={() => this.onClickRemovePost(post.postId, post.userId)}\n                                                            />\n                                                        </a>\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        }\n\n                                        </tbody>\n                                    </table>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            Showing {this.state.offset + 1} to {this.state.totalItemsCount} of {this.state.data.length} entries\n                                        </div>\n                                        <div className=\"col-sm-12 col-md-7\">\n                                            <ReactPaginate\n                                                previousLabel={\"prev\"}\n                                                nextLabel={\"next\"}\n                                                breakLabel={\"...\"}\n                                                breakClassName={\"break-me\"}\n                                                pageCount={this.state.pageCount}\n                                                marginPagesDisplayed={2}\n                                                pageRangeDisplayed={1}\n                                                onPageChange={this.handlePageClick}\n                                                containerClassName={\"pagination\"}\n                                                subContainerClassName={\"pages pagination\"}\n                                                activeClassName={\"active\"}/>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst pushFullName = (arr) => {\n    let arrayPosts = [];\n    arr.forEach(item => {\n        const user = users_admin.find(u => u._id === item.userId);\n        item = {...item, firstName: user.firstName, lastName: user.lastName};\n        arrayPosts.push(item);\n    });\n    return arrayPosts\n};\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({});\nexport default withAlert()(TablePosts);\n\n// export default compose(withAlert(), connect(mapStateToProps, mapDispatchToProps))(TablePosts)\n\n\n\n","import React, {Component} from 'react';\nimport TableUsers from \"./TablePosts\";\nimport Nav from \"../Header/Nav\";\nimport * as adminActions from \"../../../../Actions/admin.action\";\n\nclass MainTablePosts extends Component {\n    componentDidMount() {\n        (async () => {\n            await adminActions.getUsers()\n        })()\n    }\n    render() {\n        return (\n            <div id=\"page-top\">\n                <div id=\"wrapper\">\n                    <Nav/>\n                    <TableUsers/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default MainTablePosts;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  InputGroup,\n  DatePicker,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\n// import \"../../assets/range-date-picker.css\";\n\nclass RangeDatePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startDate: undefined,\n      endDate: undefined\n    };\n\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n  }\n\n  handleStartDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ startDate: new Date(value) }\n    });\n  }\n\n  handleEndDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ endDate: new Date(value) }\n    });\n  }\n\n  render() {\n    const { className } = this.props;\n    const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\n\n    return (\n      <InputGroup className={classes}>\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.startDate}\n          onChange={this.handleStartDateChange}\n          placeholderText=\"Start Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.endDate}\n          onChange={this.handleEndDateChange}\n          placeholderText=\"End Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <InputGroupAddon type=\"append\">\n          <InputGroupText>\n            <i className=\"material-icons\">&#xE916;</i>\n          </InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default RangeDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../../utils/chart\";\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        responsive: true,\n        legend: {\n          position: \"top\"\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  return index % 7 !== 0 ? \"\" : tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  // Format the amounts using Ks for thousands.\n                  return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: \"nearest\",\n          intersect: false\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const BlogUsersOverview = new Chart(this.canvasRef.current, {\n      type: \"LineWithLine\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n    buoMeta.data[0]._model.radius = 0;\n    buoMeta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    BlogUsersOverview.render();\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <RangeDatePicker />\n            </Col>\n            <Col>\n              <Button\n                size=\"sm\"\n                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\n              >\n                View Full Report &rarr;\n              </Button>\n            </Col>\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nUsersOverview.defaultProps = {\n  title: \"Users Overview\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: \"Current Month\",\n        fill: \"start\",\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: \"rgba(0,123,255,0.1)\",\n        borderColor: \"rgba(0,123,255,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgb(0,123,255)\",\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: \"Past Month\",\n        fill: \"start\",\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: \"rgba(255,65,105,0.1)\",\n        borderColor: \"rgba(255,65,105,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: \"rgba(255,65,105,1)\"\n      }\n    ]\n  }\n};\n\nexport default UsersOverview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Row,\n  Col,\n  FormSelect,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nimport Chart from \"../../../utils/chart\";\n\nclass UsersByDevice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"pie\",\n      data: this.props.chartData,\n      options: {\n        ...{\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      }\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <canvas\n            height=\"220\"\n            ref={this.canvasRef}\n            className=\"blog-users-by-device m-auto\"\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nUsersByDevice.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object\n};\n\nUsersByDevice.defaultProps = {\n  title: \"Users by device\",\n  chartData: {\n    datasets: [\n      {\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\n          \"rgba(0,123,255,0.9)\",\n          \"rgba(0,123,255,0.5)\",\n          \"rgba(0,123,255,0.3)\"\n        ]\n      }\n    ],\n    labels: [\"Desktop\", \"Tablet\", \"Mobile\"]\n  }\n};\n\nexport default UsersByDevice;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormInput,\n  FormTextarea,\n  Button\n} from \"shards-react\";\n\nconst NewDraft = ({ title }) => (\n  <Card small className=\"h-100\">\n    {/* Card Header */}\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"d-flex flex-column\">\n      <Form className=\"quick-post-form\">\n        {/* Title */}\n        <FormGroup>\n          <FormInput placeholder=\"Brave New World\" />\n        </FormGroup>\n\n        {/* Body */}\n        <FormGroup>\n          <FormTextarea placeholder=\"Words can be like X-rays if you use them properly...\" />\n        </FormGroup>\n\n        {/* Create Draft */}\n        <FormGroup className=\"mb-0\">\n          <Button theme=\"accent\" type=\"submit\">\n            Create Draft\n          </Button>\n        </FormGroup>\n      </Form>\n    </CardBody>\n  </Card>\n);\n\nNewDraft.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nNewDraft.defaultProps = {\n  title: \"New Draft\"\n};\n\nexport default NewDraft;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  ButtonGroup,\n  Button,\n  Row,\n  Col\n} from \"shards-react\";\n\nconst Discussions = ({ title, discussions }) => (\n  <Card small className=\"blog-comments\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      {discussions.map((discussion, idx) => (\n        <div key={idx} className=\"blog-comments__item d-flex p-3\">\n          {/* Avatar */}\n          <div className=\"blog-comments__avatar mr-3\">\n            <img src={discussion.author.image} alt={discussion.author.name} />\n          </div>\n\n          {/* Content */}\n          <div className=\"blog-comments__content\">\n            {/* Content :: Title */}\n            <div className=\"blog-comments__meta text-mutes\">\n              <a className=\"text-secondary\" href={discussion.author.url}>\n                {discussion.author.name}\n              </a>{\" \"}\n              on{\" \"}\n              <a className=\"text-secondary\" href={discussion.post.url}>\n                {discussion.post.title}\n              </a>\n              <span className=\"text-mutes\">- {discussion.date}</span>\n            </div>\n\n            {/* Content :: Body */}\n            <p className=\"m-0 my-1 mb-2 text-muted\">{discussion.body}</p>\n\n            {/* Content :: Actions */}\n            <div className=\"blog-comments__actions\">\n              <ButtonGroup size=\"sm\">\n                <Button theme=\"white\">\n                  <span className=\"text-success\">\n                    <i className=\"material-icons\">check</i>\n                  </span>{\" \"}\n                  Approve\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-danger\">\n                    <i className=\"material-icons\">clear</i>\n                  </span>{\" \"}\n                  Reject\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-light\">\n                    <i className=\"material-icons\">more_vert</i>\n                  </span>{\" \"}\n                  Edit\n                </Button>\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n      ))}\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        <Col className=\"text-center view-report\">\n          <Button theme=\"white\" type=\"submit\">\n            View All Comments\n          </Button>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nDiscussions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The discussions dataset.\n   */\n  discussions: PropTypes.array\n};\n\nDiscussions.defaultProps = {\n  title: \"Discussions\",\n  discussions: [\n    {\n      id: 1,\n      date: \"3 days ago\",\n      author: {\n        // image: require(\"../../images/avatars/1.jpg\"),\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"Well, the way they make shows is, they make one show ...\"\n    },\n    {\n      id: 2,\n      date: \"4 days ago\",\n      author: {\n        // image: require(\"../../images/avatars/2.jpg\"),\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"After the avalanche, it took us a week to climb out. Now...\"\n    },\n    {\n      id: 3,\n      date: \"5 days ago\",\n      author: {\n        // image: require(\"../../images/avatars/3.jpg\"),\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"My money's in that office, right? If she start giving me...\"\n    }\n  ]\n};\n\nexport default Discussions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect\n} from \"shards-react\";\n\nconst TopReferrals = ({ title, referralData }) => (\n  <Card small>\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n      <div className=\"block-handle\" />\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      <ListGroup small flush className=\"list-group-small\">\n        {referralData.map((item, idx) => (\n          <ListGroupItem key={idx} className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">{item.title}</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              {item.value}\n            </span>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        {/* Time Span */}\n        <Col>\n          <FormSelect\n            size=\"sm\"\n            value=\"last-week\"\n            style={{ maxWidth: \"130px\" }}\n            onChange={() => {}}\n          >\n            <option value=\"last-week\">Last Week</option>\n            <option value=\"today\">Today</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-year\">Last Year</option>\n          </FormSelect>\n        </Col>\n\n        {/* View Full Report */}\n        <Col className=\"text-right view-report\">\n          {/* eslint-disable-next-line */}\n          <a href=\"#\">Full report &rarr;</a>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nTopReferrals.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The referral data.\n   */\n  referralData: PropTypes.array\n};\n\nTopReferrals.defaultProps = {\n  title: \"Top Referrals\",\n  referralData: [\n    {\n      title: \"GitHub\",\n      value: \"19,291\"\n    },\n    {\n      title: \"Stack Overflow\",\n      value: \"11,201\"\n    },\n    {\n      title: \"Hacker News\",\n      value: \"9,291\"\n    },\n    {\n      title: \"Reddit\",\n      value: \"8,281\"\n    },\n    {\n      title: \"The Next Web\",\n      value: \"7,128\"\n    },\n    {\n      title: \"Tech Crunch\",\n      value: \"6,218\"\n    },\n    {\n      title: \"YouTube\",\n      value: \"1,218\"\n    },\n    {\n      title: \"Adobe\",\n      value: \"1,171\"\n    }\n  ]\n};\n\nexport default TopReferrals;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Container, Row, Col} from \"shards-react\";\n\nimport PageTitle from \"./common/PageTitle\";\nimport SmallStats from \"./common/SmallStats\";\nimport UsersOverview from \"./blog/UsersOverview\";\nimport UsersByDevice from \"./blog/UsersByDevice\";\nimport NewDraft from \"./blog/NewDraft\";\nimport Discussions from \"./blog/Discussions\";\nimport TopReferrals from \"./common/TopReferrals\";\nimport * as adminActions from \"../../../Actions/admin.action\";\nimport {connect} from \"react-redux\";\n\nclass BlogOverview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            smallStats: []\n\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            smallStats: nextProps.smallStats,\n        })\n    }\n\n    componentDidMount() {\n        this.props.getStats();\n    }\n\n    render() {\n        console.log(this.state.smallStats)\n        return (\n            <Container fluid className=\"main-content-container px-4\">\n                {/* Page Header */}\n                <Row noGutters className=\"page-header py-4\">\n                    <PageTitle title=\"Admin Overview Page \" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\"/>\n                </Row>\n\n                {/* Small Stats Blocks */}\n                <Row>\n                    {this.state.smallStats.map((stats, idx) => (\n                        <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n                            <SmallStats\n                                id={`small-stats-${idx}`}\n                                variation=\"1\"\n                                chartData={stats.datasets}\n                                chartLabels={stats.chartLabels}\n                                label={stats.label}\n                                value={stats.value}\n                                percentage={stats.percentage}\n                                increase={stats.increase}\n                                decrease={stats.decrease}\n                            />\n                        </Col>\n                    ))}\n                </Row>\n\n                <Row>\n                    {/* Users Overview */}\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <UsersOverview/>\n                    </Col>\n\n                    {/* Users by Device */}\n                    <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                        <UsersByDevice/>\n                    </Col>\n\n                    {/* New Draft */}\n                    <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                        <NewDraft/>\n                    </Col>\n\n                    {/* Discussions */}\n                    <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <Discussions/>\n                    </Col>\n\n                    {/* Top Referrals */}\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <TopReferrals/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n// const BlogOverview = ({ smallStats }) => (\n//     <Container fluid className=\"main-content-container px-4\">\n//         {/* Page Header */}\n//         <Row noGutters className=\"page-header py-4\">\n//             <PageTitle title=\"Blog Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n//         </Row>\n//\n//         {/* Small Stats Blocks */}\n//         <Row>\n//             {smallStats.map((stats, idx) => (\n//                 <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n//                     <SmallStats\n//                         id={`small-stats-${idx}`}\n//                         variation=\"1\"\n//                         chartData={stats.datasets}\n//                         chartLabels={stats.chartLabels}\n//                         label={stats.label}\n//                         value={stats.value}\n//                         percentage={stats.percentage}\n//                         increase={stats.increase}\n//                         decrease={stats.decrease}\n//                     />\n//                 </Col>\n//             ))}\n//         </Row>\n//\n//         <Row>\n//             {/* Users Overview */}\n//             <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n//                 <UsersOverview />\n//             </Col>\n//\n//             {/* Users by Device */}\n//             <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n//                 <UsersByDevice />\n//             </Col>\n//\n//             {/* New Draft */}\n//             <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n//                 <NewDraft />\n//             </Col>\n//\n//             {/* Discussions */}\n//             <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n//                 <Discussions />\n//             </Col>\n//\n//             {/* Top Referrals */}\n//             <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n//                 <TopReferrals />\n//             </Col>\n//         </Row>\n//     </Container>\n// );\n\n// BlogOverview.propTypes = {\n//     /**\n//      * The small stats dataset.\n//      */\n//     smallStats: PropTypes.array\n// };\n//\n// BlogOverview.defaultProps = {\n//     smallStats: [\n//         {\n//             label: \"Posts\",\n//             value: \"2,390\",\n//             percentage: \"4.7%\",\n//             increase: true,\n//             chartLabels: [null, null, null, null, null, null, null],\n//             attrs: {md: \"6\", sm: \"6\"},\n//             datasets: [\n//                 {\n//                     label: \"Today\",\n//                     fill: \"start\",\n//                     borderWidth: 1.5,\n//                     backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n//                     borderColor: \"rgb(0, 184, 216)\",\n//                     data: [1, 2, 1, 3, 5, 4, 7]\n//                 }\n//             ]\n//         },\n//         {\n//             label: \"Pages\",\n//             value: \"182\",\n//             percentage: \"12.4\",\n//             increase: true,\n//             chartLabels: [null, null, null, null, null, null, null],\n//             attrs: {md: \"6\", sm: \"6\"},\n//             datasets: [\n//                 {\n//                     label: \"Today\",\n//                     fill: \"start\",\n//                     borderWidth: 1.5,\n//                     backgroundColor: \"rgba(23,198,113,0.1)\",\n//                     borderColor: \"rgb(23,198,113)\",\n//                     data: [1, 2, 3, 3, 3, 4, 4]\n//                 }\n//             ]\n//         },\n//         {\n//             label: \"Comments\",\n//             value: \"8,147\",\n//             percentage: \"3.8%\",\n//             increase: false,\n//             decrease: true,\n//             chartLabels: [null, null, null, null, null, null, null],\n//             attrs: {md: \"4\", sm: \"6\"},\n//             datasets: [\n//                 {\n//                     label: \"Today\",\n//                     fill: \"start\",\n//                     borderWidth: 1.5,\n//                     backgroundColor: \"rgba(255,180,0,0.1)\",\n//                     borderColor: \"rgb(255,180,0)\",\n//                     data: [2, 3, 3, 3, 4, 3, 3]\n//                 }\n//             ]\n//         },\n//         {\n//             label: \"New Customers\",\n//             value: \"29\",\n//             percentage: \"2.71%\",\n//             increase: false,\n//             decrease: true,\n//             chartLabels: [null, null, null, null, null, null, null],\n//             attrs: {md: \"4\", sm: \"6\"},\n//             datasets: [\n//                 {\n//                     label: \"Today\",\n//                     fill: \"start\",\n//                     borderWidth: 1.5,\n//                     backgroundColor: \"rgba(255,65,105,0.1)\",\n//                     borderColor: \"rgb(255,65,105)\",\n//                     data: [1, 7, 1, 3, 1, 4, 8]\n//                 }\n//             ]\n//         },\n//         {\n//             label: \"Subscribers\",\n//             value: \"17,281\",\n//             percentage: \"2.4%\",\n//             increase: false,\n//             decrease: true,\n//             chartLabels: [null, null, null, null, null, null, null],\n//             attrs: {md: \"4\", sm: \"6\"},\n//             datasets: [\n//                 {\n//                     label: \"Today\",\n//                     fill: \"start\",\n//                     borderWidth: 1.5,\n//                     backgroundColor: \"rgb(0,123,255,0.1)\",\n//                     borderColor: \"rgb(0,123,255)\",\n//                     data: [3, 2, 3, 2, 4, 5, 4]\n//                 }\n//             ]\n//         }\n//     ]\n// };\nconst mapStateToProps = state => ({\n    smallStats: state.adminReducer\n});\nconst mapDispatchToProps = dispatch => ({\n    getStats: () => dispatch(adminActions.getStats())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogOverview);\n","import React, {Component} from 'react';\nimport Nav from \"../HomeAdmin/Header/Nav\";\n\nimport Modal from \"../HomeAdmin/Modal\";\nimport BlogOverview from \"./BlogOverview\";\nimport \"./shards-dashboards.1.1.0.min.css\"\nclass MainDashboard extends Component {\n    render() {\n        return (\n            <div id=\"page-top\">\n                <div id=\"wrapper\">\n                    <Nav/>\n                    <BlogOverview/>\n                </div>\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n                    <i className=\"fas fa-angle-up\"/>\n                </a>\n                <Modal/>\n            </div>\n        );\n    }\n}\n\nexport default MainDashboard;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport * as messageActions from \"../../Actions/message.action.js\";\nimport {connect} from \"react-redux\";\nimport chatGroupsImg from \"./imgchatgroup.png\"\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport * as configSocket from \"../../socket/configSocket\";\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass ListUsers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            friends: [],\n            messageId: \"\"\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        // if (nextProps.converId) {\n        //     const arrSortHasMessage = nextProps.friends.map(item => {\n        //         if (item._id === nextProps.converId) {\n        //             item.updatedAt = Date.now();\n        //             return item\n        //         }\n        //         return item\n        //     });\n        //\n        //     return this.setState({\n        //         friends: sortCreatedAt(arrSortHasMessage),\n        //         messages: nextProps.messages\n        //     })\n        // }\n\n        const arrHasMessage = [];\n        nextProps.friends.forEach(item => {\n            if (Array.isArray(item.messages) && item.messages.length) {\n\n                switch (item.messages[item.messages.length - 1].messageType) {\n\n                    case \"text\":\n                        if (item.messages[item.messages.length - 1].senderId === user._id) {\n                            return arrHasMessage.push({\n                                ...item,\n                                firstMessage: \"You: \" + item.messages[item.messages.length - 1].text\n                            });\n                        }\n                        return arrHasMessage.push({\n                            ...item,\n                            firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \"\n                                + item.messages[item.messages.length - 1].sender.firstName + \": \"\n                                + item.messages[item.messages.length - 1].text\n                        });\n                    case \"image\":\n                        if (item.messages[item.messages.length - 1].senderId === user._id) {\n                            return arrHasMessage.push({...item, firstMessage: \"You sent an image.\"});\n                        }\n                        return arrHasMessage.push({\n                            ...item,\n                            firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \" +\n                                item.messages[item.messages.length - 1].sender.firstName + \" sent an image.\"\n                        });\n                    case \"file\":\n                        if (item.messages[item.messages.length - 1].senderId === user._id) {\n                            return arrHasMessage.push({...item, firstMessage: \"You sent an attachment.\"})\n                        }\n                        return arrHasMessage.push({\n                            ...item,\n                            firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \" +\n                                item.messages[item.messages.length - 1].sender.firstName + \" sent an attachment.\"\n                        })\n                }\n            } else {\n                arrHasMessage.push(item)\n            }\n\n        });\n        this.setState({\n            friends: arrHasMessage,\n            messages: nextProps.messages\n        })\n    }\n\n    requestSendMessage = () => {\n        configSocket.socket.on(\"request-send-message\", data => {\n\n            this.props.updatedAtWhenSubmit(data.conversationId, this.state.friends);\n            if (data.chatGroupId) {\n\n                const chatGroup = document.getElementById(data.chatGroupId);\n                chatGroup.style.fontWeight = \"900\";\n                chatGroup.style.cssText = 'color: #000 !important';\n                switch (data.message.messageType) {\n                    case \"text\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You: \" + data.message.text\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \": \" + data.message.text;\n                    case \"image\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You sent an image.\";\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \" sent an image.\";\n                    case \"file\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You sent an attachment.\";\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \" sent an attachment.\"\n                }\n            } else {\n\n                const chatGroup = document.getElementById(data.message.senderId);\n                chatGroup.style.fontWeight = \"900\";\n                chatGroup.style.cssText = 'color: #000 !important';\n                switch (data.message.messageType) {\n                    case \"text\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You: \" + data.message.text\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \": \" + data.message.text;\n                    case \"image\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You sent an image.\";\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \" sent an image.\";\n                    case \"file\":\n                        if (data.message.senderId === user._id) {\n                            return chatGroup.innerHTML = \"You sent an attachment.\";\n                        }\n                        return chatGroup.innerHTML = data.message.sender.lastName + \" \" + data.message.sender.firstName + \" sent an attachment.\"\n                }\n            }\n        })\n    };\n\n    handleChange = (e) => {\n        const arr = [];\n        this.state.friends.forEach(item => {\n            if (!item.members) {\n                const fullName = item.user[0].lastName + \" \" + item.user[0].firstName;\n                if ((item.user[0].email.toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1\n                    || this.toSlug(fullName).toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1)\n                    && e.target.value.length !== 0) {\n                    arr.push(item)\n                }\n            } else if ((this.toSlug(item.name).toLowerCase().trim().indexOf(e.target.value.toLowerCase().trim()) !== -1) && e.target.value.length !== 0) {\n                arr.push(item)\n            }\n\n        });\n        if (arr.length === 0) {\n            const arrHasMessage = [];\n            this.props.friends.forEach(item => {\n                if (Array.isArray(item.messages) && item.messages.length) {\n                    switch (item.messages[item.messages.length - 1].messageType) {\n                        case \"text\":\n                            if (item.messages[item.messages.length - 1].senderId === user._id) {\n                                return arrHasMessage.push({\n                                    ...item,\n                                    firstMessage: \"You: \" + item.messages[item.messages.length - 1].text\n                                });\n                            }\n                            return arrHasMessage.push({\n                                ...item,\n                                firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \"\n                                    + item.messages[item.messages.length - 1].sender.firstName + \": \"\n                                    + item.messages[item.messages.length - 1].text\n                            });\n                        case \"image\":\n                            if (item.messages[item.messages.length - 1].senderId === user._id) {\n                                return arrHasMessage.push({...item, firstMessage: \"You sent an image.\"});\n                            }\n                            return arrHasMessage.push({\n                                ...item,\n                                firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \" +\n                                    item.messages[item.messages.length - 1].sender.firstName + \" sent an image.\"\n                            });\n                        case \"file\":\n                            if (item.messages[item.messages.length - 1].senderId === user._id) {\n                                return arrHasMessage.push({...item, firstMessage: \"You sent an attachment.\"})\n                            }\n                            return arrHasMessage.push({\n                                ...item,\n                                firstMessage: item.messages[item.messages.length - 1].sender.lastName + \" \" +\n                                    item.messages[item.messages.length - 1].sender.firstName + \" sent an attachment.\"\n                            })\n                    }\n                } else {\n                    arrHasMessage.push(item)\n                }\n            });\n\n            this.setState({friends: arrHasMessage})\n        } else {\n            this.setState({friends: arr})\n        }\n\n    };\n\n    toSlug = (str) => {\n        // Chuyển hết sang chữ thường\n        str = str.toLowerCase();\n\n        // xóa dấu\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n        str = str.replace(/(đ)/g, 'd');\n\n        // Xóa ký tự đặc biệt\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n        return str;\n    };\n\n    componentDidMount() {\n        this.requestSendMessage();\n        configSocket.config();\n    }\n\n    onClickGetFriends = () => {\n        this.setState({friends: this.props.friends})\n    };\n    onClickGetChatGroups = () => {\n        const chatGroups = this.props.friends.filter(friend => friend.members);\n        this.setState({friends: chatGroups})\n    };\n    onGetChatGroupId = (conversationId) => {\n        let inputMessage = document.getElementById(\"input-message\" + conversationId);\n        inputMessage.value = \"\";\n        this.props.getChatGroupId(conversationId);\n    };\n    onGetConversationId = (conversationId) => {\n        this.props.getConversationId(conversationId);\n    };\n    // updateScroll = () => {\n    //     $('.chatmsg-container').animate({scrollTop: $('.chatmsg-container').prop('scrollHeight')}, 1000);\n    // };\n    updateScroll = () => {\n        $('.chatmsg-container').animate({\n            scrollTop: $('.chatmsg-container')[0].scrollHeight\n        }, 1000);\n    };\n    // getTimeDifference = (updatedAt) => {\n    //     let statusMomentDiff = false;\n    //     let statusMomentFormat = false;\n    //     const momentDiff = moment(updatedAt).fromNow();\n    //     const momentFormat = moment(updatedAt).format(\"HH:mm\");\n    //     [...Array(60)].forEach((value, i) => {\n    //         let check1 = i + \" minutes ago\";\n    //         let check2 = i + \" hours ago\";\n    //         let check3 = i + \" days ago\";\n\n    //         switch (momentDiff) {\n    //             case check1:\n    //                 return statusMomentDiff = true;\n    //             case check2:\n    //                 return statusMomentDiff = true;\n    //             case check3:\n    //                 return statusMomentFormat = true;\n    //             case \"a few seconds ago\":\n    //                 return statusMomentDiff = true;\n    //             case \"a minute ago\":\n    //                 return statusMomentDiff = true;\n    //             case \"an hour ago\":\n    //                 return statusMomentDiff = true;\n    //             case \"an day ago\":\n    //                 return statusMomentFormat = true;\n    //         }\n    //     });\n            \n    //     if (statusMomentDiff && !statusMomentFormat) {\n    //         return momentFormat;\n    //     }\n    //     return momentDiff;\n\n    // };\n    onChangeIsRead = (conversationId) => {\n        const chatGroup = document.getElementById(conversationId);\n        chatGroup.style.fontWeight = \"normal\";\n        chatGroup.style.cssText = 'color: #868e96 !important';\n    };\n\n    render() {\n        return (\n            <div className=\"col-md-4 border-right\" id=\"chat-container\">\n                <div className=\"settings-tray settings-tray--le\">\n                    <img\n                        className=\"profile-image\"\n                        src={user.profileImage}\n                        alt=\"Profile img\"\n                    />\n                    <span className=\"settings-tray--right\">\n                        <Link to=\"/home\"><i className=\"fas fa-home\"/></Link>\n                        <i className=\"fa fa-facebook-messenger\"\n                           onClick={() => this.onClickGetFriends()}\n                        />\n                        <i className=\"fas fa-users\"\n                           onClick={() => this.onClickGetChatGroups()}\n                        />\n                    </span>\n                </div>\n                <div className=\"search-box\">\n                    <div className=\"input-wrapper\">\n                        <i className=\"fas fa-search\"/>\n                        <input type=\"text\" name=\"name\" id=\"name\" className=\"txt\" tabIndex=\"1\"\n                               onChange={this.handleChange}\n                               placeholder=\"Seach...\" required/>\n                    </div>\n                </div>\n                <div className=\"list-users\">\n                    {\n                        this.state.friends.map((friend, i) => (\n                            friend.members ? (\n                                <div key={i}\n                                     className=\"friend-drawer friend-drawer--onhover\"\n                                     onClick={() => {\n                                         this.onGetChatGroupId(friend._id);\n                                         this.onGetConversationId(friend._id);\n                                         this.onChangeIsRead(friend.chatGroupId)\n                                     }}\n                                >\n                                    <Link to={\"/home/message/\" + friend._id}\n                                          className=\"chat-group-left\"\n                                          onClick={() => this.updateScroll()}\n                                    >\n                                        <img\n                                            className=\"profile-image\"\n                                            src={chatGroupsImg}\n                                            alt=\"anh friend dad\"\n                                        />\n                                        <div className=\"text\">\n                                            {\n                                                friend.name.length > 19 ? (\n                                                    <div>\n                                                        <h6 style={{\n                                                            color: \"#dc3545\",\n                                                            fontWeight: 600,\n                                                            display: \"inline-block\"\n                                                        }}>{friend.name.substr(0, 16)}</h6><span\n                                                        style={{fontSize: \"1rem\"}}>...</span>\n                                                    </div>\n                                                ) : (<h6 style={{color: \"#dc3545\", fontWeight: 600}}>{friend.name}</h6>)\n                                            }\n\n                                            <p id={friend.chatGroupId} className=\"text-muted\">{friend.firstMessage}</p>\n                                        </div>\n\n                                        <span\n                                            className=\"time text-muted small\">{moment(friend.updatedAt).fromNow()}</span>\n                                    </Link>\n                                </div>\n                            ) : (\n                                <div\n                                    className=\"friend-drawer friend-drawer--onhover\"\n                                    key={i}\n                                    onClick={() => {\n                                        this.onGetChatGroupId(friend._id);\n                                        this.onGetConversationId(friend._id);\n                                        this.onChangeIsRead(friend.user[0]._id);\n                                    }}\n                                >\n                                    <Link to={\"/home/message/\" + friend._id}\n                                          className=\"chat-group-left\"\n                                          onClick={() => this.updateScroll()}\n                                    >\n                                        <img\n                                            className=\"profile-image\"\n                                            src={friend.user[0].profileImage}\n                                            alt\n                                        />\n                                        <div className=\"text\">\n                                            {\n                                                (friend.user[0].lastName + friend.user[0].firstName).length > 19 ? (\n                                                    <h6>{(friend.user[0].lastName + \" \" + friend.user[0].firstName).substr(0, 17)}...</h6>\n                                                ) : (<h6>{friend.user[0].lastName} {friend.user[0].firstName}</h6>)\n                                            }\n\n                                            <p id={friend.user[0]._id} className=\"text-muted\">{friend.firstMessage}</p>\n                                        </div>\n                                        <span\n                                            className=\"time text-muted small\">{moment(friend.updatedAt).fromNow()}\n                                        </span>\n                                    </Link>\n\n                                </div>\n                            )\n                        ))\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\n// const sortCreatedAt = (data) => {\n//     return data.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n// };\n\nconst mapStateToProps = state => ({\n    friends: state.messageReducer.friends,\n    conversationId: state.messageReducer.conversationId,\n    messages: state.messageReducer.messages,\n});\nconst mapDispatchToProps = dispatch => ({\n    getChatGroupId: (conversationId) => dispatch(messageActions.getChatGroupId(conversationId)),\n    getConversationId: (conversationId) => dispatch(messageActions.getConversationId(conversationId)),\n    updatedAtWhenSubmit: (conversationId, friends) => dispatch(messageActions.updatedAtWhenSubmit(conversationId, friends)),\n    changeIsRead: (messageId) => dispatch(messageActions.changeIsRead(messageId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUsers);\n","import React, {Component} from 'react';\nimport * as messageActions from \"../../Actions/message.action\";\nimport {connect} from \"react-redux\";\nimport chatGroupsImg from \"./imgchatgroup.png\"\nimport Picker from 'emoji-picker-react';\nimport meow from \"./meo.jpg\"\nimport {ObjectID} from 'bson';\nimport $ from 'jquery';\nimport * as configSocket from \"../../socket/configSocket\";\n\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass ChatFrame extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            friends: [],\n            chosenEmoji: \"\",\n            isEmoji: false,\n            messages: [],\n            message: \"\",\n            imgUrl: undefined\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            friends: nextProps.friends,\n            messages: nextProps.messages,\n            conversationId: nextProps.conversationId\n        })\n    }\n\n    componentDidMount() {\n        this.requestSendMessage();\n\n    }\n\n\n//     appendReceivedMessage = (conversationId, message) => {\n//         // <div className=\"row no-gutters\">\n//         //     <div className={message.senderId === user._id ?\n//         //         \"col-md-3 offset-md-9\" : \"col-md-3\"}>\n//         //         <div className={message.senderId === user._id\n//         //             ? \"chat-bubble chat-bubble--right\" :\n//         //             \"chat-bubble chat-bubble--left\"}>\n//         const chatMessageContainer = document.getElementById(conversationId);\n//         const rowNoGutters = document.createElement(\"div\");\n//         const col = document.createElement('div');\n//         const chatBubble = document.createElement('div');\n//         const span = document.createElement('span');\n//         const img = document.createElement('img');\n//         rowNoGutters.className = \"row\";\n//         rowNoGutters.className += \"no-gutters\";\n//         if (message.senderId === user._id) {\n//             col.className = \"col-md-3\";\n//             col.className += \"offset-md-9\";\n//             chatBubble.className = \"chat-bubble\";\n//             chatBubble.className += \"chat-bubble--right\";\n//             img.className = \"img-message-right\";\n//         } else {\n//             col.className = \"col-md-3\";\n//             chatBubble.className = \"chat-bubble\";\n//             chatBubble.className += \"chat-bubble--left\";\n//             img.className = \"img-message-left\";\n//         }\n//         img.src = message.sender.profileImg;\n//         img.alt = \"anh dai dien\";\n//         span.innerText = message.text;\n//         span.append(img);\n//         chatBubble.append(span);\n//         col.append(chatBubble);\n//         rowNoGutters.append(col);\n//         chatMessageContainer.append(rowNoGutters);\n//     };\n\n    requestSendMessage = () => {\n        configSocket.socket.on(\"request-send-message\", data => {\n            // this.appendReceivedMessage(data.conversationId, data.message);\n            const conversations = this.state.friends.map(fi => {\n                if (fi._id === data.conversationId) {\n                    fi.messages.push(data.message);\n                    return fi\n                }\n                return fi\n            });\n            // this.props.loadMessageSocket(data.conversationId, data.message);\n            // this.state.messages.push(data.message);\n            this.setState({friends: conversations});\n            this.updateScroll();\n        })\n    };\n\n    onEmojiClick = (event, emojiObject) => {\n        let inputMessage = document.getElementById(\"input-message\" + this.state.conversationId);\n        console.log(inputMessage);\n        inputMessage.value += emojiObject.emoji;\n\n    };\n    showEmoji = () => {\n        this.setState({isEmoji: !this.state.isEmoji})\n\n    };\n\n    showName = () => {\n        const conversation = this.state.friends.find(fi => fi._id === this.props.conversationId);\n\n        if (conversation && conversation.members) {\n            return conversation.name\n        }\n        if (conversation && conversation.user[0]) {\n            return conversation.user[0].lastName + \" \" + conversation.user[0].firstName\n        }\n\n    };\n    showImg = () => {\n        const conversation = this.state.friends.find(fi => fi._id === this.props.conversationId);\n\n        if (conversation && conversation.members) {\n            return chatGroupsImg\n        }\n        if (conversation && conversation.user[0]) {\n            return conversation.user[0].profileImage\n        }\n\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        document.getElementById(\"input-message\" + this.state.conversationId).required = true;\n        const friend = this.state.friends.find(fi => fi._id === this.props.conversationId);\n        let inputMessage = document.getElementById(\"input-message\" + this.state.conversationId);\n        if (friend && friend.members) {\n            const message = this.getMessage(user, friend, inputMessage);\n            const conversations = this.state.friends.map(fi => {\n                if (fi._id === friend._id) {\n                    fi.messages.push(message);\n                    return fi\n                }\n                return fi\n            });\n            this.setState({friends: conversations, imgUrl: undefined});\n            this.getFirstMessageWhenSubmit(friend.chatGroupId, message);\n            this.props.getConversationIdWhenSubmit(friend._id);\n            this.props.updatedAtWhenSubmit(friend._id, this.state.friends);\n            inputMessage.value = \"\";\n            this.updateScroll();\n            configSocket.socket.emit('send-message', {\n                message: message,\n                chatGroupId: friend.chatGroupId,\n                conversationId: friend._id\n            });\n            return this.props.addMessage(message, friend.messageAmount);\n        }\n        if (friend && friend.user[0]) {\n            const message = this.getMessage(user, friend, inputMessage);\n            const conversations = this.state.friends.map(fi => {\n                if (fi._id === friend._id) {\n                    fi.messages.push(message);\n                    return fi\n                }\n                return fi\n            });\n            this.setState({messages: conversations, imgUrl: undefined});\n            this.getFirstMessageWhenSubmit(friend.user[0]._id, message);\n            this.props.getConversationIdWhenSubmit(friend._id);\n            this.props.updatedAtWhenSubmit(friend._id, this.state.friends);\n            inputMessage.value = \"\";\n            this.updateScroll();\n\n            this.props.addMessage(message, null);\n            configSocket.socket.emit('send-message', {\n                message: message,\n                contactId: friend.user[0]._id,\n                conversationId: friend._id\n            });\n        }\n\n    };\n    getFirstMessageWhenSubmit = (receiverId, message) => {\n        const chatGroup = document.getElementById(receiverId);\n        switch (message.messageType) {\n            case \"text\":\n                if (message.senderId === user._id) {\n                    return chatGroup.innerHTML = \"You: \" + message.text\n                }\n                return chatGroup.innerHTML = message.sender.lastName + \" \" + message.sender.firstName + \": \" + message.text;\n            case \"image\":\n                if (message.senderId === user._id) {\n                    return chatGroup.innerHTML = \"You sent an image.\";\n                }\n                return chatGroup.innerHTML = message.sender.lastName + \" \" + message.sender.firstName + \" sent an image.\";\n            case \"file\":\n                if (message.senderId === user._id) {\n                    return chatGroup.innerHTML = \"You sent an attachment.\";\n                }\n                return chatGroup.innerHTML = message.sender.lastName + \" \" + message.sender.firstName + \" sent an attachment.\"\n        }\n    };\n\n    getMessage = (user, friend, inputMessage) => {\n        if (friend && friend.members) {\n            if (!this.state.imgUrl) {\n                return {\n                    messageId: new ObjectID(),\n                    senderId: user._id,\n                    receiverId: friend.chatGroupId,\n                    conversationType: \"group\",\n                    messageType: \"text\",\n                    sender: {\n                        senderId: user._id,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        profileImg: user.profileImage,\n                    },\n                    receiver: {\n                        receiverId: friend.chatGroupId,\n                        firstName: friend.name,\n                        lastName: null,\n                        profileImg: null,\n                    },\n                    text: inputMessage.value,\n                    createdAt: Date.now()\n                };\n            } else {\n                return {\n                    messageId: new ObjectID(),\n                    senderId: user._id,\n                    receiverId: friend.chatGroupId,\n                    conversationType: \"group\",\n                    messageType: \"image\",\n                    sender: {\n                        senderId: user._id,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        profileImg: user.profileImage,\n                    },\n                    receiver: {\n                        receiverId: friend.chatGroupId,\n                        firstName: friend.name,\n                        lastName: null,\n                        profileImg: null,\n                    },\n                    fileUrl: this.state.imgUrl,\n                    createdAt: Date.now()\n                };\n            }\n        }\n\n        if (friend && friend.user[0]) {\n            if (!this.state.imgUrl) {\n                return {\n                    messageId: new ObjectID(),\n                    senderId: user._id,\n                    receiverId: friend.user[0]._id,\n                    conversationType: \"personal\",\n                    messageType: \"text\",\n                    sender: {\n                        senderId: user._id,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        profileImg: user.profileImage,\n                    },\n                    receiver: {\n                        receiverId: friend.user[0]._id,\n                        firstName: friend.user[0].firstName,\n                        lastName: friend.user[0].lastName,\n                        profileImg: friend.user[0].profileImage,\n                    },\n                    text: inputMessage.value,\n                    createdAt: Date.now()\n                };\n            } else {\n                return {\n                    messageId: new ObjectID(),\n                    senderId: user._id,\n                    receiverId: friend.user[0]._id,\n                    conversationType: \"personal\",\n                    messageType: \"image\",\n                    sender: {\n                        senderId: user._id,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        profileImg: user.profileImage,\n                    },\n                    receiver: {\n                        receiverId: friend.user[0]._id,\n                        firstName: friend.user[0].firstName,\n                        lastName: friend.user[0].lastName,\n                        profileImg: friend.user[0].profileImage,\n                    },\n                    fileUrl: this.state.imgUrl,\n                    createdAt: Date.now()\n                };\n            }\n        }\n\n\n    };\n\n    updateScroll = () => {\n        $('.chatmsg-container').animate({\n            scrollTop: $('.chatmsg-container')[0].scrollHeight\n        }, 1000);\n    };\n    isChangeUpLoad = async (e) => {\n        const formData = new FormData();\n        formData.append(\"file\", e.target.files[0]);\n        formData.append('upload_preset', 'tuanpham');\n        const path = await messageActions.uploadImgUrl(formData);\n        this.setState({\n            imgUrl: path\n        });\n        document.getElementById(\"input-message\" + this.state.conversationId).required = false;\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"col-md-8\" id=\"chat-container\">\n                <div className=\"settings-tray settings-tray--ri\">\n                    <div className=\"friend-drawer no-gutters friend-drawer--grey\">\n                        <img\n                            className=\"profile-image\"\n                            src={this.showImg()}\n                            alt\n                        />\n                        <div className=\"text\">\n                            <h6>{this.showName()}</h6>\n                            <p className=\"text-muted\">\n                                Don’t cry because it’s over, smile because it happened...\n                            </p>\n                        </div>\n                        <span className=\"settings-tray--right\">\n                            <i className=\"fas fa-video\"/>\n                            <i className=\"far fa-image\"/>\n                            <i className=\"fas fa-paperclip\"/>\n                        </span>\n                    </div>\n                </div>\n                {\n                    this.state.friends.map((value, index) => {\n                        if (value._id === this.state.conversationId) {\n                            return (\n                                <div className=\"chat-panel \" key={index}>\n                                    <div className=\"chatmsg-container\" id={value._id}>\n                                        {\n\n                                            value.messages.map(message => {\n                                                if (message.messageType === \"text\") {\n                                                    return (\n                                                        <div className=\"row no-gutters\">\n                                                            <div className={message.senderId === user._id ?\n                                                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>\n                                                                <div className={message.senderId === user._id\n                                                                    ? \"chat-bubble chat-bubble--right\" :\n                                                                    \"chat-bubble chat-bubble--left\"}>\n                                                                    <span>\n                                                                         <img\n                                                                             className={message.senderId === user._id ? \"img-message-right\" : \"img-message-left\"}\n                                                                             src={message.sender.profileImg}\n                                                                             alt=\"\"/>\n                                                                        {message.text}\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n\n                                                if (message.messageType === \"image\") {\n                                                    return (\n                                                        <div className=\"row no-gutters\">\n                                                            <div className={message.senderId === user._id ?\n                                                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>\n                                                                <div\n                                                                    className={message.senderId === user._id ?\n                                                                        \"chat-bubble chat-bubble--right chat-bubble-img-right\" :\n                                                                        \"chat-bubble chat-bubble--left chat-bubble-img-left\"}>\n                                                                    <img src={message.fileUrl} alt=\"#111 \"/>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                            })\n                                        }\n\n                                    </div>\n\n                                    <div id=\"container-emoji\">\n                                        {this.state.isEmoji && (<Picker onEmojiClick={this.onEmojiClick}/>)}\n                                    </div>\n                                    {this.state.imgUrl && (\n                                        <div className=\"img-load-container\">\n                                            <img src={this.state.imgUrl} alt=\"anh load\"/>\n                                        </div>\n                                    )}\n                                    <div className=\"row with-765\">\n                                        <div className=\"col-12\">\n                                            <div className=\"chat-box-tray\">\n                                                <i className=\"far fa-smile-beam\" onClick={() => this.showEmoji()}/>\n                                                <label htmlFor=\"myInput\"> <i className=\"fas fa-image\"/></label>\n                                                <input id=\"myInput\"\n                                                       type=\"file\"\n                                                       name=\"file\"\n                                                       className=\"profileImg\"\n                                                       style={{display: 'none'}}\n                                                       onChange={this.isChangeUpLoad}\n                                                />\n                                                {/*<BsImageFill/>*/}\n\n                                                <i className=\"fas fa-paperclip\"/>\n                                                <i className=\"fas fa-microphone\"/>\n                                                <form onSubmit={this.handleSubmit}>\n                                                    <input type=\"text\" name=\"message\"\n                                                           id={\"input-message\" + value._id}\n                                                           className=\"txt\"\n                                                           onChange={this.handleChange}\n                                                           required/>\n                                                    <button type=\"submit\" id=\"submit-message\">\n                                                        <i className=\"fas fa-paper-plane\"/>\n                                                    </button>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        } else {\n                            return (\n                                <div style={{display: 'none'}} className=\"chat-panel \" key={index}>\n                                    <div className=\"chatmsg-container\" id={value._id}>\n                                        {\n\n                                            value.messages.map(message => {\n                                                if (message.messageType === \"text\") {\n                                                    return (\n                                                        <div className=\"row no-gutters\">\n                                                            <div className={message.senderId === user._id ?\n                                                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>\n                                                                <div className={message.senderId === user._id\n                                                                    ? \"chat-bubble chat-bubble--right\" :\n                                                                    \"chat-bubble chat-bubble--left\"}>\n                                                    <span>\n                                                         <img\n                                                             className={message.senderId === user._id ? \"img-message-right\" : \"img-message-left\"}\n                                                             src={message.sender.profileImg}\n                                                             alt=\"\"/>\n                                                        {message.text}\n                                                    </span>\n\n\n                                                                </div>\n\n                                                            </div>\n\n                                                        </div>\n                                                    )\n                                                }\n\n                                                if (message.messageType === \"image\") {\n                                                    return (\n                                                        <div className=\"row no-gutters\">\n                                                            <div className={message.senderId === user._id ?\n                                                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>\n                                                                <div\n                                                                    className={message.senderId === user._id ?\n                                                                        \"chat-bubble chat-bubble--right chat-bubble-img-right\" :\n                                                                        \"chat-bubble chat-bubble--left chat-bubble-img-left\"}>\n                                                                    <img src={message.fileUrl} alt=\"#111 \"/>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                            })\n                                        }\n\n                                    </div>\n\n                                    <div id=\"container-emoji\">\n                                        {this.state.isEmoji && (<Picker onEmojiClick={this.onEmojiClick}/>)}\n                                    </div>\n                                    {this.state.imgUrl && (\n                                        <div className=\"img-load-container\">\n                                            <img src={this.state.imgUrl} alt=\"anh load\"/>\n                                        </div>\n                                    )}\n                                    <div className=\"row with-765\">\n                                        <div className=\"col-12\">\n                                            <div className=\"chat-box-tray\">\n                                                <i className=\"far fa-smile-beam\" onClick={() => this.showEmoji()}/>\n                                                <label htmlFor=\"myInput\"> <i className=\"fas fa-image\"/></label>\n                                                <input id=\"myInput\"\n                                                       type=\"file\"\n                                                       name=\"file\"\n                                                       className=\"profileImg\"\n                                                       style={{display: 'none'}}\n                                                       onChange={this.isChangeUpLoad}\n                                                />\n                                                {/*<BsImageFill/>*/}\n\n                                                <i className=\"fas fa-paperclip\"/>\n                                                <i className=\"fas fa-microphone\"/>\n                                                <form onSubmit={this.handleSubmit}>\n                                                    <input type=\"text\" name=\"message\"\n                                                           id={\"input-message\" + value._id}\n                                                           className=\"txt\"\n                                                           onChange={this.handleChange}\n                                                           required/>\n                                                    <button type=\"submit\" id=\"submit-message\">\n                                                        <i className=\"fas fa-paper-plane\"/>\n                                                    </button>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n\n                        }\n\n                    })\n                }\n                {/*<div className=\"chat-panel \">*/}\n                {/*    <div className=\"chatmsg-container\">*/}\n                {/*        {*/}\n\n                {/*            this.state.messages.map((message, i) => {*/}\n                {/*                if (message.messageType === \"text\") {*/}\n                {/*                    return (*/}\n                {/*                        <div className=\"row no-gutters\" key={i} id={message.senderId}>*/}\n                {/*                            <div className={message.senderId === user._id ?*/}\n                {/*                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>*/}\n                {/*                                <div className={message.senderId === user._id*/}\n                {/*                                    ? \"chat-bubble chat-bubble--right\" :*/}\n                {/*                                    \"chat-bubble chat-bubble--left\"}>*/}\n                {/*                                    <span>*/}\n                {/*                                         <img*/}\n                {/*                                             className={message.senderId === user._id ? \"img-message-right\" : \"img-message-left\"}*/}\n                {/*                                             src={message.sender.profileImg}*/}\n                {/*                                             alt=\"\"/>*/}\n                {/*                                        {message.text}*/}\n                {/*                                    </span>*/}\n\n\n                {/*                                </div>*/}\n\n                {/*                            </div>*/}\n\n                {/*                        </div>*/}\n                {/*                    )*/}\n                {/*                }*/}\n\n                {/*                if (message.messageType === \"image\") {*/}\n                {/*                    return (*/}\n                {/*                        <div className=\"row no-gutters\" key={i}>*/}\n                {/*                            <div className={message.senderId === user._id ?*/}\n                {/*                                \"col-md-3 offset-md-9\" : \"col-md-3\"}>*/}\n                {/*                                <div*/}\n                {/*                                    className={message.senderId === user._id ?*/}\n                {/*                                        \"chat-bubble chat-bubble--right chat-bubble-img-right\" :*/}\n                {/*                                        \"chat-bubble chat-bubble--left chat-bubble-img-left\"}>*/}\n                {/*                                    <img src={message.fileUrl} alt=\"#111 \"/>*/}\n                {/*                                </div>*/}\n                {/*                            </div>*/}\n                {/*                        </div>*/}\n                {/*                    )*/}\n                {/*                }*/}\n                {/*            })*/}\n                {/*        }*/}\n\n                {/*    </div>*/}\n\n                {/*    <div id=\"container-emoji\">*/}\n                {/*        {this.state.isEmoji && (<Picker onEmojiClick={this.onEmojiClick}/>)}*/}\n                {/*    </div>*/}\n                {/*    {this.state.imgUrl && (*/}\n                {/*        <div className=\"img-load-container\">*/}\n                {/*            <img src={this.state.imgUrl} alt=\"anh load\"/>*/}\n                {/*        </div>*/}\n                {/*    )}*/}\n                {/*    <div className=\"row with-765\">*/}\n                {/*        <div className=\"col-12\">*/}\n                {/*            <div className=\"chat-box-tray\">*/}\n                {/*                <i className=\"far fa-smile-beam\" onClick={() => this.showEmoji()}/>*/}\n                {/*                <label htmlFor=\"myInput\"> <i className=\"fas fa-image\"/></label>*/}\n                {/*                <input id=\"myInput\"*/}\n                {/*                       type=\"file\"*/}\n                {/*                       name=\"file\"*/}\n                {/*                       className=\"profileImg\"*/}\n                {/*                       style={{display: 'none'}}*/}\n                {/*                       onChange={this.isChangeUpLoad}*/}\n                {/*                />*/}\n                {/*                /!*<BsImageFill/>*!/*/}\n\n                {/*                <i className=\"fas fa-paperclip\"/>*/}\n                {/*                <i className=\"fas fa-microphone\"/>*/}\n                {/*                <form onSubmit={this.handleSubmit}>*/}\n                {/*                    <input type=\"text\" name=\"message\" id=\"input-message\" className=\"txt\" tabIndex=\"1\"*/}\n                {/*                           onChange={this.handleChange}*/}\n                {/*                           required/>*/}\n                {/*                    <button type=\"submit\" id=\"submit-message\">*/}\n                {/*                        <i className=\"fas fa-paper-plane\"/>*/}\n                {/*                    </button>*/}\n                {/*                </form>*/}\n                {/*            </div>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    friends: state.messageReducer.friends,\n    messages: state.messageReducer.messages,\n    conversationId: state.messageReducer.conversationId,\n});\nconst mapDispatchToProps = dispatch => ({\n    addMessage: (message, messageAmount) => dispatch(messageActions.addMessage(message, messageAmount)),\n    getConversationIdWhenSubmit: (conversationId) => dispatch(messageActions.getConversationIdWhenSubmit(conversationId)),\n    updatedAtWhenSubmit: (conversationId, friends) => dispatch(messageActions.updatedAtWhenSubmit(conversationId, friends)),\n    loadMessageSocket: (conversationId, message) => dispatch(messageActions.loadMessageSocket(conversationId, message))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatFrame);\n","import React, {Component} from 'react';\nimport \"./css/main.css\"\nimport $ from 'jquery';\nimport ListUsers from \"./ListUsers\";\nimport ChatFrame from \"./ChatFrame\";\nimport {connect} from \"react-redux\";\nimport * as messageActions from \"../../Actions/message.action\";\nimport * as configSocket from \"../../socket/configSocket\";\n\n\nclass MasterMessage extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    // showMessage = () => {\n    //     $('.friend-drawer--onhover').on('click', function () {\n    //\n    //         $('.chat-bubble').hide('slow').show('slow');\n    //\n    //     });\n    // };\n\n    componentDidMount() {\n        configSocket.config();\n        const {match: {params}} = this.props;\n        this.props.getChatGroupId(params.conversationId);\n        this.props.getMessagesByParamsId(params.conversationId);\n        this.props.getContactsByStatusIsTrue();\n        // conversationChat.style.display = \"block\"\n    }\n\n    render() {\n        return (\n            <div className=\"master-message\">\n                <div className=\"container\">\n                    <div className=\"row no-gutters\">\n                        <ListUsers/>\n                        <ChatFrame/>\n\n                    </div>\n                </div>\n                <div id=\"footer\">\n                    <div className=\"foot\">\n                        <div className=\"social text-center\">\n                            <a href=\"https://www.facebook.com/phamminhtuan.317\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-facebook\"/>\n                            </a>\n                            <a href=\"https://www.facebook.com/groups/nhompi2020/\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">\n                                <i className=\"fas fa-users\"/>\n                            </a>\n                            <a href=\"#1\" target=\"_blank\">\n                                <i className=\"fab fa-font-awesome-flag\"/>\n                            </a>\n                            <a href=\"#1\">\n                                <i className=\"fab fa-youtube\"/>\n                            </a>\n                        </div>\n\n                        <p>Copyright © Tuan Pham 2020 All Rights Reserved.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({\n    getChatGroupId: (conversationId) => dispatch(messageActions.getChatGroupId(conversationId)),\n    getContactsByStatusIsTrue: () => dispatch(messageActions.getContactsByStatusIsTrue()),\n    getMessagesByParamsId: (conversationId) => dispatch(messageActions.getMessagesByParamsId(conversationId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MasterMessage);\n","import React, {Component} from 'react';\nimport imgFriend from '../images/profile/upload1.png'\n// import * as userActions from \"../../Actions/user.action\";\nimport * as contactActions from \"../../Actions/contact.action.js\";\nimport {connect} from \"react-redux\";\nimport * as userActions from \"../../Actions/user.action\";\nimport * as configSocket from \"../../socket/configSocket\";\nimport {ObjectID} from \"bson\";\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nclass Friends extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            contacts: [],\n            sentFriend: [],\n            notSentFriend: []\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const array = [];\n        nextProps.contacts.map(ct => {\n            if (ct.contactId === user._id) return array.push(ct);\n        });\n        let friends = [];\n        nextProps.contacts.map(ct => {\n            if (ct.userId !== user._id && !ct.status) return friends.push(ct)\n        });\n        const notSentFriend = difference(nextProps.users, nextProps.contacts);\n        this.setState({\n            sentFriend: array,\n            notSentFriend: notSentFriend,\n            countFriends: friends.length\n        })\n    }\n\n    requestAddFriend = () => {\n        configSocket.socket.on(\"request-add-friend\", data => {\n            this.state.sentFriend.unshift(data);\n            this.state.notSentFriend = this.state.notSentFriend.filter(u => u._id !== data.user[0]._id);\n            this.setState({\n                sentFriend: this.state.sentFriend,\n                notSentFriend: this.state.notSentFriend\n            })\n        });\n\n    };\n    emitCancelRequest = () => {\n        configSocket.socket.on(\"emit-cancel-request\", data => {\n            this.state.notSentFriend.unshift({\n                _id: data.user[0]._id,\n                firstName: data.user[0].firstName,\n                lastName: data.user[0].lastName,\n                profileImage: data.user[0].profileImage,\n            });\n            this.state.sentFriend = this.state.sentFriend.filter(u => u.user[0]._id !== data.user[0]._id);\n            this.setState({\n                sentFriend: this.state.sentFriend,\n                notSentFriend: this.state.notSentFriend\n            })\n        });\n    };\n\n    componentDidMount() {\n        this.props.getAllUsers();\n        this.props.getContacts();\n        this.requestAddFriend();\n        this.emitCancelRequest();\n    }\n\n    addFriend = (contactId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('add-friend', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"ADD_FRIEND\"\n        });\n        this.props.addFriend(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-society-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-society-\" + contactId);\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'none';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'block';\n        if (addFriend) addFriend.style.display = 'none';\n        if (cancelReq) cancelReq.style.display = 'block';\n\n\n    };\n    cancelRequest = (contactId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('cancel-request', {\n            contactId: contactId,\n            notificationId: notificationId,\n            type: \"CANCEL_REQUEST\"\n        });\n        this.props.cancelRequest(contactId, notificationId);\n        const addFriendSociety = document.getElementById(\"add-friend-society-\" + contactId);\n        const cancelReqSociety = document.getElementById(\"cancel-request-society-\" + contactId);\n        const addFriend = document.getElementById(\"add-friend-\" + contactId);\n        const cancelReq = document.getElementById(\"cancel-request-\" + contactId);\n        if (addFriendSociety) addFriendSociety.style.display = 'block';\n        if (cancelReqSociety) cancelReqSociety.style.display = 'none';\n        if (addFriend) addFriend.style.display = 'block';\n        if (cancelReq) cancelReq.style.display = 'none';\n\n    };\n    confirm = (senderId) => {\n        const notificationId = new ObjectID();\n        configSocket.socket.emit('confirm-friend', {\n            contactId: senderId,\n            notificationId: notificationId,\n            type: \"CONFIRM_FRIEND\"\n        });\n        this.state.sentFriend = this.state.sentFriend.filter(ct => ct.user[0]._id !== senderId);\n        this.props.confirmFriend(senderId, user._id, notificationId);\n        this.setState({sentFriend: this.state.sentFriend});\n\n        let friends = document.getElementById(\"friends\").innerHTML;\n        let bell = document.getElementById(\"bell\").innerHTML;\n        if (+friends[1] === 1 || +friends[1] === 0) {\n            document.getElementById(\"friends\").innerHTML = \"\"\n        } else {\n            document.getElementById(\"friends\").innerHTML = `(${+friends[1] - 1})`;\n        }\n\n        if (+bell[1] === 1 || +bell[1] === 0) {\n            document.getElementById(\"bell\").innerHTML = \"\"\n        } else {\n            document.getElementById(\"bell\").innerHTML = `(${+bell[1] - 1})`;\n        }\n    };\n    deleteContact = (contactId) => {\n        this.state.sentFriend = this.state.sentFriend.filter(ct => ct.user[0]._id !== contactId);\n        this.setState({sentFriend: this.state.sentFriend});\n        this.props.removeContact(contactId)\n    };\n\n    render() {\n        return (\n            <div className=\"people\">\n                <div className=\"row\">\n                    {\n                        this.state.sentFriend.map((contact, i) => {\n                            if (!contact.status) {\n                                return (\n                                    <div className=\"connection\" key={i}>\n                                        <img\n                                            src={contact.user[0].profileImage ? contact.user[0].profileImage : imgFriend}\n                                            alt=\" anh friend\"/>\n                                        <h5>{contact.user[0].lastName} {contact.user[0].firstName}</h5>\n                                        <p>10 <i className=\"fa fa-user\"/> Friends</p>\n                                        <div className=\"confirm-delete\">\n                                            <button\n                                                className=\"btn btn-primary\"\n                                                onClick={() => this.confirm(contact.user[0]._id)}\n                                            >\n                                                <i className=\"fas fa-user-plus\"/>Confirm\n                                            </button>\n                                            <button\n                                                className=\"btn btn-secondary\"\n                                                onClick={() => this.deleteContact(contact.user[0]._id)}\n                                            >\n                                                <i className=\"fas fa-user-times\"/>Delete\n                                            </button>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                {this.state.countFriends ? <hr/> : \"\"}\n                <div className=\"row\">\n                    {\n                        // this.mapUsers\n                        this.state.notSentFriend.map((friend, i) => {\n                                return (\n                                    <div className=\"connection\" key={i}>\n                                        <img src={friend.profileImage ? friend.profileImage : imgFriend}\n                                             alt=\" anh friend\"/>\n                                        <h5>{friend.lastName} {friend.firstName}</h5>\n                                        <p>10 <i className=\"fa fa-user\"/> Friends</p>\n                                        <button id={\"cancel-request-society-\" + friend._id}\n                                                className=\"btn btn-danger cancel-request\"\n                                                onClick={() => this.cancelRequest(friend._id)}\n                                                style={{display: 'none'}}\n                                        >\n                                            <i className=\"fas fa-user-times\"/>Cancel Request\n                                        </button>\n                                        <button id={\"add-friend-society-\" + friend._id}\n                                                className={\"btn btn-danger\"}\n                                                onClick={() => this.addFriend(friend._id)}\n                                        >\n                                            <i className=\"fas fa-user-plus\"/>Add Friend\n                                        </button>\n                                    </div>\n                                )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst difference = (A, B) => {\n    let count = 0, C = [];\n    for (let i = 0; i < A.length; i++) {\n        count = 0;\n        for (let j = 0; j < B.length; j++) {\n            if (A[i]._id === B[j].userId || A[i]._id === B[j].contactId) break;\n            count++;\n        }\n        if (count === B.length) {\n            C.push(A[i])\n        }\n    }\n    return C\n};\n\nconst mapStateToProps = state => ({\n    users: state.userReducer,\n    contacts: state.contactReducer.contacts\n});\nconst mapDispatchToProps = dispatch => ({\n    addFriend: (contactId, notificationId) => dispatch(contactActions.addFriend(contactId, notificationId)),\n    cancelRequest: (contactId, notificationId) => dispatch(contactActions.cancelRequest(contactId, notificationId)),\n    getAllUsers: () => dispatch(userActions.getAllUsers()),\n    getContacts: () => dispatch(contactActions.getContacts()),\n    confirmFriend: (senderId, receiverId, notificationId) => dispatch(contactActions.confirmFriend(senderId, receiverId, notificationId)),\n    removeContact: (contactId) => dispatch(contactActions.removeContact(contactId))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Friends);\n","import React, {Component} from 'react';\nimport Friends from \"./Friends\";\nimport Nav from \"../Home/Header/Nav\";\nimport LeftFixed from \"../Home/LeftFixed\";\nimport RightFixed from \"../Home/RightFixed\";\nimport \"./mainSociety.css\"\n\nclass MasterSociety extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         key: -1\n    //     }\n    // }\n    //\n    // getKey = (key) => {\n    //     this.setState({key: key})\n    // };\n\n    render() {\n        // console.log(this.state.key)\n        return (\n            <div>\n                <Nav/>\n                <div className=\"content\">\n                    <div className=\"wrapper\">\n                        <LeftFixed\n                        />\n                        <div className=\"mainnotfixed\">\n                            <Friends\n                            />\n                        </div>\n                        <RightFixed\n                        />\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default MasterSociety;\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport MainAuth from \"./Components/Auth/MainAuth\";\nimport PrivateRoute from './Components/Auth/PrivateRoute'\nimport PublicRoute from './Components/Auth/PublicRoute'\nimport MainHome from \"./Components/Home/MainHome\";\nimport MainHomeAdmin from \"./Components/Admin/HomeAdmin/MainHomeAdmin\";\nimport MainProfile from \"./Components/Profile/MainProfile\";\nimport MainMessage from \"./Components/Message/MainMessage\";\nimport RecoverForm from \"./Components/Auth/RecoverForm\";\nimport ResetPwForm from \"./Components/Auth/ResetPasswordForm\";\nimport MainTableUsers from \"./Components/Admin/HomeAdmin/TableUsers/MainTableUsers\";\nimport MainTablePosts from \"./Components/Admin/HomeAdmin/TablePosts/MainTablePosts\";\nimport MainDashboard from \"./Components/Admin/Dashboard/MainDashboard\";\nimport MasterMessage from \"./Components/Message/MasterMessage\";\nimport MasterSociety from \"./Components/Society/MasterSociety\";\n\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <PrivateRoute component={MasterSociety} path=\"/home/society\" exact/>\n                    <PrivateRoute component={MasterMessage} path=\"/home/message/:conversationId\" exact/>\n                    <PrivateRoute component={MainProfile} path=\"/home/profile/:userId\" exact/>\n                    <PublicRoute component={MainAuth} path=\"/\" exact restricted={true}/>\n                    <PublicRoute component={RecoverForm} path=\"/recover\" exact restricted={false}/>\n                    <PrivateRoute component={MainHome} path=\"/home\" exact/>\n                    <Route component={ResetPwForm} path=\"/reset/:token\" exact/>\n                    {/*<Route component={MainHomeAdmin} path=\"/home-admin\" exact/>*/}\n                    <Route component={MainDashboard} path=\"/home-admin\" exact/>\n                    <Route component={MainTableUsers} path=\"/table-users\" exact/>\n                    <Route component={MainTablePosts} path=\"/table-posts\" exact/>\n                </Switch>\n            </BrowserRouter>\n\n        )\n    }\n}\n\n\nexport default App;\n","import * as types from '../Constants/index.constant'\n\nconst initialState = {\n    message: \"\",\n    isReset: false,\n    successful: false,\n    currentUser: {}\n};\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.REGISTER_SUCCESS:\n            return {...state, message: action.payload, successful: true};\n        case types.LOGIN_SUCCESS:\n            return {...state, currentUser: action.payload};\n        case types.RESET_SUCCESS:\n            return {...state, isReset: action.payload};\n        case types.RESET_PASSWORD_SUCCESS:\n            return {...state, message: action.payload};\n        case types.REGISTER_FAIL:\n        case types.RESET_PASSWORD_FAIL:\n        case types.LOGIN_FAIL:\n            localStorage.removeItem('token');\n            return {...state, message: action.payload};\n\n        default:\n            return state\n    }\n};\n\nexport default authReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = [];\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_ALL_USERS:\n            state = action.payload;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport default userReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = [];\nconst postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CURRENT_USER_POSTS:\n            state = action.payload;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport default postReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = {};\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CURRENT_USER:\n            state = action.payload;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport default userReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = {};\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_USER_BY_ID:\n            state = action.payload;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport default userReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = {\n    contacts: [],\n    countFriends: 0,\n    isContact: undefined,\n    isAddFriend: undefined,\n    friends: [],\n    chatGroupId: \"\"\n};\nconst contactReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CONTACTS:\n            return {...state, contacts: action.payload};\n        case types.COUNT_FRIENDS:\n            return {...state, countFriends: action.payload};\n        case types.IS_CONTACT:\n            return {...state, isContact: action.payload};\n        case types.IS_ADD_FRIEND:\n            return {...state, isAddFriend: action.payload};\n        default:\n            return state\n    }\n};\n\nexport default contactReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = [];\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_STATS:\n            state = action.payload;\n            return state;\n        default:\n            return state\n    }\n};\n\nexport default adminReducer\n\n","import * as types from '../Constants/index.constant'\n\nconst initialState = {\n    friends: [],\n    conversationId: \"\",\n    messages: [],\n    converId: \"\",\n};\nconst messageReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.CONTACTS_BY_STATUS_IS_TRUE:\n            return {...state, friends: action.payload};\n        case types.GET_CHAT_GROUP_ID:\n            return {...state, conversationId: action.conversationId};\n        // case types.GET_CONVERSATION_ID:\n        //     const friend = state.friends.find(fi => fi._id === action.conversationId);\n        //     return {...state, messages: friend.messages};\n        case types.GET_CONVERSATION_ID_WHEN_SUBMIT:\n            return {...state, converId: action.converId};\n        // case types.GET_MESSAGES_BY_PARAMS_ID:\n        //     const conversation = action.payload.find(fi => fi._id === action.conversationId);\n        //     return {...state, messages: conversation.messages};\n        case types.LOAD_MESSAGE_SOCKET:\n            const con = state.friends.find(fi => fi._id === action.conversationId);\n            return {...state, messages: con.messages};\n        case types.UPDATED_AT_WHEN_SUBMIT:\n            const friends = action.payload.friends.map(item => {\n                if (item._id === action.payload.conversationId) {\n                    item.updatedAt = Date.now();\n                    return item\n                }\n                return item;\n            });\n            return {...state, friends: sortCreatedAt(friends)};\n        default:\n            return state\n    }\n};\nconst sortCreatedAt = (data) => {\n    return data.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n};\n\nexport default messageReducer\n\n","import {combineReducers} from 'redux'\nimport authReducer from './auth.reducer'\nimport userReducer from './user.reducer'\nimport postReducer from './post.reducer'\nimport currentUserReducer from './currentUser.reducer'\nimport getUserById from './getUserById.reducer'\nimport contactReducer from './contact.reducer'\nimport adminReducer from './admin.reducer'\nimport messageReducer from './message.reducer'\n\nconst myReducer = combineReducers({\n    authReducer,\n    userReducer,\n    postReducer,\n    currentUserReducer,\n    getUserById,\n    contactReducer,\n    adminReducer,\n    messageReducer\n\n});\n\nexport default myReducer\n","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport myReducer from \"./Reducers/index.reducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst store = createStore(\n    myReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './Store'\nimport {transitions, positions, Provider as AlertProvider} from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\n\nconst options = {\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    transition: transitions.SCALE\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n                <App/>\n        </AlertProvider>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}